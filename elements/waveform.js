/*
    # Waveform

    Expects waveform image generated by files/manager/audio.js

    ```html
    <b-waveform url="url/to/waveform.png"></b-waveform>
    <b-waveform url="url/to/waveform.png" playhead></b-waveform>
    ```

    ```js
    waveform.ts = 10 // move playhead to 10 seconds
    ```
*/
import { LitElement, html, css } from 'lit'

customElements.define('b-waveform', class extends LitElement{

    static properties = {
        url: {type: String},
        ts: {type: Number},
        progress: {type: Boolean, reflect: true},
        playhead: {type: Boolean, reflect: true}
    }

    static styles = css`
        :host {
            display: block;
            position:relative;
        }

        .waveform {
            width: 100%;
            height: var(--waveform-height, 50px);
            background: var(--waveform-color, var(--theme-text));
            mask: var(--waveform-url) left no-repeat;
            mask-size: auto var(--waveform-height, 50px);

            /*
                Full size waveform should be 100px tall and 10px for each second.
                Width of waveform will scale based on height
                So if waveform is 50px tall, pixel per second should be 5px

                This lets us give a ts in seconds to move the waveform to that position
            */
            --waveform-base-height: 100px;
            --waveform-base-pixel-per-second: 10px;
            --pixel-per-second: calc((var(--waveform-height, 50px) / var(--waveform-base-height)) * var(--waveform-base-pixel-per-second));

            mask-position: calc( (var(--ts, 0) * var(--pixel-per-second) * -1) + var(--waveform-offset, 0px));
        }

        .playhead {
            position: absolute;
            top: 0;
            left: var(--waveform-offset, 0px);
            width: 2px;
            height: 100%;
            background: var(--waveform-playhead-color, var(--theme));
            z-index: 10;
        }

        /* not ready yet */
        .progress {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: var(--waveform-progress-color, var(--theme));
        }

        :host(:not([progress])) .progress {
            display: none;
        }

        :host(:not([playhead])) .playhead {
            display: none;
        }

    `

    updated(){
        this.style.setProperty('--waveform-url', this.url ? `url(${this.url})` : '')
        this.style.setProperty('--ts', this.ts||0)
    }

    render(){return html`
        <div class="playhead" part="playhead"></div>
        <div class="waveform" part="waveform">
            <div class="progress" part="progress"></div>
        </div>
    `}

})

export default customElements.get('b-waveform')