{"version":3,"sources":["../../../node_modules/workbox-core/_version.js","../../../node_modules/workbox-core/_private/logger.js","../../../node_modules/workbox-core/models/messages/messages.js","../../../node_modules/workbox-core/models/messages/messageGenerator.js","../../../node_modules/workbox-core/_private/WorkboxError.js","../../../node_modules/workbox-core/_private/assert.js","../../../node_modules/workbox-routing/_version.js","../../../node_modules/workbox-routing/utils/constants.js","../../../node_modules/workbox-routing/utils/normalizeHandler.js","../../../node_modules/workbox-routing/Route.js","../../../node_modules/workbox-routing/RegExpRoute.js","../../../node_modules/workbox-core/_private/getFriendlyURL.js","../../../node_modules/workbox-routing/Router.js","../../../node_modules/workbox-routing/utils/getOrCreateDefaultRouter.js","../../../node_modules/workbox-routing/registerRoute.js","../../../node_modules/workbox-strategies/_version.js","../../../node_modules/workbox-strategies/plugins/cacheOkAndOpaquePlugin.js","../../../node_modules/workbox-core/_private/cacheNames.js","../../../node_modules/workbox-core/_private/cacheMatchIgnoreParams.js","../../../node_modules/workbox-core/_private/Deferred.js","../../../node_modules/workbox-core/models/quotaErrorCallbacks.js","../../../node_modules/workbox-core/_private/executeQuotaErrorCallbacks.js","../../../node_modules/workbox-core/_private/timeout.js","../../../node_modules/workbox-strategies/StrategyHandler.js","../../../node_modules/workbox-strategies/Strategy.js","../../../node_modules/workbox-strategies/utils/messages.js","../../../node_modules/workbox-strategies/StaleWhileRevalidate.js","../../../node_modules/workbox-strategies/CacheFirst.js","../../../node_modules/workbox-cacheable-response/_version.js","../../../node_modules/workbox-cacheable-response/CacheableResponse.js","../../../node_modules/workbox-cacheable-response/CacheableResponsePlugin.js","../../../node_modules/workbox-core/_private/dontWaitFor.js","../../../node_modules/workbox-core/registerQuotaErrorCallback.js","../../../node_modules/workbox-core/_private/DBWrapper.js","../../../node_modules/workbox-core/_private/deleteDatabase.js","../../../node_modules/workbox-expiration/_version.js","../../../node_modules/workbox-expiration/models/CacheTimestampsModel.js","../../../node_modules/workbox-expiration/CacheExpiration.js","../../../node_modules/workbox-expiration/ExpirationPlugin.js","../../../node_modules/workbox-recipes/_version.js","../../../node_modules/workbox-recipes/googleFontsCache.js","../../../node_modules/workbox-recipes/warmStrategyCache.js","../../../node_modules/workbox-recipes/imageCache.js","../../../node_modules/workbox-recipes/staticResourceCache.js","../../../node_modules/workbox-strategies/NetworkFirst.js","../../../node_modules/workbox-recipes/pageCache.js","../../../node_modules/workbox-routing/setCatchHandler.js","../../../node_modules/workbox-core/_private/waitUntil.js","../../../node_modules/workbox-precaching/_version.js","../../../node_modules/workbox-precaching/utils/createCacheKey.js","../../../node_modules/workbox-precaching/utils/PrecacheInstallReportPlugin.js","../../../node_modules/workbox-precaching/utils/PrecacheCacheKeyPlugin.js","../../../node_modules/workbox-precaching/utils/printCleanupDetails.js","../../../node_modules/workbox-precaching/utils/printInstallDetails.js","../../../node_modules/workbox-core/_private/canConstructResponseFromBodyStream.js","../../../node_modules/workbox-core/copyResponse.js","../../../node_modules/workbox-precaching/PrecacheStrategy.js","../../../node_modules/workbox-precaching/PrecacheController.js","../../../node_modules/workbox-precaching/utils/getOrCreatePrecacheController.js","../../../node_modules/workbox-precaching/matchPrecache.js","../../../node_modules/workbox-recipes/offlineFallback.js","../../../node_modules/workbox-recipes/index.js","../../../node_modules/workbox-recipes/index.mjs","index.js"],"names":["require","logger","self","__WB_DISABLE_DEV_LOGS","inGroup","methodToColorMap","debug","log","warn","error","groupCollapsed","groupEnd","print","method","args","test","navigator","userAgent","console","styles","logPrefix","join","api","loggerMethods","Object","keys","key","exports","messages","invalid-value","paramName","validValueDescription","value","Error","JSON","stringify","not-an-array","moduleName","className","funcName","incorrect-type","expectedType","incorrect-class","expectedClass","isReturnValueProblem","name","missing-a-method","expectedMethod","add-to-cache-list-unexpected-type","entry","add-to-cache-list-conflicting-entries","firstEntry","secondEntry","_entryId","plugin-error-request-will-fetch","thrownError","message","invalid-cache-name","cacheNameId","unregister-route-but-not-found-with-method","unregister-route-route-not-registered","queue-replay-failed","duplicate-queue-name","expired-test-without-max-age","methodName","unsupported-route-type","not-array-of-class","max-entries-or-age-required","statuses-or-headers-required","invalid-string","channel-name-required","invalid-responses-are-same-args","expire-custom-caches-only","unit-must-be-bytes","normalizedRangeHeader","single-range-only","invalid-range-values","no-range-header","range-not-satisfiable","size","start","end","attempt-to-cache-non-get-request","url","cache-put-with-no-response","no-response","bad-precaching-response","status","non-precached-url","add-to-cache-list-conflicting-integrities","missing-precache-entry","cacheName","cross-origin-copy-response","origin","_messages","fallback","code","msg","length","generatorFunction","details","messageGenerator","_messageGenerator","WorkboxError","constructor","errorCode","_WorkboxError","isArray","Array","hasMethod","object","type","isType","isInstance","isOneOf","validValues","includes","isArrayOfClass","item","finalAssertExports","assert","defaultMethod","validMethods","_assert","normalizeHandler","handler","handle","_constants","_normalizeHandler","Route","match","setCatchHandler","catchHandler","_logger","_Route","RegExpRoute","regExp","RegExp","result","exec","href","location","index","slice","getFriendlyURL","urlObj","URL","String","replace","_getFriendlyURL","Router","_routes","Map","_defaultHandlerMap","routes","addFetchListener","addEventListener","event","request","responsePromise","handleRequest","respondWith","addCacheListener","data","payload","urlsToCache","requestPromises","Promise","all","map","Request","waitUntil","ports","then","postMessage","protocol","startsWith","sameOrigin","params","route","findMatchingRoute","debugMessages","push","has","get","forEach","err","reject","_catchHandler","catch","catchErr","matchResult","undefined","setDefaultHandler","set","registerRoute","unregisterRoute","routeIndex","indexOf","splice","_Router","defaultRouter","getOrCreateDefaultRouter","_RegExpRoute","_getOrCreateDefaultRouter","capture","captureUrl","valueToCheck","pathname","wildcards","matchCallback","cacheOkAndOpaquePlugin","cacheWillUpdate","response","_cacheNameDetails","googleAnalytics","precache","prefix","runtime","suffix","registration","scope","_createCacheName","filter","eachCacheNameDetail","fn","cacheNames","updateDetails","getGoogleAnalyticsName","userCacheName","getPrecacheName","getPrefix","getRuntimeName","getSuffix","stripParams","fullURL","ignoreParams","strippedURL","param","searchParams","delete","cacheMatchIgnoreParams","cache","matchOptions","strippedRequestURL","keysOptions","ignoreSearch","cacheKeys","cacheKey","strippedCacheKeyURL","Deferred","promise","resolve","quotaErrorCallbacks","Set","_quotaErrorCallbacks","executeQuotaErrorCallbacks","callback","timeout","ms","setTimeout","_cacheMatchIgnoreParams","_Deferred","_executeQuotaErrorCallbacks","_timeout","toRequest","input","StrategyHandler","strategy","options","_cacheKeys","ExtendableEvent","assign","_strategy","_handlerDeferred","_extendLifetimePromises","_plugins","plugins","_pluginStateMap","plugin","fetch","mode","FetchEvent","preloadResponse","possiblePreloadResponse","originalRequest","hasCallback","clone","cb","iterateCallbacks","pluginFilteredRequest","fetchResponse","fetchOptions","runCallbacks","fetchAndCachePut","responseClone","cachePut","cacheMatch","cachedResponse","effectiveRequest","getCacheKey","multiMatchOptions","caches","responseToCache","_ensureResponseSafeToCache","open","hasCacheUpdateCallback","oldResponse","put","newResponse","state","statefulCallback","statefulParam","doneWaiting","shift","destroy","pluginsUsed","_cacheNames","_StrategyHandler","Strategy","responseDone","handleAll","_getResponse","handlerDone","_awaitComplete","_handle","waitUntilError","strategyStart","strategyName","printFinalResponse","_cacheOkAndOpaquePlugin","_Strategy","StaleWhileRevalidate","some","p","unshift","logs","fetchAndCachePromise","CacheFirst","CacheableResponse","config","statuses","headers","_statuses","_headers","isResponseCacheable","Response","cacheable","headerName","logFriendlyHeaders","_CacheableResponse","CacheableResponsePlugin","_cacheableResponse","dontWaitFor","registerQuotaErrorCallback","add","DBWrapper","version","onupgradeneeded","onversionchange","_db","_name","_version","_onupgradeneeded","_onversionchange","close","db","openRequestTimedOut","OPEN_TIMEOUT","openRequest","indexedDB","onerror","evt","transaction","abort","onsuccess","bind","getKey","storeName","query","getAllKeys","getAll","count","getAllMatching","entries","includeKeys","direction","txn","done","store","objectStore","target","results","openCursor","cursor","continue","storeNames","onabort","oncomplete","_call","objStore","apply","prototype","methodsToWrap","readonly","readwrite","methods","IDBObjectStore","deleteDatabase","onblocked","_DBWrapper","_deleteDatabase","DB_NAME","OBJECT_STORE_NAME","normalizeURL","unNormalizedUrl","hash","CacheTimestampsModel","_cacheName","_handleUpgrade","createObjectStore","keyPath","createIndex","unique","setTimestamp","timestamp","id","_getId","getTimestamp","expireEntries","minTimestamp","maxCount","entriesToDelete","entriesNotDeletedCount","urlsDeleted","_dontWaitFor","_CacheTimestampsModel","CacheExpiration","_isRunning","_rerunRequested","maxEntries","maxAgeSeconds","_maxEntries","_maxAgeSeconds","_matchOptions","_timestampModel","Date","now","urlsExpired","updateTimestamp","isURLExpired","expireOlderThan","Infinity","_registerQuotaErrorCallback","_CacheExpiration","ExpirationPlugin","cachedResponseWillBeUsed","isFresh","_isResponseDateFresh","cacheExpiration","_getCacheExpiration","updateTimestampDone","cacheDidUpdate","_config","_cacheExpirations","purgeOnQuotaError","deleteCacheAndMetadata","dateHeaderTimestamp","_getDateHeaderTimestamp","dateHeader","parsedDate","headerTime","getTime","isNaN","_registerRoute","_StaleWhileRevalidate","_CacheFirst","_CacheableResponsePlugin","_ExpirationPlugin","googleFontsCache","sheetCacheName","cachePrefix","fontCacheName","warmStrategyCache","urls","path","_warmStrategyCache","imageCache","defaultMatchCallback","destination","warmCache","staticResourceCache","NetworkFirst","_networkTimeoutSeconds","networkTimeoutSeconds","promises","timeoutId","_getTimeoutPromise","networkPromise","_getNetworkPromise","race","timeoutPromise","onNetworkTimeout","fetchError","clearTimeout","_NetworkFirst","pageCache","asyncFn","returnPromise","REVISION_SEARCH_PARAM","createCacheKey","urlObject","revision","cacheKeyURL","originalURL","PrecacheInstallReportPlugin","updatedURLs","notUpdatedURLs","handlerWillStart","PrecacheCacheKeyPlugin","precacheController","cacheKeyWillBeUsed","_precacheController","getCacheKeyForURL","logGroup","groupTitle","deletedURLs","printCleanupDetails","deletionCount","_nestedGroup","printInstallDetails","urlsToPrecache","urlsAlreadyPrecached","precachedCount","alreadyPrecachedCount","supportStatus","canConstructResponseFromBodyStream","testResponse","body","_canConstructResponseFromBodyStream","copyResponse","modifier","responseURL","clonedResponse","responseInit","Headers","statusText","modifiedResponseInit","blob","_copyResponse","PrecacheStrategy","_fallbackToNetwork","fallbackToNetwork","copyRedirectedCacheableResponsesPlugin","_handleInstall","_handleFetch","_useDefaultCacheabilityPluginIfNeeded","wasCached","defaultPluginIndex","cacheWillUpdatePluginCount","defaultPrecacheCacheabilityPlugin","redirected","_waitUntil","_createCacheKey","_PrecacheInstallReportPlugin","_PrecacheCacheKeyPlugin","_printCleanupDetails","_printInstallDetails","_PrecacheStrategy","PrecacheController","_urlsToCacheKeys","_urlsToCacheModes","_cacheKeysToIntegrities","install","activate","addToCacheList","_installAndActiveListenersAdded","urlsToWarnAbout","cacheMode","integrity","warningMessage","installReportPlugin","credentials","currentlyCachedRequests","expectedCacheKeys","values","getURLsToCacheKeys","getCachedURLs","matchPrecache","createHandlerBoundToURL","_PrecacheController","getOrCreatePrecacheController","_getOrCreatePrecacheController","_setCatchHandler","_matchPrecache","offlineFallback","pageFallback","imageFallback","fontFallback","files","addAll","dest","_googleFontsCache","_imageCache","_staticResourceCache","_pageCache","_offlineFallback","_index","defineProperty","enumerable","_workboxRecipes","action","skipWaiting"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAAA,YAAA;;IACA;IACA,IAAA;MACA,IAAA,CAAA,oBAAA,CAAA,IAAA,CAAA,CAAA,CAAA;IACA,CAAA,CACA,OAAA,CAAA,EAAA,CAAA;;;;;;;;;ICCAA,OAAA,CAAA,gBAAA,CAAA;IANA;AACA;AACA;AACA;AACA;AACA;;IAEA,MAAMC,MAAM,GAAI,YAAA,KAAyB,YAAY,GAAG,IAAI,GAAG,CAAC,MAAM;MAClE;MACA;MACA,IAAI,EAAE,uBAAuB,IAAIC,IAAI,CAAC,EAAE;QACpCA,IAAI,CAACC,qBAAqB,GAAG,KAAK;MACtC;MACA,IAAIC,OAAO,GAAG,KAAK;MACnB,MAAMC,gBAAgB,GAAG;QACrBC,KAAK,EAAG,SAAQ;QAChBC,GAAG,EAAG,SAAQ;QACdC,IAAI,EAAG,SAAQ;QACfC,KAAK,EAAG,SAAQ;QAChBC,cAAc,EAAG,SAAQ;QACzBC,QAAQ,EAAE;MACd,CAAC;MACD,MAAMC,KAAK,GAAG,SAAA,CAAUC,MAAM,EAAEC,IAAI,EAAE;QAClC,IAAIZ,IAAI,CAACC,qBAAqB,EAAE;UAC5B;QACJ;QACA,IAAIU,MAAM,KAAK,gBAAgB,EAAE;UAC7B;UACA;UACA,IAAI,gCAAgC,CAACE,IAAI,CAACC,SAAS,CAACC,SAAS,CAAC,EAAE;YAC5DC,OAAO,CAACL,MAAM,CAAC,CAAC,GAAGC,IAAI,CAAC;YACxB;UACJ;QACJ;QACA,MAAMK,MAAM,GAAG,CACV,eAAcd,gBAAgB,CAACQ,MAAM,CAAE,EAAC,EACxC,sBAAqB,EACrB,cAAa,EACb,mBAAkB,EAClB,oBAAmB,CACvB;QACD;QACA,MAAMO,SAAS,GAAGhB,OAAO,GAAG,EAAE,GAAG,CAAC,WAAW,EAAEe,MAAM,CAACE,IAAI,CAAC,GAAG,CAAC,CAAC;QAChEH,OAAO,CAACL,MAAM,CAAC,CAAC,GAAGO,SAAS,EAAE,GAAGN,IAAI,CAAC;QACtC,IAAID,MAAM,KAAK,gBAAgB,EAAE;UAC7BT,OAAO,GAAG,IAAI;QAClB;QACA,IAAIS,MAAM,KAAK,UAAU,EAAE;UACvBT,OAAO,GAAG,KAAK;QACnB;MACJ,CAAC;MACD,MAAMkB,GAAG,GAAG,CAAC,CAAC;MACd,MAAMC,aAAa,GAAGC,MAAM,CAACC,IAAI,CAACpB,gBAAgB,CAAC;MACnD,KAAK,MAAMqB,GAAG,IAAIH,aAAa,EAAE;QAC7B,MAAMV,MAAM,GAAGa,GAAG;QAClBJ,GAAG,CAACT,MAAM,CAAC,GAAG,CAAC,GAAGC,IAAI,KAAK;UACvBF,KAAK,CAACC,MAAM,EAAEC,IAAI,CAAC;QACvB,CAAC;MACL;MACA,OAAOQ,GAAG;IACd,CAAC,EAAE,CAAE;IAACK,OAAA,CAAA1B,MAAA,GAAAA,MAAA;;;;;;;;;;;ICrDND,OAAA,CAAA,mBAAA,CAAA;IAPA;AACA;AACA;AACA;AACA;AACA;AACA;;IAEO,MAAM4B,QAAQ,GAAG;MACpB,eAAe,EAAEC,CAAC;QAAEC,SAAS;QAAEC,qBAAqB;QAAEC;MAAM,CAAC,KAAK;QAC9D,IAAI,CAACF,SAAS,IAAI,CAACC,qBAAqB,EAAE;UACtC,MAAM,IAAIE,KAAK,CAAE,4CAA2C,CAAC;QACjE;QACA,OAAQ,QAAOH,SAAU,wCAAuC,GAC3D,qBAAoBC,qBAAsB,uBAAsB,GAChE,GAAEG,IAAI,CAACC,SAAS,CAACH,KAAK,CAAE,GAAE;MACnC,CAAC;MACD,cAAc,EAAEI,CAAC;QAAEC,UAAU;QAAEC,SAAS;QAAEC,QAAQ;QAAET;MAAU,CAAC,KAAK;QAChE,IAAI,CAACO,UAAU,IAAI,CAACC,SAAS,IAAI,CAACC,QAAQ,IAAI,CAACT,SAAS,EAAE;UACtD,MAAM,IAAIG,KAAK,CAAE,2CAA0C,CAAC;QAChE;QACA,OAAQ,kBAAiBH,SAAU,gBAAe,GAC7C,IAAGO,UAAW,IAAGC,SAAU,IAAGC,QAAS,uBAAsB;MACtE,CAAC;MACD,gBAAgB,EAAEC,CAAC;QAAEC,YAAY;QAAEX,SAAS;QAAEO,UAAU;QAAEC,SAAS;QAAEC;MAAS,CAAC,KAAK;QAChF,IAAI,CAACE,YAAY,IAAI,CAACX,SAAS,IAAI,CAACO,UAAU,IAAI,CAACE,QAAQ,EAAE;UACzD,MAAM,IAAIN,KAAK,CAAE,6CAA4C,CAAC;QAClE;QACA,OAAQ,kBAAiBH,SAAU,gBAAe,GAC7C,IAAGO,UAAW,IAAGC,SAAS,GAAIA,SAAS,GAAG,GAAG,GAAI,EAAG,EAAC,GACrD,GAAEC,QAAS,uBAAsBE,YAAa,GAAE;MACzD,CAAC;MACD,iBAAiB,EAAEC,CAAC;QAAEC,aAAa;QAAEb,SAAS;QAAEO,UAAU;QAAEC,SAAS;QAAEC,QAAQ;QAAEK;MAAqB,CAAC,KAAK;QACxG,IAAI,CAACD,aAAa,IAAI,CAACN,UAAU,IAAI,CAACE,QAAQ,EAAE;UAC5C,MAAM,IAAIN,KAAK,CAAE,8CAA6C,CAAC;QACnE;QACA,IAAIW,oBAAoB,EAAE;UACtB,OAAQ,wBAAuB,GAC1B,IAAGP,UAAW,IAAGC,SAAS,GAAIA,SAAS,GAAG,GAAG,GAAI,EAAG,GAAEC,QAAS,MAAK,GACpE,gCAA+BI,aAAa,CAACE,IAAK,GAAE;QAC7D;QACA,OAAQ,kBAAiBf,SAAU,gBAAe,GAC7C,IAAGO,UAAW,IAAGC,SAAS,GAAIA,SAAS,GAAG,GAAG,GAAI,EAAG,GAAEC,QAAS,MAAK,GACpE,gCAA+BI,aAAa,CAACE,IAAK,GAAE;MAC7D,CAAC;MACD,kBAAkB,EAAEC,CAAC;QAAEC,cAAc;QAAEjB,SAAS;QAAEO,UAAU;QAAEC,SAAS;QAAEC;MAAS,CAAC,KAAK;QACpF,IAAI,CAACQ,cAAc,IAAI,CAACjB,SAAS,IAAI,CAACO,UAAU,IAAI,CAACC,SAAS,IACvD,CAACC,QAAQ,EAAE;UACd,MAAM,IAAIN,KAAK,CAAE,+CAA8C,CAAC;QACpE;QACA,OAAQ,GAAEI,UAAW,IAAGC,SAAU,IAAGC,QAAS,kBAAiB,GAC1D,IAAGT,SAAU,4BAA2BiB,cAAe,WAAU;MAC1E,CAAC;MACD,mCAAmC,EAAEC,CAAC;QAAEC;MAAM,CAAC,KAAK;QAChD,OAAQ,oCAAmC,GACtC,qEAAoE,GACpE,IAAGf,IAAI,CAACC,SAAS,CAACc,KAAK,CAAE,iDAAgD,GACzE,sEAAqE,GACrE,kBAAiB;MAC1B,CAAC;MACD,uCAAuC,EAAEC,CAAC;QAAEC,UAAU;QAAEC;MAAY,CAAC,KAAK;QACtE,IAAI,CAACD,UAAU,IAAI,CAACC,WAAW,EAAE;UAC7B,MAAM,IAAInB,KAAK,CAAE,sBAAqB,GACjC,8CAA6C,CAAC;QACvD;QACA,OAAQ,+BAA8B,GACjC,uEAAsE,GACtE,GAAEkB,UAAU,CAACE,QAAS,8CAA6C,GACnE,qEAAoE,GACpE,iBAAgB;MACzB,CAAC;MACD,iCAAiC,EAAEC,CAAC;QAAEC;MAAY,CAAC,KAAK;QACpD,IAAI,CAACA,WAAW,EAAE;UACd,MAAM,IAAItB,KAAK,CAAE,sBAAqB,GACjC,2CAA0C,CAAC;QACpD;QACA,OAAQ,gEAA+D,GAClE,kCAAiCsB,WAAW,CAACC,OAAQ,IAAG;MACjE,CAAC;MACD,oBAAoB,EAAEC,CAAC;QAAEC,WAAW;QAAE1B;MAAM,CAAC,KAAK;QAC9C,IAAI,CAAC0B,WAAW,EAAE;UACd,MAAM,IAAIzB,KAAK,CAAE,yDAAwD,CAAC;QAC9E;QACA,OAAQ,gEAA+D,GAClE,oBAAmByB,WAAY,iCAAgC,GAC/D,IAAGxB,IAAI,CAACC,SAAS,CAACH,KAAK,CAAE,GAAE;MACpC,CAAC;MACD,4CAA4C,EAAE2B,CAAC;QAAE9C;MAAO,CAAC,KAAK;QAC1D,IAAI,CAACA,MAAM,EAAE;UACT,MAAM,IAAIoB,KAAK,CAAE,sBAAqB,GACjC,qDAAoD,CAAC;QAC9D;QACA,OAAQ,4DAA2D,GAC9D,mCAAkCpB,MAAO,IAAG;MACrD,CAAC;MACD,uCAAuC,EAAE+C,CAAAA,KAAM;QAC3C,OAAQ,2DAA0D,GAC7D,aAAY;MACrB,CAAC;MACD,qBAAqB,EAAEC,CAAC;QAAEhB;MAAK,CAAC,KAAK;QACjC,OAAQ,wCAAuCA,IAAK,WAAU;MAClE,CAAC;MACD,sBAAsB,EAAEiB,CAAC;QAAEjB;MAAK,CAAC,KAAK;QAClC,OAAQ,mBAAkBA,IAAK,2BAA0B,GACpD,mEAAkE;MAC3E,CAAC;MACD,8BAA8B,EAAEkB,CAAC;QAAEC,UAAU;QAAElC;MAAU,CAAC,KAAK;QAC3D,OAAQ,QAAOkC,UAAW,uCAAsC,GAC3D,IAAGlC,SAAU,+BAA8B;MACpD,CAAC;MACD,wBAAwB,EAAEmC,CAAC;QAAE5B,UAAU;QAAEC,SAAS;QAAEC,QAAQ;QAAET;MAAU,CAAC,KAAK;QAC1E,OAAQ,iBAAgBA,SAAU,uCAAsC,GACnE,6BAA4BO,UAAW,IAAGC,SAAU,IAAGC,QAAS,OAAM,GACtE,oBAAmB;MAC5B,CAAC;MACD,oBAAoB,EAAE2B,CAAC;QAAElC,KAAK;QAAEW,aAAa;QAAEN,UAAU;QAAEC,SAAS;QAAEC,QAAQ;QAAET;MAAU,CAAC,KAAK;QAC5F,OAAQ,iBAAgBA,SAAU,kCAAiC,GAC9D,IAAGa,aAAc,wBAAuBT,IAAI,CAACC,SAAS,CAACH,KAAK,CAAE,MAAK,GACnE,4BAA2BK,UAAW,IAAGC,SAAU,IAAGC,QAAS,KAAI,GACnE,mBAAkB;MAC3B,CAAC;MACD,6BAA6B,EAAE4B,CAAC;QAAE9B,UAAU;QAAEC,SAAS;QAAEC;MAAS,CAAC,KAAK;QACpE,OAAQ,kEAAiE,GACpE,MAAKF,UAAW,IAAGC,SAAU,IAAGC,QAAS,EAAC;MACnD,CAAC;MACD,8BAA8B,EAAE6B,CAAC;QAAE/B,UAAU;QAAEC,SAAS;QAAEC;MAAS,CAAC,KAAK;QACrE,OAAQ,0DAAyD,GAC5D,MAAKF,UAAW,IAAGC,SAAU,IAAGC,QAAS,EAAC;MACnD,CAAC;MACD,gBAAgB,EAAE8B,CAAC;QAAEhC,UAAU;QAAEE,QAAQ;QAAET;MAAU,CAAC,KAAK;QACvD,IAAI,CAACA,SAAS,IAAI,CAACO,UAAU,IAAI,CAACE,QAAQ,EAAE;UACxC,MAAM,IAAIN,KAAK,CAAE,6CAA4C,CAAC;QAClE;QACA,OAAQ,4BAA2BH,SAAU,8BAA6B,GACrE,sEAAqE,GACrE,2BAA0BO,UAAW,IAAGE,QAAS,SAAQ,GACzD,YAAW;MACpB,CAAC;MACD,uBAAuB,EAAE+B,CAAAA,KAAM;QAC3B,OAAQ,gDAA+C,GAClD,gCAA+B;MACxC,CAAC;MACD,iCAAiC,EAAEC,CAAAA,KAAM;QACrC,OAAQ,4DAA2D,GAC9D,kDAAiD;MAC1D,CAAC;MACD,2BAA2B,EAAEC,CAAAA,KAAM;QAC/B,OAAQ,yDAAwD,GAC3D,oDAAmD;MAC5D,CAAC;MACD,oBAAoB,EAAEC,CAAC;QAAEC;MAAsB,CAAC,KAAK;QACjD,IAAI,CAACA,qBAAqB,EAAE;UACxB,MAAM,IAAIzC,KAAK,CAAE,iDAAgD,CAAC;QACtE;QACA,OAAQ,iEAAgE,GACnE,kCAAiCyC,qBAAsB,GAAE;MAClE,CAAC;MACD,mBAAmB,EAAEC,CAAC;QAAED;MAAsB,CAAC,KAAK;QAChD,IAAI,CAACA,qBAAqB,EAAE;UACxB,MAAM,IAAIzC,KAAK,CAAE,gDAA+C,CAAC;QACrE;QACA,OAAQ,gEAA+D,GAClE,+DAA8D,GAC9D,IAAGyC,qBAAsB,GAAE;MACpC,CAAC;MACD,sBAAsB,EAAEE,CAAC;QAAEF;MAAsB,CAAC,KAAK;QACnD,IAAI,CAACA,qBAAqB,EAAE;UACxB,MAAM,IAAIzC,KAAK,CAAE,mDAAkD,CAAC;QACxE;QACA,OAAQ,kEAAiE,GACpE,+DAA8D,GAC9D,IAAGyC,qBAAsB,GAAE;MACpC,CAAC;MACD,iBAAiB,EAAEG,CAAAA,KAAM;QACrB,OAAQ,oDAAmD;MAC/D,CAAC;MACD,uBAAuB,EAAEC,CAAC;QAAEC,IAAI;QAAEC,KAAK;QAAEC;MAAI,CAAC,KAAK;QAC/C,OAAQ,cAAaD,KAAM,cAAaC,GAAI,4BAA2B,GAClE,oDAAmDF,IAAK,SAAQ;MACzE,CAAC;MACD,kCAAkC,EAAEG,CAAC;QAAEC,GAAG;QAAEtE;MAAO,CAAC,KAAK;QACrD,OAAQ,oBAAmBsE,GAAI,sBAAqBtE,MAAO,gBAAe,GACrE,oCAAmC;MAC5C,CAAC;MACD,4BAA4B,EAAEuE,CAAC;QAAED;MAAI,CAAC,KAAK;QACvC,OAAQ,kCAAiCA,GAAI,6BAA4B,GACpE,UAAS;MAClB,CAAC;MACD,aAAa,EAAEE,CAAC;QAAEF,GAAG;QAAE1E;MAAM,CAAC,KAAK;QAC/B,IAAI+C,OAAO,GAAI,mDAAkD2B,GAAI,IAAG;QACxE,IAAI1E,KAAK,EAAE;UACP+C,OAAO,IAAK,4BAA2B/C,KAAM,GAAE;QACnD;QACA,OAAO+C,OAAO;MAClB,CAAC;MACD,yBAAyB,EAAE8B,CAAC;QAAEH,GAAG;QAAEI;MAAO,CAAC,KAAK;QAC5C,OAAQ,+BAA8BJ,GAAI,UAAS,IAC9CI,MAAM,GAAI,2BAA0BA,MAAO,GAAE,GAAI,GAAE,CAAC;MAC7D,CAAC;MACD,mBAAmB,EAAEC,CAAC;QAAEL;MAAI,CAAC,KAAK;QAC9B,OAAQ,4BAA2BA,GAAI,iCAAgC,GAClE,gEAA+D;MACxE,CAAC;MACD,2CAA2C,EAAEM,CAAC;QAAEN;MAAI,CAAC,KAAK;QACtD,OAAQ,+BAA8B,GACjC,uEAAsE,GACtE,GAAEA,GAAI,8DAA6D;MAC5E,CAAC;MACD,wBAAwB,EAAEO,CAAC;QAAEC,SAAS;QAAER;MAAI,CAAC,KAAK;QAC9C,OAAQ,0CAAyCQ,SAAU,QAAOR,GAAI,GAAE;MAC5E,CAAC;MACD,4BAA4B,EAAES,CAAC;QAAEC;MAAO,CAAC,KAAK;QAC1C,OAAQ,gEAA+D,GAClE,mDAAkDA,MAAO,GAAE;MACpE;IACJ,CAAC;IAAClE,OAAA,CAAAC,QAAA,GAAAA,QAAA;;;;;;;;;;;IChNF,IAAAkE,SAAA,GAAA9F,OAAA,CAAA,eAAA,CAAA;IACAA,OAAA,CAAA,mBAAA,CAAA;IARA;AACA;AACA;AACA;AACA;AACA;AACA;;IAGA,MAAM+F,QAAQ,GAAGA,CAACC,IAAI,EAAE,GAAGlF,IAAI,KAAK;MAChC,IAAImF,GAAG,GAAGD,IAAI;MACd,IAAIlF,IAAI,CAACoF,MAAM,GAAG,CAAC,EAAE;QACjBD,GAAG,IAAK,OAAM/D,IAAI,CAACC,SAAS,CAACrB,IAAI,CAAE,EAAC;MACxC;MACA,OAAOmF,GAAG;IACd,CAAC;IACD,MAAME,iBAAiB,GAAGA,CAACH,IAAI,EAAEI,OAAO,GAAG,CAAC,CAAC,KAAK;MAC9C,MAAM5C,OAAO,GAAG5B,SAAAA,CAAAA,QAAQ,CAACoE,IAAI,CAAC;MAC9B,IAAI,CAACxC,OAAO,EAAE;QACV,MAAM,IAAIvB,KAAK,CAAE,oCAAmC+D,IAAK,IAAG,CAAC;MACjE;MACA,OAAOxC,OAAO,CAAC4C,OAAO,CAAC;IAC3B,CAAC;IACM,MAAMC,gBAAgB,GAAI,YAAA,KAAyB,YAAY,GAClEN,QAAQ,GAAGI,iBAAiB;IAACxE,OAAA,CAAA0E,gBAAA,GAAAA,gBAAA;;;;;;;;;;;;ICjBjC,IAAAC,iBAAA,GAAAtG,OAAA,CAAA,wCAAA,CAAA;IACAA,OAAA,CAAA,gBAAA,CAAA;IARA;AACA;AACA;AACA;AACA;AACA;AACA;;IAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACA,MAAMuG,YAAY,SAAStE,KAAK,CAAC;MAC7B;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;MACIuE,WAAWA,CAACC,SAAS,EAAEL,OAAO,EAAE;QAC5B,MAAM5C,OAAO,GAAG,CAAA,CAAA,EAAA6C,iBAAAA,CAAAA,gBAAgB,EAACI,SAAS,EAAEL,OAAO,CAAC;QACpD,KAAK,CAAC5C,OAAO,CAAC;QACd,IAAI,CAACX,IAAI,GAAG4D,SAAS;QACrB,IAAI,CAACL,OAAO,GAAGA,OAAO;MAC1B;IACJ;IAACzE,OAAA,CAAA4E,YAAA,GAAAA,YAAA;;;;;;;;;;;;IC1BD,IAAAG,aAAA,GAAA1G,OAAA,CAAA,6BAAA,CAAA;IACAA,OAAA,CAAA,gBAAA,CAAA;IARA;AACA;AACA;AACA;AACA;AACA;AACA;;IAGA;AACA;AACA;AACA;AACA;AACA;IACA,MAAM2G,OAAO,GAAGA,CAAC3E,KAAK,EAAEoE,OAAO,KAAK;MAChC,IAAI,CAACQ,KAAK,CAACD,OAAO,CAAC3E,KAAK,CAAC,EAAE;QACvB,MAAM,IAAIuE,aAAAA,CAAAA,YAAY,CAAC,cAAc,EAAEH,OAAO,CAAC;MACnD;IACJ,CAAC;IACD,MAAMS,SAAS,GAAGA,CAACC,MAAM,EAAE/D,cAAc,EAAEqD,OAAO,KAAK;MACnD,MAAMW,IAAI,GAAG,OAAOD,MAAM,CAAC/D,cAAc,CAAC;MAC1C,IAAIgE,IAAI,KAAK,UAAU,EAAE;QACrBX,OAAO,CAAC,gBAAgB,CAAC,GAAGrD,cAAc;QAC1C,MAAM,IAAIwD,aAAAA,CAAAA,YAAY,CAAC,kBAAkB,EAAEH,OAAO,CAAC;MACvD;IACJ,CAAC;IACD,MAAMY,MAAM,GAAGA,CAACF,MAAM,EAAErE,YAAY,EAAE2D,OAAO,KAAK;MAC9C,IAAI,OAAOU,MAAM,KAAKrE,YAAY,EAAE;QAChC2D,OAAO,CAAC,cAAc,CAAC,GAAG3D,YAAY;QACtC,MAAM,IAAI8D,aAAAA,CAAAA,YAAY,CAAC,gBAAgB,EAAEH,OAAO,CAAC;MACrD;IACJ,CAAC;IACD,MAAMa,UAAU,GAAGA,CAACH,MAAM,EAAEnE,aAAa,EAAEyD,OAAO,KAAK;MACnD,IAAI,EAAEU,MAAM,YAAYnE,aAAa,CAAC,EAAE;QACpCyD,OAAO,CAAC,eAAe,CAAC,GAAGzD,aAAa;QACxC,MAAM,IAAI4D,aAAAA,CAAAA,YAAY,CAAC,iBAAiB,EAAEH,OAAO,CAAC;MACtD;IACJ,CAAC;IACD,MAAMc,OAAO,GAAGA,CAAClF,KAAK,EAAEmF,WAAW,EAAEf,OAAO,KAAK;MAC7C,IAAI,CAACe,WAAW,CAACC,QAAQ,CAACpF,KAAK,CAAC,EAAE;QAC9BoE,OAAO,CAAC,uBAAuB,CAAC,GAC3B,oBAAmBlE,IAAI,CAACC,SAAS,CAACgF,WAAW,CAAE,GAAE;QACtD,MAAM,IAAIZ,aAAAA,CAAAA,YAAY,CAAC,eAAe,EAAEH,OAAO,CAAC;MACpD;IACJ,CAAC;IACD,MAAMiB,cAAc,GAAGA,CAACrF,KAAK,EAAEW,aAAa,EAAEyD,OAAO,KAAK;MACtD,MAAM3F,KAAK,GAAG,IAAI8F,aAAAA,CAAAA,YAAY,CAAC,oBAAoB,EAAEH,OAAO,CAAC;MAC7D,IAAI,CAACQ,KAAK,CAACD,OAAO,CAAC3E,KAAK,CAAC,EAAE;QACvB,MAAMvB,KAAK;MACf;MACA,KAAK,MAAM6G,IAAI,IAAItF,KAAK,EAAE;QACtB,IAAI,EAAEsF,IAAI,YAAY3E,aAAa,CAAC,EAAE;UAClC,MAAMlC,KAAK;QACf;MACJ;IACJ,CAAC;IACD,MAAM8G,kBAAkB,GAAG,YAAA,KAAyB,YAAY,GAAG,IAAI,GAAG;MACtEV,SAAS;MACTF,OAAO;MACPM,UAAU;MACVC,OAAO;MACPF,MAAM;MACNK;IACJ,CAAC;IAAC1F,OAAA,CAAA6F,MAAA,GAAAD,kBAAA;;;;;;IChEF,YAAA;;IACA;IACA,IAAA;MACA,IAAA,CAAA,uBAAA,CAAA,IAAA,CAAA,CAAA,CAAA;IACA,CAAA,CACA,OAAA,CAAA,EAAA,CAAA;;;;;;;;;ICEAvH,OAAA,CAAA,gBAAA,CAAA;IAPA;AACA;AACA;AACA;AACA;AACA;AACA;;IAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACO,MAAMyH,aAAa,GAAG,KAAK;IAClC;AACA;AACA;AACA;AACA;AACA;AACA;IANA9F,OAAA,CAAA8F,aAAA,GAAAA,aAAA;IAOO,MAAMC,YAAY,GAAG,CACxB,QAAQ,EACR,KAAK,EACL,MAAM,EACN,OAAO,EACP,MAAM,EACN,KAAK,CACR;IAAC/F,OAAA,CAAA+F,YAAA,GAAAA,YAAA;;;;;;;;;;;ICxBF,IAAAC,OAAA,GAAA3H,OAAA,CAAA,iCAAA,CAAA;IACAA,OAAA,CAAA,gBAAA,CAAA;IARA;AACA;AACA;AACA;AACA;AACA;AACA;;IAGA;AACA;AACA;AACA;AACA;AACA;AACA;IACO,MAAM4H,gBAAgB,GAAIC,OAAO,IAAK;MACzC,IAAIA,OAAO,IAAI,OAAOA,OAAO,KAAK,QAAQ,EAAE;QACxC,IAAI,YAAA,KAAyB,YAAY,EAAE;UACvCL,OAAAA,CAAAA,MAAM,CAACX,SAAS,CAACgB,OAAO,EAAE,QAAQ,EAAE;YAChCxF,UAAU,EAAE,iBAAiB;YAC7BC,SAAS,EAAE,OAAO;YAClBC,QAAQ,EAAE,aAAa;YACvBT,SAAS,EAAE;UACf,CAAC,CAAC;QACN;QACA,OAAO+F,OAAO;MAClB,CAAC,MACI;QACD,IAAI,YAAA,KAAyB,YAAY,EAAE;UACvCL,OAAAA,CAAAA,MAAM,CAACR,MAAM,CAACa,OAAO,EAAE,UAAU,EAAE;YAC/BxF,UAAU,EAAE,iBAAiB;YAC7BC,SAAS,EAAE,OAAO;YAClBC,QAAQ,EAAE,aAAa;YACvBT,SAAS,EAAE;UACf,CAAC,CAAC;QACN;QACA,OAAO;UAAEgG,MAAM,EAAED;QAAQ,CAAC;MAC9B;IACJ,CAAC;IAAClG,OAAA,CAAAiG,gBAAA,GAAAA,gBAAA;;;;;;;;;;;;IChCF,IAAAD,OAAA,GAAA3H,OAAA,CAAA,iCAAA,CAAA;IACA,IAAA+H,UAAA,GAAA/H,OAAA,CAAA,sBAAA,CAAA;IACA,IAAAgI,iBAAA,GAAAhI,OAAA,CAAA,6BAAA,CAAA;IACAA,OAAA,CAAA,eAAA,CAAA;IAVA;AACA;AACA;AACA;AACA;AACA;AACA;;IAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACA,MAAMiI,KAAK,CAAC;MACR;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIzB,WAAWA,CAAC0B,KAAK,EAAEL,OAAO,EAAEhH,MAAM,GAAG4G,UAAAA,CAAAA,aAAa,EAAE;QAChD,IAAI,YAAA,KAAyB,YAAY,EAAE;UACvCD,OAAAA,CAAAA,MAAM,CAACR,MAAM,CAACkB,KAAK,EAAE,UAAU,EAAE;YAC7B7F,UAAU,EAAE,iBAAiB;YAC7BC,SAAS,EAAE,OAAO;YAClBC,QAAQ,EAAE,aAAa;YACvBT,SAAS,EAAE;UACf,CAAC,CAAC;UACF,IAAIjB,MAAM,EAAE;YACR2G,OAAAA,CAAAA,MAAM,CAACN,OAAO,CAACrG,MAAM,EAAE6G,UAAAA,CAAAA,YAAY,EAAE;cAAE5F,SAAS,EAAE;YAAS,CAAC,CAAC;UACjE;QACJ;QACA;QACA;QACA,IAAI,CAAC+F,OAAO,GAAG,CAAA,CAAA,EAAAD,iBAAAA,CAAAA,gBAAgB,EAACC,OAAO,CAAC;QACxC,IAAI,CAACK,KAAK,GAAGA,KAAK;QAClB,IAAI,CAACrH,MAAM,GAAGA,MAAM;MACxB;MACA;AACJ;AACA;AACA;AACA;MACIsH,eAAeA,CAACN,OAAO,EAAE;QACrB,IAAI,CAACO,YAAY,GAAG,CAAA,CAAA,EAAAR,iBAAAA,CAAAA,gBAAgB,EAACC,OAAO,CAAC;MACjD;IACJ;IAAClG,OAAA,CAAAsG,KAAA,GAAAA,KAAA;;;;;;;;;;;;;;ICnDD,IAAAN,OAAA,GAAA3H,OAAA,CAAA,iCAAA,CAAA;IACA,IAAAqI,OAAA,GAAArI,OAAA,CAAA,iCAAA,CAAA;IACA,IAAAsI,MAAA,GAAAtI,OAAA,CAAA,YAAA,CAAA;IACAA,OAAA,CAAA,eAAA,CAAA;IAVA;AACA;AACA;AACA;AACA;AACA;AACA;;IAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACA,MAAMuI,WAAW,SAASN,MAAAA,CAAAA,KAAK,CAAC;MAC5B;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIzB,WAAWA,CAACgC,MAAM,EAAEX,OAAO,EAAEhH,MAAM,EAAE;QACjC,IAAI,YAAA,KAAyB,YAAY,EAAE;UACvC2G,OAAAA,CAAAA,MAAM,CAACP,UAAU,CAACuB,MAAM,EAAEC,MAAM,EAAE;YAC9BpG,UAAU,EAAE,iBAAiB;YAC7BC,SAAS,EAAE,aAAa;YACxBC,QAAQ,EAAE,aAAa;YACvBT,SAAS,EAAE;UACf,CAAC,CAAC;QACN;QACA,MAAMoG,KAAK,GAAGA,CAAC;UAAE/C;QAAI,CAAC,KAAK;UACvB,MAAMuD,MAAM,GAAGF,MAAM,CAACG,IAAI,CAACxD,GAAG,CAACyD,IAAI,CAAC;UACpC;UACA,IAAI,CAACF,MAAM,EAAE;YACT;UACJ;UACA;UACA;UACA;UACA;UACA,IAAKvD,GAAG,CAACU,MAAM,KAAKgD,QAAQ,CAAChD,MAAM,IAAM6C,MAAM,CAACI,KAAK,KAAK,CAAE,EAAE;YAC1D,IAAI,YAAA,KAAyB,YAAY,EAAE;cACvC7I,OAAAA,CAAAA,MAAM,CAACK,KAAK,CAAE,2BAA0BkI,MAAO,2BAA0B,GACpE,iCAAgCrD,GAAI,6BAA4B,GAChE,4DAA2D,CAAC;YACrE;YACA;UACJ;UACA;UACA;UACA;UACA;UACA,OAAOuD,MAAM,CAACK,KAAK,CAAC,CAAC,CAAC;QAC1B,CAAC;QACD,KAAK,CAACb,KAAK,EAAEL,OAAO,EAAEhH,MAAM,CAAC;MACjC;IACJ;IAACc,OAAA,CAAA4G,WAAA,GAAAA,WAAA;;;;;;;;;;;;;;IClEDvI,OAAA,CAAA,gBAAA,CAAA;IAPA;AACA;AACA;AACA;AACA;AACA;AACA;;IAEA,MAAMgJ,cAAc,GAAI7D,GAAG,IAAK;MAC5B,MAAM8D,MAAM,GAAG,IAAIC,GAAG,CAACC,MAAM,CAAChE,GAAG,CAAC,EAAE0D,QAAQ,CAACD,IAAI,CAAC;MAClD;MACA;MACA,OAAOK,MAAM,CAACL,IAAI,CAACQ,OAAO,CAAC,IAAIX,MAAM,CAAE,IAAGI,QAAQ,CAAChD,MAAO,EAAC,CAAC,EAAE,EAAE,CAAC;IACrE,CAAC;IAAClE,OAAA,CAAAqH,cAAA,GAAAA,cAAA;;;;;;;;;;;ICNF,IAAArB,OAAA,GAAA3H,OAAA,CAAA,iCAAA,CAAA;IACA,IAAAqJ,eAAA,GAAArJ,OAAA,CAAA,yCAAA,CAAA;IACA,IAAA+H,UAAA,GAAA/H,OAAA,CAAA,sBAAA,CAAA;IACA,IAAAqI,OAAA,GAAArI,OAAA,CAAA,iCAAA,CAAA;IACA,IAAAgI,iBAAA,GAAAhI,OAAA,CAAA,6BAAA,CAAA;IACA,IAAA0G,aAAA,GAAA1G,OAAA,CAAA,uCAAA,CAAA;IACAA,OAAA,CAAA,eAAA,CAAA;IAbA;AACA;AACA;AACA;AACA;AACA;AACA;;IAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACA,MAAMsJ,MAAM,CAAC;MACT;AACJ;AACA;MACI9C,WAAWA,CAAAA,EAAG;QACV,IAAI,CAAC+C,OAAO,GAAG,IAAIC,GAAG,CAAC,CAAC;QACxB,IAAI,CAACC,kBAAkB,GAAG,IAAID,GAAG,CAAC,CAAC;MACvC;MACA;AACJ;AACA;AACA;AACA;MACI,IAAIE,MAAMA,CAAAA,EAAG;QACT,OAAO,IAAI,CAACH,OAAO;MACvB;MACA;AACJ;AACA;AACA;MACII,gBAAgBA,CAAAA,EAAG;QACf;QACAzJ,IAAI,CAAC0J,gBAAgB,CAAC,OAAO,EAAIC,KAAK,IAAK;UACvC,MAAM;YAAEC;UAAQ,CAAC,GAAGD,KAAK;UACzB,MAAME,eAAe,GAAG,IAAI,CAACC,aAAa,CAAC;YAAEF,OAAO;YAAED;UAAM,CAAC,CAAC;UAC9D,IAAIE,eAAe,EAAE;YACjBF,KAAK,CAACI,WAAW,CAACF,eAAe,CAAC;UACtC;QACJ,CAAE,CAAC;MACP;MACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIG,gBAAgBA,CAAAA,EAAG;QACf;QACAhK,IAAI,CAAC0J,gBAAgB,CAAC,SAAS,EAAIC,KAAK,IAAK;UACzC,IAAIA,KAAK,CAACM,IAAI,IAAIN,KAAK,CAACM,IAAI,CAACpD,IAAI,KAAK,YAAY,EAAE;YAChD,MAAM;cAAEqD;YAAQ,CAAC,GAAGP,KAAK,CAACM,IAAI;YAC9B,IAAI,YAAA,KAAyB,YAAY,EAAE;cACvClK,OAAAA,CAAAA,MAAM,CAACK,KAAK,CAAE,8BAA6B,EAAE8J,OAAO,CAACC,WAAW,CAAC;YACrE;YACA,MAAMC,eAAe,GAAGC,OAAO,CAACC,GAAG,CAACJ,OAAO,CAACC,WAAW,CAACI,GAAG,CAAExH,KAAK,IAAK;cACnE,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;gBAC3BA,KAAK,GAAG,CAACA,KAAK,CAAC;cACnB;cACA,MAAM6G,OAAO,GAAG,IAAIY,OAAO,CAAC,GAAGzH,KAAK,CAAC;cACrC,OAAO,IAAI,CAAC+G,aAAa,CAAC;gBAAEF,OAAO;gBAAED;cAAM,CAAC,CAAC;cAC7C;cACA;cACA;YACJ,CAAC,CAAC,CAAC,CAAC,CAAC;YACLA,KAAK,CAACc,SAAS,CAACL,eAAe,CAAC;YAChC;YACA,IAAIT,KAAK,CAACe,KAAK,IAAIf,KAAK,CAACe,KAAK,CAAC,CAAC,CAAC,EAAE;cAC/BN,eAAe,CAACO,IAAI,CAAC,MAAMhB,KAAK,CAACe,KAAK,CAAC,CAAC,CAAC,CAACE,WAAW,CAAC,IAAI,CAAC,CAAC;YAChE;UACJ;QACJ,CAAE,CAAC;MACP;MACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACId,aAAaA,CAAC;QAAEF,OAAO;QAAED;MAAM,CAAC,EAAE;QAC9B,IAAI,YAAA,KAAyB,YAAY,EAAE;UACvCrC,OAAAA,CAAAA,MAAM,CAACP,UAAU,CAAC6C,OAAO,EAAEY,OAAO,EAAE;YAChCrI,UAAU,EAAE,iBAAiB;YAC7BC,SAAS,EAAE,QAAQ;YACnBC,QAAQ,EAAE,eAAe;YACzBT,SAAS,EAAE;UACf,CAAC,CAAC;QACN;QACA,MAAMqD,GAAG,GAAG,IAAI+D,GAAG,CAACY,OAAO,CAAC3E,GAAG,EAAE0D,QAAQ,CAACD,IAAI,CAAC;QAC/C,IAAI,CAACzD,GAAG,CAAC4F,QAAQ,CAACC,UAAU,CAAC,MAAM,CAAC,EAAE;UAClC,IAAI,YAAA,KAAyB,YAAY,EAAE;YACvC/K,OAAAA,CAAAA,MAAM,CAACK,KAAK,CAAE,2DAA0D,CAAC;UAC7E;UACA;QACJ;QACA,MAAM2K,UAAU,GAAG9F,GAAG,CAACU,MAAM,KAAKgD,QAAQ,CAAChD,MAAM;QACjD,MAAM;UAAEqF,MAAM;UAAEC;QAAM,CAAC,GAAG,IAAI,CAACC,iBAAiB,CAAC;UAC7CvB,KAAK;UACLC,OAAO;UACPmB,UAAU;UACV9F;QACJ,CAAC,CAAC;QACF,IAAI0C,OAAO,GAAGsD,KAAK,IAAIA,KAAK,CAACtD,OAAO;QACpC,MAAMwD,aAAa,GAAG,EAAE;QACxB,IAAI,YAAA,KAAyB,YAAY,EAAE;UACvC,IAAIxD,OAAO,EAAE;YACTwD,aAAa,CAACC,IAAI,CAAC,CACd,uCAAsC,EAAEH,KAAK,CACjD,CAAC;YACF,IAAID,MAAM,EAAE;cACRG,aAAa,CAACC,IAAI,CAAC,CACd,sDAAqD,EAAEJ,MAAM,CACjE,CAAC;YACN;UACJ;QACJ;QACA;QACA;QACA,MAAMrK,MAAM,GAAGiJ,OAAO,CAACjJ,MAAM;QAC7B,IAAI,CAACgH,OAAO,IAAI,IAAI,CAAC4B,kBAAkB,CAAC8B,GAAG,CAAC1K,MAAM,CAAC,EAAE;UACjD,IAAI,YAAA,KAAyB,YAAY,EAAE;YACvCwK,aAAa,CAACC,IAAI,CAAE,2CAA0C,GACzD,mCAAkCzK,MAAO,GAAE,CAAC;UACrD;UACAgH,OAAO,GAAG,IAAI,CAAC4B,kBAAkB,CAAC+B,GAAG,CAAC3K,MAAM,CAAC;QACjD;QACA,IAAI,CAACgH,OAAO,EAAE;UACV,IAAI,YAAA,KAAyB,YAAY,EAAE;YACvC;YACA;YACA5H,OAAAA,CAAAA,MAAM,CAACK,KAAK,CAAE,uBAAsB,CAAA,CAAA,EAAA0I,eAAAA,CAAAA,cAAc,EAAC7D,GAAG,CAAE,EAAC,CAAC;UAC9D;UACA;QACJ;QACA,IAAI,YAAA,KAAyB,YAAY,EAAE;UACvC;UACA;UACAlF,OAAAA,CAAAA,MAAM,CAACS,cAAc,CAAE,4BAA2B,CAAA,CAAA,EAAAsI,eAAAA,CAAAA,cAAc,EAAC7D,GAAG,CAAE,EAAC,CAAC;UACxEkG,aAAa,CAACI,OAAO,CAAExF,GAAG,IAAK;YAC3B,IAAIW,KAAK,CAACD,OAAO,CAACV,GAAG,CAAC,EAAE;cACpBhG,OAAAA,CAAAA,MAAM,CAACM,GAAG,CAAC,GAAG0F,GAAG,CAAC;YACtB,CAAC,MACI;cACDhG,OAAAA,CAAAA,MAAM,CAACM,GAAG,CAAC0F,GAAG,CAAC;YACnB;UACJ,CAAC,CAAC;UACFhG,OAAAA,CAAAA,MAAM,CAACU,QAAQ,CAAC,CAAC;QACrB;QACA;QACA;QACA,IAAIoJ,eAAe;QACnB,IAAI;UACAA,eAAe,GAAGlC,OAAO,CAACC,MAAM,CAAC;YAAE3C,GAAG;YAAE2E,OAAO;YAAED,KAAK;YAAEqB;UAAO,CAAC,CAAC;QACrE,CAAC,CACD,OAAOQ,GAAG,EAAE;UACR3B,eAAe,GAAGQ,OAAO,CAACoB,MAAM,CAACD,GAAG,CAAC;QACzC;QACA;QACA,MAAMtD,YAAY,GAAG+C,KAAK,IAAIA,KAAK,CAAC/C,YAAY;QAChD,IAAI2B,eAAe,YAAYQ,OAAO,KAAK,IAAI,CAACqB,aAAa,IAAIxD,YAAY,CAAC,EAAE;UAC5E2B,eAAe,GAAGA,eAAe,CAAC8B,KAAK,CAAC,MAAOH,GAAG,IAAK;YACnD;YACA,IAAItD,YAAY,EAAE;cACd,IAAI,YAAA,KAAyB,YAAY,EAAE;gBACvC;gBACA;gBACAnI,OAAAA,CAAAA,MAAM,CAACS,cAAc,CAAE,mCAAkC,GACpD,IAAG,CAAA,CAAA,EAAAsI,eAAAA,CAAAA,cAAc,EAAC7D,GAAG,CAAE,0CAAyC,CAAC;gBACtElF,OAAAA,CAAAA,MAAM,CAACQ,KAAK,CAAE,kBAAiB,EAAE0K,KAAK,CAAC;gBACvClL,OAAAA,CAAAA,MAAM,CAACQ,KAAK,CAACiL,GAAG,CAAC;gBACjBzL,OAAAA,CAAAA,MAAM,CAACU,QAAQ,CAAC,CAAC;cACrB;cACA,IAAI;gBACA,OAAO,MAAMyH,YAAY,CAACN,MAAM,CAAC;kBAAE3C,GAAG;kBAAE2E,OAAO;kBAAED,KAAK;kBAAEqB;gBAAO,CAAC,CAAC;cACrE,CAAC,CACD,OAAOY,QAAQ,EAAE;gBACbJ,GAAG,GAAGI,QAAQ;cAClB;YACJ;YACA,IAAI,IAAI,CAACF,aAAa,EAAE;cACpB,IAAI,YAAA,KAAyB,YAAY,EAAE;gBACvC;gBACA;gBACA3L,OAAAA,CAAAA,MAAM,CAACS,cAAc,CAAE,mCAAkC,GACpD,IAAG,CAAA,CAAA,EAAAsI,eAAAA,CAAAA,cAAc,EAAC7D,GAAG,CAAE,yCAAwC,CAAC;gBACrElF,OAAAA,CAAAA,MAAM,CAACQ,KAAK,CAAE,kBAAiB,EAAE0K,KAAK,CAAC;gBACvClL,OAAAA,CAAAA,MAAM,CAACQ,KAAK,CAACiL,GAAG,CAAC;gBACjBzL,OAAAA,CAAAA,MAAM,CAACU,QAAQ,CAAC,CAAC;cACrB;cACA,OAAO,IAAI,CAACiL,aAAa,CAAC9D,MAAM,CAAC;gBAAE3C,GAAG;gBAAE2E,OAAO;gBAAED;cAAM,CAAC,CAAC;YAC7D;YACA,MAAM6B,GAAG;UACb,CAAC,CAAC;QACN;QACA,OAAO3B,eAAe;MAC1B;MACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIqB,iBAAiBA,CAAC;QAAEjG,GAAG;QAAE8F,UAAU;QAAEnB,OAAO;QAAED;MAAM,CAAC,EAAE;QACnD,MAAMH,MAAM,GAAG,IAAI,CAACH,OAAO,CAACiC,GAAG,CAAC1B,OAAO,CAACjJ,MAAM,CAAC,IAAI,EAAE;QACrD,KAAK,MAAMsK,KAAK,IAAIzB,MAAM,EAAE;UACxB,IAAIwB,MAAM;UACV,MAAMa,WAAW,GAAGZ,KAAK,CAACjD,KAAK,CAAC;YAAE/C,GAAG;YAAE8F,UAAU;YAAEnB,OAAO;YAAED;UAAM,CAAC,CAAC;UACpE,IAAIkC,WAAW,EAAE;YACb,IAAI,YAAA,KAAyB,YAAY,EAAE;cACvC;cACA;cACA,IAAIA,WAAW,YAAYxB,OAAO,EAAE;gBAChCtK,OAAAA,CAAAA,MAAM,CAACO,IAAI,CAAE,iBAAgB,CAAA,CAAA,EAAAwI,eAAAA,CAAAA,cAAc,EAAC7D,GAAG,CAAE,aAAY,GACxD,sDAAqD,GACrD,8DAA6D,EAAEgG,KAAK,CAAC;cAC9E;YACJ;YACA;YACAD,MAAM,GAAGa,WAAW;YACpB,IAAInF,KAAK,CAACD,OAAO,CAACoF,WAAW,CAAC,IAAIA,WAAW,CAAC7F,MAAM,KAAK,CAAC,EAAE;cACxD;cACAgF,MAAM,GAAGc,SAAS;YACtB,CAAC,MACI,IAAKD,WAAW,CAACvF,WAAW,KAAKhF,MAAM,IACxCA,MAAM,CAACC,IAAI,CAACsK,WAAW,CAAC,CAAC7F,MAAM,KAAK,CAAC,EAAG;cACxC;cACAgF,MAAM,GAAGc,SAAS;YACtB,CAAC,MACI,IAAI,OAAOD,WAAW,KAAK,SAAS,EAAE;cACvC;cACA;cACA;cACAb,MAAM,GAAGc,SAAS;YACtB;YACA;YACA,OAAO;cAAEb,KAAK;cAAED;YAAO,CAAC;UAC5B;QACJ;QACA;QACA,OAAO,CAAC,CAAC;MACb;MACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIe,iBAAiBA,CAACpE,OAAO,EAAEhH,MAAM,GAAG4G,UAAAA,CAAAA,aAAa,EAAE;QAC/C,IAAI,CAACgC,kBAAkB,CAACyC,GAAG,CAACrL,MAAM,EAAE,CAAA,CAAA,EAAA+G,iBAAAA,CAAAA,gBAAgB,EAACC,OAAO,CAAC,CAAC;MAClE;MACA;AACJ;AACA;AACA;AACA;AACA;AACA;MACIM,eAAeA,CAACN,OAAO,EAAE;QACrB,IAAI,CAAC+D,aAAa,GAAG,CAAA,CAAA,EAAAhE,iBAAAA,CAAAA,gBAAgB,EAACC,OAAO,CAAC;MAClD;MACA;AACJ;AACA;AACA;AACA;MACIsE,aAAaA,CAAChB,KAAK,EAAE;QACjB,IAAI,YAAA,KAAyB,YAAY,EAAE;UACvC3D,OAAAA,CAAAA,MAAM,CAACR,MAAM,CAACmE,KAAK,EAAE,QAAQ,EAAE;YAC3B9I,UAAU,EAAE,iBAAiB;YAC7BC,SAAS,EAAE,QAAQ;YACnBC,QAAQ,EAAE,eAAe;YACzBT,SAAS,EAAE;UACf,CAAC,CAAC;UACF0F,OAAAA,CAAAA,MAAM,CAACX,SAAS,CAACsE,KAAK,EAAE,OAAO,EAAE;YAC7B9I,UAAU,EAAE,iBAAiB;YAC7BC,SAAS,EAAE,QAAQ;YACnBC,QAAQ,EAAE,eAAe;YACzBT,SAAS,EAAE;UACf,CAAC,CAAC;UACF0F,OAAAA,CAAAA,MAAM,CAACR,MAAM,CAACmE,KAAK,CAACtD,OAAO,EAAE,QAAQ,EAAE;YACnCxF,UAAU,EAAE,iBAAiB;YAC7BC,SAAS,EAAE,QAAQ;YACnBC,QAAQ,EAAE,eAAe;YACzBT,SAAS,EAAE;UACf,CAAC,CAAC;UACF0F,OAAAA,CAAAA,MAAM,CAACX,SAAS,CAACsE,KAAK,CAACtD,OAAO,EAAE,QAAQ,EAAE;YACtCxF,UAAU,EAAE,iBAAiB;YAC7BC,SAAS,EAAE,QAAQ;YACnBC,QAAQ,EAAE,eAAe;YACzBT,SAAS,EAAE;UACf,CAAC,CAAC;UACF0F,OAAAA,CAAAA,MAAM,CAACR,MAAM,CAACmE,KAAK,CAACtK,MAAM,EAAE,QAAQ,EAAE;YAClCwB,UAAU,EAAE,iBAAiB;YAC7BC,SAAS,EAAE,QAAQ;YACnBC,QAAQ,EAAE,eAAe;YACzBT,SAAS,EAAE;UACf,CAAC,CAAC;QACN;QACA,IAAI,CAAC,IAAI,CAACyH,OAAO,CAACgC,GAAG,CAACJ,KAAK,CAACtK,MAAM,CAAC,EAAE;UACjC,IAAI,CAAC0I,OAAO,CAAC2C,GAAG,CAACf,KAAK,CAACtK,MAAM,EAAE,EAAE,CAAC;QACtC;QACA;QACA;QACA,IAAI,CAAC0I,OAAO,CAACiC,GAAG,CAACL,KAAK,CAACtK,MAAM,CAAC,CAACyK,IAAI,CAACH,KAAK,CAAC;MAC9C;MACA;AACJ;AACA;AACA;AACA;MACIiB,eAAeA,CAACjB,KAAK,EAAE;QACnB,IAAI,CAAC,IAAI,CAAC5B,OAAO,CAACgC,GAAG,CAACJ,KAAK,CAACtK,MAAM,CAAC,EAAE;UACjC,MAAM,IAAI0F,aAAAA,CAAAA,YAAY,CAAC,4CAA4C,EAAE;YACjE1F,MAAM,EAAEsK,KAAK,CAACtK;UAClB,CAAC,CAAC;QACN;QACA,MAAMwL,UAAU,GAAG,IAAI,CAAC9C,OAAO,CAACiC,GAAG,CAACL,KAAK,CAACtK,MAAM,CAAC,CAACyL,OAAO,CAACnB,KAAK,CAAC;QAChE,IAAIkB,UAAU,GAAG,CAAC,CAAC,EAAE;UACjB,IAAI,CAAC9C,OAAO,CAACiC,GAAG,CAACL,KAAK,CAACtK,MAAM,CAAC,CAAC0L,MAAM,CAACF,UAAU,EAAE,CAAC,CAAC;QACxD,CAAC,MACI;UACD,MAAM,IAAI9F,aAAAA,CAAAA,YAAY,CAAC,uCAAuC,CAAC;QACnE;MACJ;IACJ;IAAC5E,OAAA,CAAA2H,MAAA,GAAAA,MAAA;;;;;;;;;;;;;;;;;ICxXD,IAAAkD,OAAA,GAAAxM,OAAA,CAAA,cAAA,CAAA;IACAA,OAAA,CAAA,gBAAA,CAAA;IARA;AACA;AACA;AACA;AACA;AACA;AACA;;IAGA,IAAIyM,aAAa;IACjB;AACA;AACA;AACA;AACA;AACA;AACA;IACO,MAAMC,wBAAwB,GAAGA,CAAAA,KAAM;MAC1C,IAAI,CAACD,aAAa,EAAE;QAChBA,aAAa,GAAG,IAAInD,OAAAA,CAAAA,MAAM,CAAC,CAAC;QAC5B;QACAmD,aAAa,CAAC9C,gBAAgB,CAAC,CAAC;QAChC8C,aAAa,CAACvC,gBAAgB,CAAC,CAAC;MACpC;MACA,OAAOuC,aAAa;IACxB,CAAC;IAAC9K,OAAA,CAAA+K,wBAAA,GAAAA,wBAAA;;;;;;;;;;;;IClBF,IAAArE,OAAA,GAAArI,OAAA,CAAA,iCAAA,CAAA;IACA,IAAA0G,aAAA,GAAA1G,OAAA,CAAA,uCAAA,CAAA;IACA,IAAAsI,MAAA,GAAAtI,OAAA,CAAA,YAAA,CAAA;IACA,IAAA2M,YAAA,GAAA3M,OAAA,CAAA,kBAAA,CAAA;IACA,IAAA4M,yBAAA,GAAA5M,OAAA,CAAA,qCAAA,CAAA;IACAA,OAAA,CAAA,eAAA,CAAA;IAZA;AACA;AACA;AACA;AACA;AACA;AACA;;IAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACA,SAASmM,aAAaA,CAACU,OAAO,EAAEhF,OAAO,EAAEhH,MAAM,EAAE;MAC7C,IAAIsK,KAAK;MACT,IAAI,OAAO0B,OAAO,KAAK,QAAQ,EAAE;QAC7B,MAAMC,UAAU,GAAG,IAAI5D,GAAG,CAAC2D,OAAO,EAAEhE,QAAQ,CAACD,IAAI,CAAC;QAClD,IAAI,YAAA,KAAyB,YAAY,EAAE;UACvC,IAAI,EAAEiE,OAAO,CAAC7B,UAAU,CAAC,GAAG,CAAC,IAAI6B,OAAO,CAAC7B,UAAU,CAAC,MAAM,CAAC,CAAC,EAAE;YAC1D,MAAM,IAAIzE,aAAAA,CAAAA,YAAY,CAAC,gBAAgB,EAAE;cACrClE,UAAU,EAAE,iBAAiB;cAC7BE,QAAQ,EAAE,eAAe;cACzBT,SAAS,EAAE;YACf,CAAC,CAAC;UACN;UACA;UACA;UACA,MAAMiL,YAAY,GAAGF,OAAO,CAAC7B,UAAU,CAAC,MAAM,CAAC,GAC3C8B,UAAU,CAACE,QAAQ,GAAGH,OAAO;UACjC;UACA,MAAMI,SAAS,GAAG,QAAQ;UAC1B,IAAK,IAAIxE,MAAM,CAAE,GAAEwE,SAAU,EAAC,CAAC,CAAEtE,IAAI,CAACoE,YAAY,CAAC,EAAE;YACjD9M,OAAAA,CAAAA,MAAM,CAACK,KAAK,CAAE,8DAA6D,GACtE,cAAa2M,SAAU,2CAA0C,GACjE,8DAA6D,CAAC;UACvE;QACJ;QACA,MAAMC,aAAa,GAAGA,CAAC;UAAE/H;QAAI,CAAC,KAAK;UAC/B,IAAI,YAAA,KAAyB,YAAY,EAAE;YACvC,IAAKA,GAAG,CAAC6H,QAAQ,KAAKF,UAAU,CAACE,QAAQ,IACpC7H,GAAG,CAACU,MAAM,KAAKiH,UAAU,CAACjH,MAAO,EAAE;cACpC5F,OAAAA,CAAAA,MAAM,CAACK,KAAK,CAAE,GAAEuM,OAAQ,+CAA8C,GACjE,GAAE1H,GAAI,sDAAqD,GAC3D,+BAA8B,CAAC;YACxC;UACJ;UACA,OAAOA,GAAG,CAACyD,IAAI,KAAKkE,UAAU,CAAClE,IAAI;QACvC,CAAC;QACD;QACAuC,KAAK,GAAG,IAAIlD,MAAAA,CAAAA,KAAK,CAACiF,aAAa,EAAErF,OAAO,EAAEhH,MAAM,CAAC;MACrD,CAAC,MACI,IAAIgM,OAAO,YAAYpE,MAAM,EAAE;QAChC;QACA0C,KAAK,GAAG,IAAI5C,YAAAA,CAAAA,WAAW,CAACsE,OAAO,EAAEhF,OAAO,EAAEhH,MAAM,CAAC;MACrD,CAAC,MACI,IAAI,OAAOgM,OAAO,KAAK,UAAU,EAAE;QACpC;QACA1B,KAAK,GAAG,IAAIlD,MAAAA,CAAAA,KAAK,CAAC4E,OAAO,EAAEhF,OAAO,EAAEhH,MAAM,CAAC;MAC/C,CAAC,MACI,IAAIgM,OAAO,YAAY5E,MAAAA,CAAAA,KAAK,EAAE;QAC/BkD,KAAK,GAAG0B,OAAO;MACnB,CAAC,MACI;QACD,MAAM,IAAItG,aAAAA,CAAAA,YAAY,CAAC,wBAAwB,EAAE;UAC7ClE,UAAU,EAAE,iBAAiB;UAC7BE,QAAQ,EAAE,eAAe;UACzBT,SAAS,EAAE;QACf,CAAC,CAAC;MACN;MACA,MAAM2K,aAAa,GAAG,CAAA,CAAA,EAAAC,yBAAAA,CAAAA,wBAAwB,EAAC,CAAC;MAChDD,aAAa,CAACN,aAAa,CAAChB,KAAK,CAAC;MAClC,OAAOA,KAAK;IAChB;;;;;;;;;;IC3FA,YAAA;;IACA;IACA,IAAA;MACA,IAAA,CAAA,0BAAA,CAAA,IAAA,CAAA,CAAA,CAAA;IACA,CAAA,CACA,OAAA,CAAA,EAAA,CAAA;;;;;;;;;ICEAnL,OAAA,CAAA,gBAAA,CAAA;IAPA;AACA;AACA;AACA;AACA;AACA;AACA;;IAEO,MAAMmN,sBAAsB,GAAG;MAClC;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIC,eAAe,EAAE,MAAA,CAAO;QAAEC;MAAS,CAAC,KAAK;QACrC,IAAIA,QAAQ,CAAC9H,MAAM,KAAK,GAAG,IAAI8H,QAAQ,CAAC9H,MAAM,KAAK,CAAC,EAAE;UAClD,OAAO8H,QAAQ;QACnB;QACA,OAAO,IAAI;MACf;IACJ,CAAC;IAAC1L,OAAA,CAAAwL,sBAAA,GAAAA,sBAAA;;;;;;;;;;;IClBFnN,OAAA,CAAA,gBAAA,CAAA;IAPA;AACA;AACA;AACA;AACA;AACA;AACA;;IAEA,MAAMsN,iBAAiB,GAAG;MACtBC,eAAe,EAAE,iBAAiB;MAClCC,QAAQ,EAAE,aAAa;MACvBC,MAAM,EAAE,SAAS;MACjBC,OAAO,EAAE,SAAS;MAClBC,MAAM,EAAE,OAAOC,YAAY,KAAK,WAAW,GAAGA,YAAY,CAACC,KAAK,GAAG;IACvE,CAAC;IACD,MAAMC,gBAAgB,GAAInI,SAAS,IAAK;MACpC,OAAO,CAAC2H,iBAAiB,CAACG,MAAM,EAAE9H,SAAS,EAAE2H,iBAAiB,CAACK,MAAM,CAAC,CACjEI,MAAM,CAAE/L,KAAK,IAAKA,KAAK,IAAIA,KAAK,CAACkE,MAAM,GAAG,CAAC,CAAC,CAC5C7E,IAAI,CAAC,GAAG,CAAC;IAClB,CAAC;IACD,MAAM2M,mBAAmB,GAAIC,EAAE,IAAK;MAChC,KAAK,MAAMvM,GAAG,IAAIF,MAAM,CAACC,IAAI,CAAC6L,iBAAiB,CAAC,EAAE;QAC9CW,EAAE,CAACvM,GAAG,CAAC;MACX;IACJ,CAAC;IACM,MAAMwM,UAAU,GAAG;MACtBC,aAAa,EAAG/H,OAAO,IAAK;QACxB4H,mBAAmB,CAAEtM,GAAG,IAAK;UACzB,IAAI,OAAO0E,OAAO,CAAC1E,GAAG,CAAC,KAAK,QAAQ,EAAE;YAClC4L,iBAAiB,CAAC5L,GAAG,CAAC,GAAG0E,OAAO,CAAC1E,GAAG,CAAC;UACzC;QACJ,CAAC,CAAC;MACN,CAAC;MACD0M,sBAAsB,EAAGC,aAAa,IAAK;QACvC,OAAOA,aAAa,IAAIP,gBAAgB,CAACR,iBAAiB,CAACC,eAAe,CAAC;MAC/E,CAAC;MACDe,eAAe,EAAGD,aAAa,IAAK;QAChC,OAAOA,aAAa,IAAIP,gBAAgB,CAACR,iBAAiB,CAACE,QAAQ,CAAC;MACxE,CAAC;MACDe,SAAS,EAAEA,CAAAA,KAAM;QACb,OAAOjB,iBAAiB,CAACG,MAAM;MACnC,CAAC;MACDe,cAAc,EAAGH,aAAa,IAAK;QAC/B,OAAOA,aAAa,IAAIP,gBAAgB,CAACR,iBAAiB,CAACI,OAAO,CAAC;MACvE,CAAC;MACDe,SAAS,EAAEA,CAAAA,KAAM;QACb,OAAOnB,iBAAiB,CAACK,MAAM;MACnC;IACJ,CAAC;IAAChM,OAAA,CAAAuM,UAAA,GAAAA,UAAA;;;;;;;;;;;IC1CFlO,OAAA,CAAA,gBAAA,CAAA;IANA;AACA;AACA;AACA;AACA;AACA;;IAEA,SAAS0O,WAAWA,CAACC,OAAO,EAAEC,YAAY,EAAE;MACxC,MAAMC,WAAW,GAAG,IAAI3F,GAAG,CAACyF,OAAO,CAAC;MACpC,KAAK,MAAMG,KAAK,IAAIF,YAAY,EAAE;QAC9BC,WAAW,CAACE,YAAY,CAACC,MAAM,CAACF,KAAK,CAAC;MAC1C;MACA,OAAOD,WAAW,CAACjG,IAAI;IAC3B;IACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACA,eAAeqG,sBAAsBA,CAACC,KAAK,EAAEpF,OAAO,EAAE8E,YAAY,EAAEO,YAAY,EAAE;MAC9E,MAAMC,kBAAkB,GAAGV,WAAW,CAAC5E,OAAO,CAAC3E,GAAG,EAAEyJ,YAAY,CAAC;MACjE;MACA,IAAI9E,OAAO,CAAC3E,GAAG,KAAKiK,kBAAkB,EAAE;QACpC,OAAOF,KAAK,CAAChH,KAAK,CAAC4B,OAAO,EAAEqF,YAAY,CAAC;MAC7C;MACA;MACA,MAAME,WAAW,GAAG;QAAE,GAAGF,YAAY;QAAEG,YAAY,EAAE;MAAK,CAAC;MAC3D,MAAMC,SAAS,GAAG,MAAML,KAAK,CAACzN,IAAI,CAACqI,OAAO,EAAEuF,WAAW,CAAC;MACxD,KAAK,MAAMG,QAAQ,IAAID,SAAS,EAAE;QAC9B,MAAME,mBAAmB,GAAGf,WAAW,CAACc,QAAQ,CAACrK,GAAG,EAAEyJ,YAAY,CAAC;QACnE,IAAIQ,kBAAkB,KAAKK,mBAAmB,EAAE;UAC5C,OAAOP,KAAK,CAAChH,KAAK,CAACsH,QAAQ,EAAEL,YAAY,CAAC;QAC9C;MACJ;MACA;IACJ;;;;;;;;;;;ICnCAnP,OAAA,CAAA,gBAAA,CAAA;IAPA;AACA;AACA;AACA;AACA;AACA;AACA;;IAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACA,MAAM0P,QAAQ,CAAC;MACX;AACJ;AACA;MACIlJ,WAAWA,CAAAA,EAAG;QACV,IAAI,CAACmJ,OAAO,GAAG,IAAIpF,OAAO,CAAC,CAACqF,OAAO,EAAEjE,MAAM,KAAK;UAC5C,IAAI,CAACiE,OAAO,GAAGA,OAAO;UACtB,IAAI,CAACjE,MAAM,GAAGA,MAAM;QACxB,CAAC,CAAC;MACN;IACJ;IAAChK,OAAA,CAAA+N,QAAA,GAAAA,QAAA;;;;;;;;;;;ICnBD1P,OAAA,CAAA,gBAAA,CAAA;IAPA;AACA;AACA;AACA;AACA;AACA;AACA;;IAEA;IACA,MAAM6P,mBAAmB,GAAG,IAAIC,GAAG,CAAC,CAAC;IAACnO,OAAA,CAAAkO,mBAAA,GAAAA,mBAAA;;;;;;;;;;;ICFtC,IAAAxH,OAAA,GAAArI,OAAA,CAAA,uBAAA,CAAA;IACA,IAAA+P,oBAAA,GAAA/P,OAAA,CAAA,kCAAA,CAAA;IACAA,OAAA,CAAA,gBAAA,CAAA;IATA;AACA;AACA;AACA;AACA;AACA;AACA;;IAIA;AACA;AACA;AACA;AACA;AACA;AACA;IACA,eAAegQ,0BAA0BA,CAAAA,EAAG;MACxC,IAAI,YAAA,KAAyB,YAAY,EAAE;QACvC/P,OAAAA,CAAAA,MAAM,CAACM,GAAG,CAAE,gBAAesP,oBAAAA,CAAAA,mBAAmB,CAAC9K,IAAK,GAAE,GACjD,+BAA8B,CAAC;MACxC;MACA,KAAK,MAAMkL,QAAQ,IAAIJ,oBAAAA,CAAAA,mBAAmB,EAAE;QACxC,MAAMI,QAAQ,CAAC,CAAC;QAChB,IAAI,YAAA,KAAyB,YAAY,EAAE;UACvChQ,OAAAA,CAAAA,MAAM,CAACM,GAAG,CAAC0P,QAAQ,EAAE,cAAc,CAAC;QACxC;MACJ;MACA,IAAI,YAAA,KAAyB,YAAY,EAAE;QACvChQ,OAAAA,CAAAA,MAAM,CAACM,GAAG,CAAC,6BAA6B,CAAC;MAC7C;IACJ;;;;;;;;;;;;;ICzBAP,OAAA,CAAA,gBAAA,CAAA;IANA;AACA;AACA;AACA;AACA;AACA;;IAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACO,SAASkQ,OAAOA,CAACC,EAAE,EAAE;MACxB,OAAO,IAAI5F,OAAO,CAAEqF,OAAO,IAAKQ,UAAU,CAACR,OAAO,EAAEO,EAAE,CAAC,CAAC;IAC5D;;;;;;;;;;;ICVA,IAAAxI,OAAA,GAAA3H,OAAA,CAAA,iCAAA,CAAA;IACA,IAAAqQ,uBAAA,GAAArQ,OAAA,CAAA,iDAAA,CAAA;IACA,IAAAsQ,SAAA,GAAAtQ,OAAA,CAAA,mCAAA,CAAA;IACA,IAAAuQ,2BAAA,GAAAvQ,OAAA,CAAA,qDAAA,CAAA;IACA,IAAAqJ,eAAA,GAAArJ,OAAA,CAAA,yCAAA,CAAA;IACA,IAAAqI,OAAA,GAAArI,OAAA,CAAA,iCAAA,CAAA;IACA,IAAAwQ,QAAA,GAAAxQ,OAAA,CAAA,kCAAA,CAAA;IACA,IAAA0G,aAAA,GAAA1G,OAAA,CAAA,uCAAA,CAAA;IACAA,OAAA,CAAA,eAAA,CAAA;IAfA;AACA;AACA;AACA;AACA;AACA;AACA;;IAUA,SAASyQ,SAASA,CAACC,KAAK,EAAE;MACtB,OAAQ,OAAOA,KAAK,KAAK,QAAQ,GAAI,IAAIhG,OAAO,CAACgG,KAAK,CAAC,GAAGA,KAAK;IACnE;IACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACA,MAAMC,eAAe,CAAC;MAClB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACInK,WAAWA,CAACoK,QAAQ,EAAEC,OAAO,EAAE;QAC3B,IAAI,CAACC,UAAU,GAAG,CAAC,CAAC;QACpB;AACR;AACA;AACA;AACA;AACA;AACA;AACA;QACQ;AACR;AACA;AACA;AACA;AACA;AACA;QACQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACQ,IAAI,YAAA,KAAyB,YAAY,EAAE;UACvCtJ,OAAAA,CAAAA,MAAM,CAACP,UAAU,CAAC4J,OAAO,CAAChH,KAAK,EAAEkH,eAAe,EAAE;YAC9C1O,UAAU,EAAE,oBAAoB;YAChCC,SAAS,EAAE,iBAAiB;YAC5BC,QAAQ,EAAE,aAAa;YACvBT,SAAS,EAAE;UACf,CAAC,CAAC;QACN;QACAN,MAAM,CAACwP,MAAM,CAAC,IAAI,EAAEH,OAAO,CAAC;QAC5B,IAAI,CAAChH,KAAK,GAAGgH,OAAO,CAAChH,KAAK;QAC1B,IAAI,CAACoH,SAAS,GAAGL,QAAQ;QACzB,IAAI,CAACM,gBAAgB,GAAG,IAAIxB,SAAAA,CAAAA,QAAQ,CAAC,CAAC;QACtC,IAAI,CAACyB,uBAAuB,GAAG,EAAE;QACjC;QACA;QACA,IAAI,CAACC,QAAQ,GAAG,CAAC,GAAGR,QAAQ,CAACS,OAAO,CAAC;QACrC,IAAI,CAACC,eAAe,GAAG,IAAI9H,GAAG,CAAC,CAAC;QAChC,KAAK,MAAM+H,MAAM,IAAI,IAAI,CAACH,QAAQ,EAAE;UAChC,IAAI,CAACE,eAAe,CAACpF,GAAG,CAACqF,MAAM,EAAE,CAAC,CAAC,CAAC;QACxC;QACA,IAAI,CAAC1H,KAAK,CAACc,SAAS,CAAC,IAAI,CAACuG,gBAAgB,CAACvB,OAAO,CAAC;MACvD;MACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACI,MAAM6B,KAAKA,CAACd,KAAK,EAAE;QACf,MAAM;UAAE7G;QAAM,CAAC,GAAG,IAAI;QACtB,IAAIC,OAAO,GAAG2G,SAAS,CAACC,KAAK,CAAC;QAC9B,IAAI5G,OAAO,CAAC2H,IAAI,KAAK,UAAU,IAC3B5H,KAAK,YAAY6H,UAAU,IAC3B7H,KAAK,CAAC8H,eAAe,EAAE;UACvB,MAAMC,uBAAuB,GAAG,MAAM/H,KAAK,CAAC8H,eAAe;UAC3D,IAAIC,uBAAuB,EAAE;YACzB,IAAI,YAAA,KAAyB,YAAY,EAAE;cACvC3R,OAAAA,CAAAA,MAAM,CAACM,GAAG,CAAE,4CAA2C,GAClD,IAAG,CAAA,CAAA,EAAAyI,eAAAA,CAAAA,cAAc,EAACc,OAAO,CAAC3E,GAAG,CAAE,GAAE,CAAC;YAC3C;YACA,OAAOyM,uBAAuB;UAClC;QACJ;QACA;QACA;QACA;QACA,MAAMC,eAAe,GAAG,IAAI,CAACC,WAAW,CAAC,cAAc,CAAC,GACpDhI,OAAO,CAACiI,KAAK,CAAC,CAAC,GAAG,IAAI;QAC1B,IAAI;UACA,KAAK,MAAMC,EAAE,IAAI,IAAI,CAACC,gBAAgB,CAAC,kBAAkB,CAAC,EAAE;YACxDnI,OAAO,GAAG,MAAMkI,EAAE,CAAC;cAAElI,OAAO,EAAEA,OAAO,CAACiI,KAAK,CAAC,CAAC;cAAElI;YAAM,CAAC,CAAC;UAC3D;QACJ,CAAC,CACD,OAAO6B,GAAG,EAAE;UACR,MAAM,IAAInF,aAAAA,CAAAA,YAAY,CAAC,iCAAiC,EAAE;YACtDhD,WAAW,EAAEmI;UACjB,CAAC,CAAC;QACN;QACA;QACA;QACA;QACA,MAAMwG,qBAAqB,GAAGpI,OAAO,CAACiI,KAAK,CAAC,CAAC;QAC7C,IAAI;UACA,IAAII,aAAa;UACjB;UACAA,aAAa,GAAG,MAAMX,KAAK,CAAC1H,OAAO,EAAEA,OAAO,CAAC2H,IAAI,KAAK,UAAU,GAC5DzF,SAAS,GAAG,IAAI,CAACiF,SAAS,CAACmB,YAAY,CAAC;UAC5C,IAAI,YAAA,KAAyB,YAAY,EAAE;YACvCnS,OAAAA,CAAAA,MAAM,CAACK,KAAK,CAAE,sBAAqB,GAC9B,IAAG,CAAA,CAAA,EAAA0I,eAAAA,CAAAA,cAAc,EAACc,OAAO,CAAC3E,GAAG,CAAE,6BAA4B,GAC3D,WAAUgN,aAAa,CAAC5M,MAAO,IAAG,CAAC;UAC5C;UACA,KAAK,MAAM0K,QAAQ,IAAI,IAAI,CAACgC,gBAAgB,CAAC,iBAAiB,CAAC,EAAE;YAC7DE,aAAa,GAAG,MAAMlC,QAAQ,CAAC;cAC3BpG,KAAK;cACLC,OAAO,EAAEoI,qBAAqB;cAC9B7E,QAAQ,EAAE8E;YACd,CAAC,CAAC;UACN;UACA,OAAOA,aAAa;QACxB,CAAC,CACD,OAAO1R,KAAK,EAAE;UACV,IAAI,YAAA,KAAyB,YAAY,EAAE;YACvCR,OAAAA,CAAAA,MAAM,CAACM,GAAG,CAAE,sBAAqB,GAC5B,IAAG,CAAA,CAAA,EAAAyI,eAAAA,CAAAA,cAAc,EAACc,OAAO,CAAC3E,GAAG,CAAE,mBAAkB,EAAE1E,KAAK,CAAC;UAClE;UACA;UACA;UACA,IAAIoR,eAAe,EAAE;YACjB,MAAM,IAAI,CAACQ,YAAY,CAAC,cAAc,EAAE;cACpC5R,KAAK;cACLoJ,KAAK;cACLgI,eAAe,EAAEA,eAAe,CAACE,KAAK,CAAC,CAAC;cACxCjI,OAAO,EAAEoI,qBAAqB,CAACH,KAAK,CAAC;YACzC,CAAC,CAAC;UACN;UACA,MAAMtR,KAAK;QACf;MACJ;MACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACI,MAAM6R,gBAAgBA,CAAC5B,KAAK,EAAE;QAC1B,MAAMrD,QAAQ,GAAG,MAAM,IAAI,CAACmE,KAAK,CAACd,KAAK,CAAC;QACxC,MAAM6B,aAAa,GAAGlF,QAAQ,CAAC0E,KAAK,CAAC,CAAC;QACtC,IAAI,CAACpH,SAAS,CAAC,IAAI,CAAC6H,QAAQ,CAAC9B,KAAK,EAAE6B,aAAa,CAAC,CAAC;QACnD,OAAOlF,QAAQ;MACnB;MACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACI,MAAMoF,UAAUA,CAAC/Q,GAAG,EAAE;QAClB,MAAMoI,OAAO,GAAG2G,SAAS,CAAC/O,GAAG,CAAC;QAC9B,IAAIgR,cAAc;QAClB,MAAM;UAAE/M,SAAS;UAAEwJ;QAAa,CAAC,GAAG,IAAI,CAAC8B,SAAS;QAClD,MAAM0B,gBAAgB,GAAG,MAAM,IAAI,CAACC,WAAW,CAAC9I,OAAO,EAAE,MAAM,CAAC;QAChE,MAAM+I,iBAAiB,GAAG;UAAE,GAAG1D,YAAY;UAAE,GAAG;YAAExJ;UAAU;QAAE,CAAC;QAC/D+M,cAAc,GAAG,MAAMI,MAAM,CAAC5K,KAAK,CAACyK,gBAAgB,EAAEE,iBAAiB,CAAC;QACxE,IAAI,YAAA,KAAyB,YAAY,EAAE;UACvC,IAAIH,cAAc,EAAE;YAChBzS,OAAAA,CAAAA,MAAM,CAACK,KAAK,CAAE,+BAA8BqF,SAAU,IAAG,CAAC;UAC9D,CAAC,MACI;YACD1F,OAAAA,CAAAA,MAAM,CAACK,KAAK,CAAE,gCAA+BqF,SAAU,IAAG,CAAC;UAC/D;QACJ;QACA,KAAK,MAAMsK,QAAQ,IAAI,IAAI,CAACgC,gBAAgB,CAAC,0BAA0B,CAAC,EAAE;UACtES,cAAc,GAAG,CAAC,MAAMzC,QAAQ,CAAC;YAC7BtK,SAAS;YACTwJ,YAAY;YACZuD,cAAc;YACd5I,OAAO,EAAE6I,gBAAgB;YACzB9I,KAAK,EAAE,IAAI,CAACA;UAChB,CAAC,CAAC,KAAKmC,SAAS;QACpB;QACA,OAAO0G,cAAc;MACzB;MACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACI,MAAMF,QAAQA,CAAC9Q,GAAG,EAAE2L,QAAQ,EAAE;QAC1B,MAAMvD,OAAO,GAAG2G,SAAS,CAAC/O,GAAG,CAAC;QAC9B;QACA;QACA,MAAM,CAAA,CAAA,EAAAwO,QAAAA,CAAAA,OAAO,EAAC,CAAC,CAAC;QAChB,MAAMyC,gBAAgB,GAAG,MAAM,IAAI,CAACC,WAAW,CAAC9I,OAAO,EAAE,OAAO,CAAC;QACjE,IAAI,YAAA,KAAyB,YAAY,EAAE;UACvC,IAAI6I,gBAAgB,CAAC9R,MAAM,IAAI8R,gBAAgB,CAAC9R,MAAM,KAAK,KAAK,EAAE;YAC9D,MAAM,IAAI0F,aAAAA,CAAAA,YAAY,CAAC,kCAAkC,EAAE;cACvDpB,GAAG,EAAE,CAAA,CAAA,EAAA6D,eAAAA,CAAAA,cAAc,EAAC2J,gBAAgB,CAACxN,GAAG,CAAC;cACzCtE,MAAM,EAAE8R,gBAAgB,CAAC9R;YAC7B,CAAC,CAAC;UACN;QACJ;QACA,IAAI,CAACwM,QAAQ,EAAE;UACX,IAAI,YAAA,KAAyB,YAAY,EAAE;YACvCpN,OAAAA,CAAAA,MAAM,CAACQ,KAAK,CAAE,yCAAwC,GACjD,IAAG,CAAA,CAAA,EAAAuI,eAAAA,CAAAA,cAAc,EAAC2J,gBAAgB,CAACxN,GAAG,CAAE,IAAG,CAAC;UACrD;UACA,MAAM,IAAIoB,aAAAA,CAAAA,YAAY,CAAC,4BAA4B,EAAE;YACjDpB,GAAG,EAAE,CAAA,CAAA,EAAA6D,eAAAA,CAAAA,cAAc,EAAC2J,gBAAgB,CAACxN,GAAG;UAC5C,CAAC,CAAC;QACN;QACA,MAAM4N,eAAe,GAAG,MAAM,IAAI,CAACC,0BAA0B,CAAC3F,QAAQ,CAAC;QACvE,IAAI,CAAC0F,eAAe,EAAE;UAClB,IAAI,YAAA,KAAyB,YAAY,EAAE;YACvC9S,OAAAA,CAAAA,MAAM,CAACK,KAAK,CAAE,aAAY,CAAA,CAAA,EAAA0I,eAAAA,CAAAA,cAAc,EAAC2J,gBAAgB,CAACxN,GAAG,CAAE,IAAG,GAC7D,qBAAoB,EAAE4N,eAAe,CAAC;UAC/C;UACA,OAAO,KAAK;QAChB;QACA,MAAM;UAAEpN,SAAS;UAAEwJ;QAAa,CAAC,GAAG,IAAI,CAAC8B,SAAS;QAClD,MAAM/B,KAAK,GAAG,MAAMhP,IAAI,CAAC4S,MAAM,CAACG,IAAI,CAACtN,SAAS,CAAC;QAC/C,MAAMuN,sBAAsB,GAAG,IAAI,CAACpB,WAAW,CAAC,gBAAgB,CAAC;QACjE,MAAMqB,WAAW,GAAGD,sBAAsB,GAAG,MAAM,CAAA,CAAA,EAAAjE,uBAAAA,CAAAA,sBAAsB;QACzE;QACA;QACA;QACAC,KAAK,EAAEyD,gBAAgB,CAACZ,KAAK,CAAC,CAAC,EAAE,CAAC,iBAAiB,CAAC,EAAE5C,YAAY,CAAC,GAC/D,IAAI;QACR,IAAI,YAAA,KAAyB,YAAY,EAAE;UACvClP,OAAAA,CAAAA,MAAM,CAACK,KAAK,CAAE,iBAAgBqF,SAAU,8BAA6B,GAChE,OAAM,CAAA,CAAA,EAAAqD,eAAAA,CAAAA,cAAc,EAAC2J,gBAAgB,CAACxN,GAAG,CAAE,GAAE,CAAC;QACvD;QACA,IAAI;UACA,MAAM+J,KAAK,CAACkE,GAAG,CAACT,gBAAgB,EAAEO,sBAAsB,GACpDH,eAAe,CAAChB,KAAK,CAAC,CAAC,GAAGgB,eAAe,CAAC;QAClD,CAAC,CACD,OAAOtS,KAAK,EAAE;UACV;UACA,IAAIA,KAAK,CAACoC,IAAI,KAAK,oBAAoB,EAAE;YACrC,MAAM,CAAA,CAAA,EAAAmN,2BAAAA,CAAAA,0BAA0B,EAAC,CAAC;UACtC;UACA,MAAMvP,KAAK;QACf;QACA,KAAK,MAAMwP,QAAQ,IAAI,IAAI,CAACgC,gBAAgB,CAAC,gBAAgB,CAAC,EAAE;UAC5D,MAAMhC,QAAQ,CAAC;YACXtK,SAAS;YACTwN,WAAW;YACXE,WAAW,EAAEN,eAAe,CAAChB,KAAK,CAAC,CAAC;YACpCjI,OAAO,EAAE6I,gBAAgB;YACzB9I,KAAK,EAAE,IAAI,CAACA;UAChB,CAAC,CAAC;QACN;QACA,OAAO,IAAI;MACf;MACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACI,MAAM+I,WAAWA,CAAC9I,OAAO,EAAE2H,IAAI,EAAE;QAC7B,IAAI,CAAC,IAAI,CAACX,UAAU,CAACW,IAAI,CAAC,EAAE;UACxB,IAAIkB,gBAAgB,GAAG7I,OAAO;UAC9B,KAAK,MAAMmG,QAAQ,IAAI,IAAI,CAACgC,gBAAgB,CAAC,oBAAoB,CAAC,EAAE;YAChEU,gBAAgB,GAAGlC,SAAS,CAAC,MAAMR,QAAQ,CAAC;cACxCwB,IAAI;cACJ3H,OAAO,EAAE6I,gBAAgB;cACzB9I,KAAK,EAAE,IAAI,CAACA,KAAK;cACjBqB,MAAM,EAAE,IAAI,CAACA;YACjB,CAAC,CAAC,CAAC;UACP;UACA,IAAI,CAAC4F,UAAU,CAACW,IAAI,CAAC,GAAGkB,gBAAgB;QAC5C;QACA,OAAO,IAAI,CAAC7B,UAAU,CAACW,IAAI,CAAC;MAChC;MACA;AACJ;AACA;AACA;AACA;AACA;AACA;MACIK,WAAWA,CAACjP,IAAI,EAAE;QACd,KAAK,MAAM0O,MAAM,IAAI,IAAI,CAACN,SAAS,CAACI,OAAO,EAAE;UACzC,IAAIxO,IAAI,IAAI0O,MAAM,EAAE;YAChB,OAAO,IAAI;UACf;QACJ;QACA,OAAO,KAAK;MAChB;MACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACI,MAAMc,YAAYA,CAACxP,IAAI,EAAEiM,KAAK,EAAE;QAC5B,KAAK,MAAMmB,QAAQ,IAAI,IAAI,CAACgC,gBAAgB,CAACpP,IAAI,CAAC,EAAE;UAChD;UACA;UACA,MAAMoN,QAAQ,CAACnB,KAAK,CAAC;QACzB;MACJ;MACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACI,CAACmD,gBAAgBA,CAACpP,IAAI,EAAE;QACpB,KAAK,MAAM0O,MAAM,IAAI,IAAI,CAACN,SAAS,CAACI,OAAO,EAAE;UACzC,IAAI,OAAOE,MAAM,CAAC1O,IAAI,CAAC,KAAK,UAAU,EAAE;YACpC,MAAMyQ,KAAK,GAAG,IAAI,CAAChC,eAAe,CAAC9F,GAAG,CAAC+F,MAAM,CAAC;YAC9C,MAAMgC,gBAAgB,GAAIzE,KAAK,IAAK;cAChC,MAAM0E,aAAa,GAAG;gBAAE,GAAG1E,KAAK;gBAAEwE;cAAM,CAAC;cACzC;cACA;cACA,OAAO/B,MAAM,CAAC1O,IAAI,CAAC,CAAC2Q,aAAa,CAAC;YACtC,CAAC;YACD,MAAMD,gBAAgB;UAC1B;QACJ;MACJ;MACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACI5I,SAASA,CAACgF,OAAO,EAAE;QACf,IAAI,CAACwB,uBAAuB,CAAC7F,IAAI,CAACqE,OAAO,CAAC;QAC1C,OAAOA,OAAO;MAClB;MACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACI,MAAM8D,WAAWA,CAAAA,EAAG;QAChB,IAAI9D,OAAO;QACX,OAAOA,OAAO,GAAG,IAAI,CAACwB,uBAAuB,CAACuC,KAAK,CAAC,CAAC,EAAE;UACnD,MAAM/D,OAAO;QACjB;MACJ;MACA;AACJ;AACA;AACA;MACIgE,OAAOA,CAAAA,EAAG;QACN,IAAI,CAACzC,gBAAgB,CAACtB,OAAO,CAAC,CAAC;MACnC;MACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACI,MAAMoD,0BAA0BA,CAAC3F,QAAQ,EAAE;QACvC,IAAI0F,eAAe,GAAG1F,QAAQ;QAC9B,IAAIuG,WAAW,GAAG,KAAK;QACvB,KAAK,MAAM3D,QAAQ,IAAI,IAAI,CAACgC,gBAAgB,CAAC,iBAAiB,CAAC,EAAE;UAC7Dc,eAAe,GAAG,CAAC,MAAM9C,QAAQ,CAAC;YAC9BnG,OAAO,EAAE,IAAI,CAACA,OAAO;YACrBuD,QAAQ,EAAE0F,eAAe;YACzBlJ,KAAK,EAAE,IAAI,CAACA;UAChB,CAAC,CAAC,KAAKmC,SAAS;UAChB4H,WAAW,GAAG,IAAI;UAClB,IAAI,CAACb,eAAe,EAAE;YAClB;UACJ;QACJ;QACA,IAAI,CAACa,WAAW,EAAE;UACd,IAAIb,eAAe,IAAIA,eAAe,CAACxN,MAAM,KAAK,GAAG,EAAE;YACnDwN,eAAe,GAAG/G,SAAS;UAC/B;UACA,IAAI,YAAA,KAAyB,YAAY,EAAE;YACvC,IAAI+G,eAAe,EAAE;cACjB,IAAIA,eAAe,CAACxN,MAAM,KAAK,GAAG,EAAE;gBAChC,IAAIwN,eAAe,CAACxN,MAAM,KAAK,CAAC,EAAE;kBAC9BtF,OAAAA,CAAAA,MAAM,CAACO,IAAI,CAAE,qBAAoB,IAAI,CAACsJ,OAAO,CAAC3E,GAAI,IAAG,GAChD,0DAAyD,GACzD,mDAAkD,CAAC;gBAC5D,CAAC,MACI;kBACDlF,OAAAA,CAAAA,MAAM,CAACK,KAAK,CAAE,qBAAoB,IAAI,CAACwJ,OAAO,CAAC3E,GAAI,IAAG,GACjD,8BAA6BkI,QAAQ,CAAC9H,MAAO,cAAa,GAC1D,wBAAuB,CAAC;gBACjC;cACJ;YACJ;UACJ;QACJ;QACA,OAAOwN,eAAe;MAC1B;IACJ;IAACpR,OAAA,CAAAgP,eAAA,GAAAA,eAAA;;;;;;;;;;;;;;;;;;;IC7eD,IAAAkD,WAAA,GAAA7T,OAAA,CAAA,qCAAA,CAAA;IACA,IAAA0G,aAAA,GAAA1G,OAAA,CAAA,uCAAA,CAAA;IACA,IAAAqI,OAAA,GAAArI,OAAA,CAAA,iCAAA,CAAA;IACA,IAAAqJ,eAAA,GAAArJ,OAAA,CAAA,yCAAA,CAAA;IACA,IAAA8T,gBAAA,GAAA9T,OAAA,CAAA,sBAAA,CAAA;IACAA,OAAA,CAAA,eAAA,CAAA;IAZA;AACA;AACA;AACA;AACA;AACA;AACA;;IAOA;AACA;AACA;AACA;AACA;IACA,MAAM+T,QAAQ,CAAC;MACX;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIvN,WAAWA,CAACqK,OAAO,GAAG,CAAC,CAAC,EAAE;QACtB;AACR;AACA;AACA;AACA;AACA;AACA;QACQ,IAAI,CAAClL,SAAS,GAAGuI,WAAAA,CAAAA,UAAU,CAACM,cAAc,CAACqC,OAAO,CAAClL,SAAS,CAAC;QAC7D;AACR;AACA;AACA;AACA;AACA;AACA;QACQ,IAAI,CAAC0L,OAAO,GAAGR,OAAO,CAACQ,OAAO,IAAI,EAAE;QACpC;AACR;AACA;AACA;AACA;AACA;AACA;QACQ,IAAI,CAACe,YAAY,GAAGvB,OAAO,CAACuB,YAAY;QACxC;AACR;AACA;AACA;AACA;AACA;AACA;QACQ,IAAI,CAACjD,YAAY,GAAG0B,OAAO,CAAC1B,YAAY;MAC5C;MACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIrH,MAAMA,CAAC+I,OAAO,EAAE;QACZ,MAAM,CAACmD,YAAY,CAAC,GAAG,IAAI,CAACC,SAAS,CAACpD,OAAO,CAAC;QAC9C,OAAOmD,YAAY;MACvB;MACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIC,SAASA,CAACpD,OAAO,EAAE;QACf;QACA,IAAIA,OAAO,YAAYa,UAAU,EAAE;UAC/Bb,OAAO,GAAG;YACNhH,KAAK,EAAEgH,OAAO;YACd/G,OAAO,EAAE+G,OAAO,CAAC/G;UACrB,CAAC;QACL;QACA,MAAMD,KAAK,GAAGgH,OAAO,CAAChH,KAAK;QAC3B,MAAMC,OAAO,GAAG,OAAO+G,OAAO,CAAC/G,OAAO,KAAK,QAAQ,GAC/C,IAAIY,OAAO,CAACmG,OAAO,CAAC/G,OAAO,CAAC,GAC5B+G,OAAO,CAAC/G,OAAO;QACnB,MAAMoB,MAAM,GAAG,QAAQ,IAAI2F,OAAO,GAAGA,OAAO,CAAC3F,MAAM,GAAGc,SAAS;QAC/D,MAAMnE,OAAO,GAAG,IAAI8I,gBAAAA,CAAAA,eAAe,CAAC,IAAI,EAAE;UAAE9G,KAAK;UAAEC,OAAO;UAAEoB;QAAO,CAAC,CAAC;QACrE,MAAM8I,YAAY,GAAG,IAAI,CAACE,YAAY,CAACrM,OAAO,EAAEiC,OAAO,EAAED,KAAK,CAAC;QAC/D,MAAMsK,WAAW,GAAG,IAAI,CAACC,cAAc,CAACJ,YAAY,EAAEnM,OAAO,EAAEiC,OAAO,EAAED,KAAK,CAAC;QAC9E;QACA,OAAO,CAACmK,YAAY,EAAEG,WAAW,CAAC;MACtC;MACA,MAAMD,YAAYA,CAACrM,OAAO,EAAEiC,OAAO,EAAED,KAAK,EAAE;QACxC,MAAMhC,OAAO,CAACwK,YAAY,CAAC,kBAAkB,EAAE;UAAExI,KAAK;UAAEC;QAAQ,CAAC,CAAC;QAClE,IAAIuD,QAAQ,GAAGrB,SAAS;QACxB,IAAI;UACAqB,QAAQ,GAAG,MAAM,IAAI,CAACgH,OAAO,CAACvK,OAAO,EAAEjC,OAAO,CAAC;UAC/C;UACA;UACA;UACA,IAAI,CAACwF,QAAQ,IAAIA,QAAQ,CAACtG,IAAI,KAAK,OAAO,EAAE;YACxC,MAAM,IAAIR,aAAAA,CAAAA,YAAY,CAAC,aAAa,EAAE;cAAEpB,GAAG,EAAE2E,OAAO,CAAC3E;YAAI,CAAC,CAAC;UAC/D;QACJ,CAAC,CACD,OAAO1E,KAAK,EAAE;UACV,KAAK,MAAMwP,QAAQ,IAAIpI,OAAO,CAACoK,gBAAgB,CAAC,iBAAiB,CAAC,EAAE;YAChE5E,QAAQ,GAAG,MAAM4C,QAAQ,CAAC;cAAExP,KAAK;cAAEoJ,KAAK;cAAEC;YAAQ,CAAC,CAAC;YACpD,IAAIuD,QAAQ,EAAE;cACV;YACJ;UACJ;UACA,IAAI,CAACA,QAAQ,EAAE;YACX,MAAM5M,KAAK;UACf,CAAC,MACI,IAAI,YAAA,KAAyB,YAAY,EAAE;YAC5CR,OAAAA,CAAAA,MAAM,CAACM,GAAG,CAAE,wBAAuB,CAAA,CAAA,EAAAyI,eAAAA,CAAAA,cAAc,EAACc,OAAO,CAAC3E,GAAG,CAAE,KAAI,GAC9D,MAAK1E,KAAM,yDAAwD,GACnE,2BAA0B,CAAC;UACpC;QACJ;QACA,KAAK,MAAMwP,QAAQ,IAAIpI,OAAO,CAACoK,gBAAgB,CAAC,oBAAoB,CAAC,EAAE;UACnE5E,QAAQ,GAAG,MAAM4C,QAAQ,CAAC;YAAEpG,KAAK;YAAEC,OAAO;YAAEuD;UAAS,CAAC,CAAC;QAC3D;QACA,OAAOA,QAAQ;MACnB;MACA,MAAM+G,cAAcA,CAACJ,YAAY,EAAEnM,OAAO,EAAEiC,OAAO,EAAED,KAAK,EAAE;QACxD,IAAIwD,QAAQ;QACZ,IAAI5M,KAAK;QACT,IAAI;UACA4M,QAAQ,GAAG,MAAM2G,YAAY;QACjC,CAAC,CACD,OAAOvT,KAAK,EAAE;UACV;UACA;UACA;QAAA;QAEJ,IAAI;UACA,MAAMoH,OAAO,CAACwK,YAAY,CAAC,mBAAmB,EAAE;YAC5CxI,KAAK;YACLC,OAAO;YACPuD;UACJ,CAAC,CAAC;UACF,MAAMxF,OAAO,CAAC4L,WAAW,CAAC,CAAC;QAC/B,CAAC,CACD,OAAOa,cAAc,EAAE;UACnB7T,KAAK,GAAG6T,cAAc;QAC1B;QACA,MAAMzM,OAAO,CAACwK,YAAY,CAAC,oBAAoB,EAAE;UAC7CxI,KAAK;UACLC,OAAO;UACPuD,QAAQ;UACR5M;QACJ,CAAC,CAAC;QACFoH,OAAO,CAAC8L,OAAO,CAAC,CAAC;QACjB,IAAIlT,KAAK,EAAE;UACP,MAAMA,KAAK;QACf;MACJ;IACJ;;IAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IAhBAkB,OAAA,CAAAoS,QAAA,GAAAA,QAAA;;;;;;;;;;;;;;;;ICxMA,IAAA1L,OAAA,GAAArI,OAAA,CAAA,iCAAA,CAAA;IACA,IAAAqJ,eAAA,GAAArJ,OAAA,CAAA,yCAAA,CAAA;IACAA,OAAA,CAAA,gBAAA,CAAA;IATA;AACA;AACA;AACA;AACA;AACA;AACA;;IAIO,MAAM4B,QAAQ,GAAG;MACpB2S,aAAa,EAAEA,CAACC,YAAY,EAAE1K,OAAO,KAAM,SAAQ0K,YAAa,mBAAkB,CAAA,CAAA,EAAAxL,eAAAA,CAAAA,cAAc,EAACc,OAAO,CAAC3E,GAAG,CAAE,GAAE;MAChHsP,kBAAkB,EAAGpH,QAAQ,IAAK;QAC9B,IAAIA,QAAQ,EAAE;UACVpN,OAAAA,CAAAA,MAAM,CAACS,cAAc,CAAE,+BAA8B,CAAC;UACtDT,OAAAA,CAAAA,MAAM,CAACM,GAAG,CAAC8M,QAAQ,IAAI,wBAAwB,CAAC;UAChDpN,OAAAA,CAAAA,MAAM,CAACU,QAAQ,CAAC,CAAC;QACrB;MACJ;IACJ,CAAC;IAACgB,OAAA,CAAAC,QAAA,GAAAA,QAAA;;;;;;;;;;;;;ICZF,IAAA+F,OAAA,GAAA3H,OAAA,CAAA,iCAAA,CAAA;IACA,IAAAqI,OAAA,GAAArI,OAAA,CAAA,iCAAA,CAAA;IACA,IAAA0G,aAAA,GAAA1G,OAAA,CAAA,uCAAA,CAAA;IACA,IAAA0U,uBAAA,GAAA1U,OAAA,CAAA,qCAAA,CAAA;IACA,IAAA2U,SAAA,GAAA3U,OAAA,CAAA,eAAA,CAAA;IACA,IAAA8F,SAAA,GAAA9F,OAAA,CAAA,qBAAA,CAAA;IACAA,OAAA,CAAA,eAAA,CAAA;IAbA;AACA;AACA;AACA;AACA;AACA;AACA;;IAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACA,MAAM4U,oBAAoB,SAASb,SAAAA,CAAAA,QAAQ,CAAC;MACxC;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIvN,WAAWA,CAACqK,OAAO,EAAE;QACjB,KAAK,CAACA,OAAO,CAAC;QACd;QACA;QACA,IAAI,CAAC,IAAI,CAACQ,OAAO,CAACwD,IAAI,CAAEC,CAAC,IAAK,iBAAiB,IAAIA,CAAC,CAAC,EAAE;UACnD,IAAI,CAACzD,OAAO,CAAC0D,OAAO,CAAC5H,uBAAAA,CAAAA,sBAAsB,CAAC;QAChD;MACJ;MACA;AACJ;AACA;AACA;AACA;AACA;AACA;MACI,MAAMkH,OAAOA,CAACvK,OAAO,EAAEjC,OAAO,EAAE;QAC5B,MAAMmN,IAAI,GAAG,EAAE;QACf,IAAI,YAAA,KAAyB,YAAY,EAAE;UACvCxN,OAAAA,CAAAA,MAAM,CAACP,UAAU,CAAC6C,OAAO,EAAEY,OAAO,EAAE;YAChCrI,UAAU,EAAE,oBAAoB;YAChCC,SAAS,EAAE,IAAI,CAACkE,WAAW,CAAC3D,IAAI;YAChCN,QAAQ,EAAE,QAAQ;YAClBT,SAAS,EAAE;UACf,CAAC,CAAC;QACN;QACA,MAAMmT,oBAAoB,GAAGpN,OAAO,CAC/ByK,gBAAgB,CAACxI,OAAO,CAAC,CACzB+B,KAAK,CAAC,MAAM;UACb;UACA;QAAA,CACH,CAAC;QACF,IAAIwB,QAAQ,GAAG,MAAMxF,OAAO,CAAC4K,UAAU,CAAC3I,OAAO,CAAC;QAChD,IAAIrJ,KAAK;QACT,IAAI4M,QAAQ,EAAE;UACV,IAAI,YAAA,KAAyB,YAAY,EAAE;YACvC2H,IAAI,CAAC1J,IAAI,CAAE,mCAAkC,IAAI,CAAC3F,SAAU,GAAE,GACzD,kEAAiE,CAAC;UAC3E;QACJ,CAAC,MACI;UACD,IAAI,YAAA,KAAyB,YAAY,EAAE;YACvCqP,IAAI,CAAC1J,IAAI,CAAE,6BAA4B,IAAI,CAAC3F,SAAU,WAAU,GAC3D,qCAAoC,CAAC;UAC9C;UACA,IAAI;YACA;YACA;YACA0H,QAAQ,GAAG,MAAM4H,oBAAoB;UACzC,CAAC,CACD,OAAOvJ,GAAG,EAAE;YACRjL,KAAK,GAAGiL,GAAG;UACf;QACJ;QACA,IAAI,YAAA,KAAyB,YAAY,EAAE;UACvCzL,OAAAA,CAAAA,MAAM,CAACS,cAAc,CAACkB,SAAAA,CAAAA,QAAQ,CAAC2S,aAAa,CAAC,IAAI,CAAC/N,WAAW,CAAC3D,IAAI,EAAEiH,OAAO,CAAC,CAAC;UAC7E,KAAK,MAAMvJ,GAAG,IAAIyU,IAAI,EAAE;YACpB/U,OAAAA,CAAAA,MAAM,CAACM,GAAG,CAACA,GAAG,CAAC;UACnB;UACAqB,SAAAA,CAAAA,QAAQ,CAAC6S,kBAAkB,CAACpH,QAAQ,CAAC;UACrCpN,OAAAA,CAAAA,MAAM,CAACU,QAAQ,CAAC,CAAC;QACrB;QACA,IAAI,CAAC0M,QAAQ,EAAE;UACX,MAAM,IAAI9G,aAAAA,CAAAA,YAAY,CAAC,aAAa,EAAE;YAAEpB,GAAG,EAAE2E,OAAO,CAAC3E,GAAG;YAAE1E;UAAM,CAAC,CAAC;QACtE;QACA,OAAO4M,QAAQ;MACnB;IACJ;IAAC1L,OAAA,CAAAiT,oBAAA,GAAAA,oBAAA;;;;;;;;;;;;;;;;;IC5GD,IAAAjN,OAAA,GAAA3H,OAAA,CAAA,iCAAA,CAAA;IACA,IAAAqI,OAAA,GAAArI,OAAA,CAAA,iCAAA,CAAA;IACA,IAAA0G,aAAA,GAAA1G,OAAA,CAAA,uCAAA,CAAA;IACA,IAAA2U,SAAA,GAAA3U,OAAA,CAAA,eAAA,CAAA;IACA,IAAA8F,SAAA,GAAA9F,OAAA,CAAA,qBAAA,CAAA;IACAA,OAAA,CAAA,eAAA,CAAA;IAZA;AACA;AACA;AACA;AACA;AACA;AACA;;IAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACA,MAAMkV,UAAU,SAASnB,SAAAA,CAAAA,QAAQ,CAAC;MAC9B;AACJ;AACA;AACA;AACA;AACA;AACA;MACI,MAAMM,OAAOA,CAACvK,OAAO,EAAEjC,OAAO,EAAE;QAC5B,MAAMmN,IAAI,GAAG,EAAE;QACf,IAAI,YAAA,KAAyB,YAAY,EAAE;UACvCxN,OAAAA,CAAAA,MAAM,CAACP,UAAU,CAAC6C,OAAO,EAAEY,OAAO,EAAE;YAChCrI,UAAU,EAAE,oBAAoB;YAChCC,SAAS,EAAE,IAAI,CAACkE,WAAW,CAAC3D,IAAI;YAChCN,QAAQ,EAAE,aAAa;YACvBT,SAAS,EAAE;UACf,CAAC,CAAC;QACN;QACA,IAAIuL,QAAQ,GAAG,MAAMxF,OAAO,CAAC4K,UAAU,CAAC3I,OAAO,CAAC;QAChD,IAAIrJ,KAAK;QACT,IAAI,CAAC4M,QAAQ,EAAE;UACX,IAAI,YAAA,KAAyB,YAAY,EAAE;YACvC2H,IAAI,CAAC1J,IAAI,CAAE,6BAA4B,IAAI,CAAC3F,SAAU,WAAU,GAC3D,sCAAqC,CAAC;UAC/C;UACA,IAAI;YACA0H,QAAQ,GAAG,MAAMxF,OAAO,CAACyK,gBAAgB,CAACxI,OAAO,CAAC;UACtD,CAAC,CACD,OAAO4B,GAAG,EAAE;YACRjL,KAAK,GAAGiL,GAAG;UACf;UACA,IAAI,YAAA,KAAyB,YAAY,EAAE;YACvC,IAAI2B,QAAQ,EAAE;cACV2H,IAAI,CAAC1J,IAAI,CAAE,4BAA2B,CAAC;YAC3C,CAAC,MACI;cACD0J,IAAI,CAAC1J,IAAI,CAAE,4CAA2C,CAAC;YAC3D;UACJ;QACJ,CAAC,MACI;UACD,IAAI,YAAA,KAAyB,YAAY,EAAE;YACvC0J,IAAI,CAAC1J,IAAI,CAAE,mCAAkC,IAAI,CAAC3F,SAAU,UAAS,CAAC;UAC1E;QACJ;QACA,IAAI,YAAA,KAAyB,YAAY,EAAE;UACvC1F,OAAAA,CAAAA,MAAM,CAACS,cAAc,CAACkB,SAAAA,CAAAA,QAAQ,CAAC2S,aAAa,CAAC,IAAI,CAAC/N,WAAW,CAAC3D,IAAI,EAAEiH,OAAO,CAAC,CAAC;UAC7E,KAAK,MAAMvJ,GAAG,IAAIyU,IAAI,EAAE;YACpB/U,OAAAA,CAAAA,MAAM,CAACM,GAAG,CAACA,GAAG,CAAC;UACnB;UACAqB,SAAAA,CAAAA,QAAQ,CAAC6S,kBAAkB,CAACpH,QAAQ,CAAC;UACrCpN,OAAAA,CAAAA,MAAM,CAACU,QAAQ,CAAC,CAAC;QACrB;QACA,IAAI,CAAC0M,QAAQ,EAAE;UACX,MAAM,IAAI9G,aAAAA,CAAAA,YAAY,CAAC,aAAa,EAAE;YAAEpB,GAAG,EAAE2E,OAAO,CAAC3E,GAAG;YAAE1E;UAAM,CAAC,CAAC;QACtE;QACA,OAAO4M,QAAQ;MACnB;IACJ;IAAC1L,OAAA,CAAAuT,UAAA,GAAAA,UAAA;;;;;;;;;;ICrFD,YAAA;;IACA;IACA,IAAA;MACA,IAAA,CAAA,kCAAA,CAAA,IAAA,CAAA,CAAA,CAAA;IACA,CAAA,CACA,OAAA,CAAA,EAAA,CAAA;;;;;;;;;ICEA,IAAAvN,OAAA,GAAA3H,OAAA,CAAA,iCAAA,CAAA;IACA,IAAA0G,aAAA,GAAA1G,OAAA,CAAA,uCAAA,CAAA;IACA,IAAAqJ,eAAA,GAAArJ,OAAA,CAAA,yCAAA,CAAA;IACA,IAAAqI,OAAA,GAAArI,OAAA,CAAA,iCAAA,CAAA;IACAA,OAAA,CAAA,eAAA,CAAA;IAXA;AACA;AACA;AACA;AACA;AACA;AACA;;IAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACA,MAAMmV,iBAAiB,CAAC;MACpB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACI3O,WAAWA,CAAC4O,MAAM,GAAG,CAAC,CAAC,EAAE;QACrB,IAAI,YAAA,KAAyB,YAAY,EAAE;UACvC,IAAI,EAAEA,MAAM,CAACC,QAAQ,IAAID,MAAM,CAACE,OAAO,CAAC,EAAE;YACtC,MAAM,IAAI/O,aAAAA,CAAAA,YAAY,CAAC,8BAA8B,EAAE;cACnDlE,UAAU,EAAE,4BAA4B;cACxCC,SAAS,EAAE,mBAAmB;cAC9BC,QAAQ,EAAE;YACd,CAAC,CAAC;UACN;UACA,IAAI6S,MAAM,CAACC,QAAQ,EAAE;YACjB7N,OAAAA,CAAAA,MAAM,CAACb,OAAO,CAACyO,MAAM,CAACC,QAAQ,EAAE;cAC5BhT,UAAU,EAAE,4BAA4B;cACxCC,SAAS,EAAE,mBAAmB;cAC9BC,QAAQ,EAAE,aAAa;cACvBT,SAAS,EAAE;YACf,CAAC,CAAC;UACN;UACA,IAAIsT,MAAM,CAACE,OAAO,EAAE;YAChB9N,OAAAA,CAAAA,MAAM,CAACR,MAAM,CAACoO,MAAM,CAACE,OAAO,EAAE,QAAQ,EAAE;cACpCjT,UAAU,EAAE,4BAA4B;cACxCC,SAAS,EAAE,mBAAmB;cAC9BC,QAAQ,EAAE,aAAa;cACvBT,SAAS,EAAE;YACf,CAAC,CAAC;UACN;QACJ;QACA,IAAI,CAACyT,SAAS,GAAGH,MAAM,CAACC,QAAQ;QAChC,IAAI,CAACG,QAAQ,GAAGJ,MAAM,CAACE,OAAO;MAClC;MACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIG,mBAAmBA,CAACpI,QAAQ,EAAE;QAC1B,IAAI,YAAA,KAAyB,YAAY,EAAE;UACvC7F,OAAAA,CAAAA,MAAM,CAACP,UAAU,CAACoG,QAAQ,EAAEqI,QAAQ,EAAE;YAClCrT,UAAU,EAAE,4BAA4B;YACxCC,SAAS,EAAE,mBAAmB;YAC9BC,QAAQ,EAAE,qBAAqB;YAC/BT,SAAS,EAAE;UACf,CAAC,CAAC;QACN;QACA,IAAI6T,SAAS,GAAG,IAAI;QACpB,IAAI,IAAI,CAACJ,SAAS,EAAE;UAChBI,SAAS,GAAG,IAAI,CAACJ,SAAS,CAACnO,QAAQ,CAACiG,QAAQ,CAAC9H,MAAM,CAAC;QACxD;QACA,IAAI,IAAI,CAACiQ,QAAQ,IAAIG,SAAS,EAAE;UAC5BA,SAAS,GAAGnU,MAAM,CAACC,IAAI,CAAC,IAAI,CAAC+T,QAAQ,CAAC,CAACX,IAAI,CAAEe,UAAU,IAAK;YACxD,OAAOvI,QAAQ,CAACiI,OAAO,CAAC9J,GAAG,CAACoK,UAAU,CAAC,KAAK,IAAI,CAACJ,QAAQ,CAACI,UAAU,CAAC;UACzE,CAAC,CAAC;QACN;QACA,IAAI,YAAA,KAAyB,YAAY,EAAE;UACvC,IAAI,CAACD,SAAS,EAAE;YACZ1V,OAAAA,CAAAA,MAAM,CAACS,cAAc,CAAE,kBAAiB,GACnC,IAAG,CAAA,CAAA,EAAAsI,eAAAA,CAAAA,cAAc,EAACqE,QAAQ,CAAClI,GAAG,CAAE,kCAAiC,GACjE,yCAAwC,CAAC;YAC9ClF,OAAAA,CAAAA,MAAM,CAACS,cAAc,CAAE,kCAAiC,CAAC;YACzDT,OAAAA,CAAAA,MAAM,CAACM,GAAG,CAAE,sBAAqB,GAC7B2B,IAAI,CAACC,SAAS,CAAC,IAAI,CAACoT,SAAS,CAAC,CAAC;YACnCtV,OAAAA,CAAAA,MAAM,CAACM,GAAG,CAAE,qBAAoB,GAC5B2B,IAAI,CAACC,SAAS,CAAC,IAAI,CAACqT,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;YAC3CvV,OAAAA,CAAAA,MAAM,CAACU,QAAQ,CAAC,CAAC;YACjB,MAAMkV,kBAAkB,GAAG,CAAC,CAAC;YAC7BxI,QAAQ,CAACiI,OAAO,CAAC7J,OAAO,CAAC,CAACzJ,KAAK,EAAEN,GAAG,KAAK;cACrCmU,kBAAkB,CAACnU,GAAG,CAAC,GAAGM,KAAK;YACnC,CAAC,CAAC;YACF/B,OAAAA,CAAAA,MAAM,CAACS,cAAc,CAAE,wCAAuC,CAAC;YAC/DT,OAAAA,CAAAA,MAAM,CAACM,GAAG,CAAE,mBAAkB,GAAG8M,QAAQ,CAAC9H,MAAM,CAAC;YACjDtF,OAAAA,CAAAA,MAAM,CAACM,GAAG,CAAE,oBAAmB,GAC3B2B,IAAI,CAACC,SAAS,CAAC0T,kBAAkB,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;YAChD5V,OAAAA,CAAAA,MAAM,CAACU,QAAQ,CAAC,CAAC;YACjBV,OAAAA,CAAAA,MAAM,CAACS,cAAc,CAAE,kCAAiC,CAAC;YACzDT,OAAAA,CAAAA,MAAM,CAACM,GAAG,CAAC8M,QAAQ,CAACiI,OAAO,CAAC;YAC5BrV,OAAAA,CAAAA,MAAM,CAACM,GAAG,CAAC8M,QAAQ,CAAC;YACpBpN,OAAAA,CAAAA,MAAM,CAACU,QAAQ,CAAC,CAAC;YACjBV,OAAAA,CAAAA,MAAM,CAACU,QAAQ,CAAC,CAAC;UACrB;QACJ;QACA,OAAOgV,SAAS;MACpB;IACJ;IAAChU,OAAA,CAAAwT,iBAAA,GAAAA,iBAAA;;;;;;;;;;;;;;;ICjHD,IAAAW,kBAAA,GAAA9V,OAAA,CAAA,wBAAA,CAAA;IACAA,OAAA,CAAA,eAAA,CAAA;IARA;AACA;AACA;AACA;AACA;AACA;AACA;;IAGA;AACA;AACA;AACA;AACA;AACA;AACA;IACA,MAAM+V,uBAAuB,CAAC;MAC1B;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIvP,WAAWA,CAAC4O,MAAM,EAAE;QAChB;AACR;AACA;AACA;AACA;AACA;QACQ,IAAI,CAAChI,eAAe,GAAG,OAAO;UAAEC;QAAS,CAAC,KAAK;UAC3C,IAAI,IAAI,CAAC2I,kBAAkB,CAACP,mBAAmB,CAACpI,QAAQ,CAAC,EAAE;YACvD,OAAOA,QAAQ;UACnB;UACA,OAAO,IAAI;QACf,CAAC;QACD,IAAI,CAAC2I,kBAAkB,GAAG,IAAIb,kBAAAA,CAAAA,iBAAiB,CAACC,MAAM,CAAC;MAC3D;IACJ;IAACzT,OAAA,CAAAoU,uBAAA,GAAAA,uBAAA;;;;;;;;;;;;ICxCD/V,OAAA,CAAA,gBAAA,CAAA;IANA;AACA;AACA;AACA;AACA;AACA;;IAEA;AACA;AACA;AACA;AACA;IACO,SAASiW,WAAWA,CAACtG,OAAO,EAAE;MACjC;MACAA,OAAO,CAAC9E,IAAI,CAAC,MAAM,CAAE,CAAC,CAAC;IAC3B;;;;;;;;;;;ICRA,IAAAxC,OAAA,GAAArI,OAAA,CAAA,sBAAA,CAAA;IACA,IAAA2H,OAAA,GAAA3H,OAAA,CAAA,sBAAA,CAAA;IACA,IAAA+P,oBAAA,GAAA/P,OAAA,CAAA,iCAAA,CAAA;IACAA,OAAA,CAAA,eAAA,CAAA;IAVA;AACA;AACA;AACA;AACA;AACA;AACA;;IAKA;AACA;AACA;AACA;AACA;AACA;AACA;IACA,SAASkW,0BAA0BA,CAACjG,QAAQ,EAAE;MAC1C,IAAI,YAAA,KAAyB,YAAY,EAAE;QACvCzI,OAAAA,CAAAA,MAAM,CAACR,MAAM,CAACiJ,QAAQ,EAAE,UAAU,EAAE;UAChC5N,UAAU,EAAE,cAAc;UAC1BE,QAAQ,EAAE,UAAU;UACpBT,SAAS,EAAE;QACf,CAAC,CAAC;MACN;MACA+N,oBAAAA,CAAAA,mBAAmB,CAACsG,GAAG,CAAClG,QAAQ,CAAC;MACjC,IAAI,YAAA,KAAyB,YAAY,EAAE;QACvChQ,OAAAA,CAAAA,MAAM,CAACM,GAAG,CAAC,mDAAmD,EAAE0P,QAAQ,CAAC;MAC7E;IACJ;;;;;;;;;;;;;;ICvBAjQ,OAAA,CAAA,gBAAA,CAAA;IAPA;AACA;AACA;AACA;AACA;AACA;AACA;;IAEA;AACA;AACA;AACA;AACA;AACA;AACA;IACO,MAAMoW,SAAS,CAAC;MACnB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACI5P,WAAWA,CAAC3D,IAAI,EAAEwT,OAAO,EAAE;QAAEC,eAAe;QAAEC;MAAiB,CAAC,GAAG,CAAC,CAAC,EAAE;QACnE,IAAI,CAACC,GAAG,GAAG,IAAI;QACf,IAAI,CAACC,KAAK,GAAG5T,IAAI;QACjB,IAAI,CAAC6T,QAAQ,GAAGL,OAAO;QACvB,IAAI,CAACM,gBAAgB,GAAGL,eAAe;QACvC,IAAI,CAACM,gBAAgB,GAAGL,eAAe,KAAK,MAAM,IAAI,CAACM,KAAK,CAAC,CAAC,CAAC;MACnE;MACA;AACJ;AACA;AACA;AACA;AACA;MACI,IAAIC,EAAEA,CAAAA,EAAG;QACL,OAAO,IAAI,CAACN,GAAG;MACnB;MACA;AACJ;AACA;AACA;AACA;AACA;AACA;MACI,MAAMvD,IAAIA,CAAAA,EAAG;QACT,IAAI,IAAI,CAACuD,GAAG,EACR;QACJ,IAAI,CAACA,GAAG,GAAG,MAAM,IAAIjM,OAAO,CAAC,CAACqF,OAAO,EAAEjE,MAAM,KAAK;UAC9C;UACA;UACA;UACA;UACA;UACA,IAAIoL,mBAAmB,GAAG,KAAK;UAC/B3G,UAAU,CAAC,MAAM;YACb2G,mBAAmB,GAAG,IAAI;YAC1BpL,MAAM,CAAC,IAAI1J,KAAK,CAAC,4CAA4C,CAAC,CAAC;UACnE,CAAC,EAAE,IAAI,CAAC+U,YAAY,CAAC;UACrB,MAAMC,WAAW,GAAGC,SAAS,CAACjE,IAAI,CAAC,IAAI,CAACwD,KAAK,EAAE,IAAI,CAACC,QAAQ,CAAC;UAC7DO,WAAW,CAACE,OAAO,GAAG,MAAMxL,MAAM,CAACsL,WAAW,CAACxW,KAAK,CAAC;UACrDwW,WAAW,CAACX,eAAe,GAAIc,GAAG,IAAK;YACnC,IAAIL,mBAAmB,EAAE;cACrBE,WAAW,CAACI,WAAW,CAACC,KAAK,CAAC,CAAC;cAC/BL,WAAW,CAACvO,MAAM,CAACmO,KAAK,CAAC,CAAC;YAC9B,CAAC,MACI,IAAI,OAAO,IAAI,CAACF,gBAAgB,KAAK,UAAU,EAAE;cAClD,IAAI,CAACA,gBAAgB,CAACS,GAAG,CAAC;YAC9B;UACJ,CAAC;UACDH,WAAW,CAACM,SAAS,GAAG,MAAM;YAC1B,MAAMT,EAAE,GAAGG,WAAW,CAACvO,MAAM;YAC7B,IAAIqO,mBAAmB,EAAE;cACrBD,EAAE,CAACD,KAAK,CAAC,CAAC;YACd,CAAC,MACI;cACDC,EAAE,CAACP,eAAe,GAAG,IAAI,CAACK,gBAAgB,CAACY,IAAI,CAAC,IAAI,CAAC;cACrD5H,OAAO,CAACkH,EAAE,CAAC;YACf;UACJ,CAAC;QACL,CAAC,CAAC;QACF,OAAO,IAAI;MACf;MACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACI,MAAMW,MAAMA,CAACC,SAAS,EAAEC,KAAK,EAAE;QAC3B,OAAO,CAAC,MAAM,IAAI,CAACC,UAAU,CAACF,SAAS,EAAEC,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;MAC1D;MACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACI,MAAME,MAAMA,CAACH,SAAS,EAAEC,KAAK,EAAEG,KAAK,EAAE;QAClC,OAAO,MAAM,IAAI,CAACC,cAAc,CAACL,SAAS,EAAE;UAAEC,KAAK;UAAEG;QAAM,CAAC,CAAC;MACjE;MACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACI,MAAMF,UAAUA,CAACF,SAAS,EAAEC,KAAK,EAAEG,KAAK,EAAE;QACtC,MAAME,OAAO,GAAG,MAAM,IAAI,CAACD,cAAc,CAACL,SAAS,EAAE;UAAEC,KAAK;UAAEG,KAAK;UAAEG,WAAW,EAAE;QAAK,CAAC,CAAC;QACzF,OAAOD,OAAO,CAACvN,GAAG,CAAExH,KAAK,IAAKA,KAAK,CAACvB,GAAG,CAAC;MAC5C;MACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACI,MAAMqW,cAAcA,CAACL,SAAS,EAAE;QAAE5O,KAAK;QAAE6O,KAAK,GAAG,IAAI;QAAE;QACvDO,SAAS,GAAG,MAAM;QAAEJ,KAAK;QAAEG,WAAW,GAAG;MAAO,CAAC,GAAG,CAAC,CAAC,EAAE;QACpD,OAAO,MAAM,IAAI,CAACZ,WAAW,CAAC,CAACK,SAAS,CAAC,EAAE,UAAU,EAAE,CAACS,GAAG,EAAEC,IAAI,KAAK;UAClE,MAAMC,KAAK,GAAGF,GAAG,CAACG,WAAW,CAACZ,SAAS,CAAC;UACxC,MAAMa,MAAM,GAAGzP,KAAK,GAAGuP,KAAK,CAACvP,KAAK,CAACA,KAAK,CAAC,GAAGuP,KAAK;UACjD,MAAMG,OAAO,GAAG,EAAE;UAClB,MAAM1O,OAAO,GAAGyO,MAAM,CAACE,UAAU,CAACd,KAAK,EAAEO,SAAS,CAAC;UACnDpO,OAAO,CAACyN,SAAS,GAAG,MAAM;YACtB,MAAMmB,MAAM,GAAG5O,OAAO,CAACpB,MAAM;YAC7B,IAAIgQ,MAAM,EAAE;cACRF,OAAO,CAAClN,IAAI,CAAC2M,WAAW,GAAGS,MAAM,GAAGA,MAAM,CAAC1W,KAAK,CAAC;cACjD,IAAI8V,KAAK,IAAIU,OAAO,CAACtS,MAAM,IAAI4R,KAAK,EAAE;gBAClCM,IAAI,CAACI,OAAO,CAAC;cACjB,CAAC,MACI;gBACDE,MAAM,CAACC,QAAQ,CAAC,CAAC;cACrB;YACJ,CAAC,MACI;cACDP,IAAI,CAACI,OAAO,CAAC;YACjB;UACJ,CAAC;QACL,CAAC,CAAC;MACN;MACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACI,MAAMnB,WAAWA,CAACuB,UAAU,EAAE7R,IAAI,EAAEkJ,QAAQ,EAAE;QAC1C,MAAM,IAAI,CAACgD,IAAI,CAAC,CAAC;QACjB,OAAO,MAAM,IAAI1I,OAAO,CAAC,CAACqF,OAAO,EAAEjE,MAAM,KAAK;UAC1C,MAAMwM,GAAG,GAAG,IAAI,CAAC3B,GAAG,CAACa,WAAW,CAACuB,UAAU,EAAE7R,IAAI,CAAC;UAClDoR,GAAG,CAACU,OAAO,GAAG,MAAMlN,MAAM,CAACwM,GAAG,CAAC1X,KAAK,CAAC;UACrC0X,GAAG,CAACW,UAAU,GAAG,MAAMlJ,OAAO,CAAC,CAAC;UAChCK,QAAQ,CAACkI,GAAG,EAAGnW,KAAK,IAAK4N,OAAO,CAAC5N,KAAK,CAAC,CAAC;QAC5C,CAAC,CAAC;MACN;MACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACI,MAAM+W,KAAKA,CAAClY,MAAM,EAAE6W,SAAS,EAAE3Q,IAAI,EAAE,GAAGjG,IAAI,EAAE;QAC1C,MAAMmP,QAAQ,GAAGA,CAACkI,GAAG,EAAEC,IAAI,KAAK;UAC5B,MAAMY,QAAQ,GAAGb,GAAG,CAACG,WAAW,CAACZ,SAAS,CAAC;UAC3C;UACA;UACA,MAAM5N,OAAO,GAAGkP,QAAQ,CAACnY,MAAM,CAAC,CAACoY,KAAK,CAACD,QAAQ,EAAElY,IAAI,CAAC;UACtDgJ,OAAO,CAACyN,SAAS,GAAG,MAAMa,IAAI,CAACtO,OAAO,CAACpB,MAAM,CAAC;QAClD,CAAC;QACD,OAAO,MAAM,IAAI,CAAC2O,WAAW,CAAC,CAACK,SAAS,CAAC,EAAE3Q,IAAI,EAAEkJ,QAAQ,CAAC;MAC9D;MACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACI4G,KAAKA,CAAAA,EAAG;QACJ,IAAI,IAAI,CAACL,GAAG,EAAE;UACV,IAAI,CAACA,GAAG,CAACK,KAAK,CAAC,CAAC;UAChB,IAAI,CAACL,GAAG,GAAG,IAAI;QACnB;MACJ;IACJ;IACA;IACA;IAAA7U,OAAA,CAAAyU,SAAA,GAAAA,SAAA;IACAA,SAAS,CAAC8C,SAAS,CAAClC,YAAY,GAAG,IAAI;IACvC;IACA,MAAMmC,aAAa,GAAG;MAClBC,QAAQ,EAAE,CAAC,KAAK,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,YAAY,CAAC;MAC5DC,SAAS,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,QAAQ;IAC/C,CAAC;IACD,KAAK,MAAM,CAAC5H,IAAI,EAAE6H,OAAO,CAAC,IAAI9X,MAAM,CAACwW,OAAO,CAACmB,aAAa,CAAC,EAAE;MACzD,KAAK,MAAMtY,MAAM,IAAIyY,OAAO,EAAE;QAC1B,IAAIzY,MAAM,IAAI0Y,cAAc,CAACL,SAAS,EAAE;UACpC;UACA9C,SAAS,CAAC8C,SAAS,CAACrY,MAAM,CAAC,GACvB,gBAAgB6W,SAAS,EAAE,GAAG5W,IAAI,EAAE;YAChC,OAAO,MAAM,IAAI,CAACiY,KAAK,CAAClY,MAAM,EAAE6W,SAAS,EAAEjG,IAAI,EAAE,GAAG3Q,IAAI,CAAC;UAC7D,CAAC;QACT;MACJ;IACJ;;;;;;;;;;;ICnPAd,OAAA,CAAA,gBAAA,CAAA;IAPA;AACA;AACA;AACA;AACA;AACA;AACA;;IAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACO,MAAMwZ,cAAc,GAAG,MAAO3W,IAAI,IAAK;MAC1C,MAAM,IAAI0H,OAAO,CAAC,CAACqF,OAAO,EAAEjE,MAAM,KAAK;QACnC,MAAM7B,OAAO,GAAGoN,SAAS,CAACsC,cAAc,CAAC3W,IAAI,CAAC;QAC9CiH,OAAO,CAACqN,OAAO,GAAG,MAAM;UACpBxL,MAAM,CAAC7B,OAAO,CAACrJ,KAAK,CAAC;QACzB,CAAC;QACDqJ,OAAO,CAAC2P,SAAS,GAAG,MAAM;UACtB9N,MAAM,CAAC,IAAI1J,KAAK,CAAC,gBAAgB,CAAC,CAAC;QACvC,CAAC;QACD6H,OAAO,CAACyN,SAAS,GAAG,MAAM;UACtB3H,OAAO,CAAC,CAAC;QACb,CAAC;MACL,CAAC,CAAC;IACN,CAAC;IAACjO,OAAA,CAAA6X,cAAA,GAAAA,cAAA;;;;;IC9BF,YAAA;;IACA;IACA,IAAA;MACA,IAAA,CAAA,0BAAA,CAAA,IAAA,CAAA,CAAA,CAAA;IACA,CAAA,CACA,OAAA,CAAA,EAAA,CAAA;;;;;;;;;ICEA,IAAAE,UAAA,GAAA1Z,OAAA,CAAA,oCAAA,CAAA;IACA,IAAA2Z,eAAA,GAAA3Z,OAAA,CAAA,yCAAA,CAAA;IACAA,OAAA,CAAA,gBAAA,CAAA;IATA;AACA;AACA;AACA;AACA;AACA;AACA;;IAIA,MAAM4Z,OAAO,GAAG,oBAAoB;IACpC,MAAMC,iBAAiB,GAAG,eAAe;IACzC,MAAMC,YAAY,GAAIC,eAAe,IAAK;MACtC,MAAM5U,GAAG,GAAG,IAAI+D,GAAG,CAAC6Q,eAAe,EAAElR,QAAQ,CAACD,IAAI,CAAC;MACnDzD,GAAG,CAAC6U,IAAI,GAAG,EAAE;MACb,OAAO7U,GAAG,CAACyD,IAAI;IACnB,CAAC;IACD;AACA;AACA;AACA;AACA;IACA,MAAMqR,oBAAoB,CAAC;MACvB;AACJ;AACA;AACA;AACA;AACA;MACIzT,WAAWA,CAACb,SAAS,EAAE;QACnB,IAAI,CAACuU,UAAU,GAAGvU,SAAS;QAC3B,IAAI,CAAC6Q,GAAG,GAAG,IAAIJ,UAAAA,CAAAA,SAAS,CAACwD,OAAO,EAAE,CAAC,EAAE;UACjCtD,eAAe,EAAGzM,KAAK,IAAK,IAAI,CAACsQ,cAAc,CAACtQ,KAAK;QACzD,CAAC,CAAC;MACN;MACA;AACJ;AACA;AACA;AACA;AACA;AACA;MACIsQ,cAAcA,CAACtQ,KAAK,EAAE;QAClB,MAAMiN,EAAE,GAAGjN,KAAK,CAAC0O,MAAM,CAAC7P,MAAM;QAC9B;QACA;QACA;QACA;QACA,MAAMsQ,QAAQ,GAAGlC,EAAE,CAACsD,iBAAiB,CAACP,iBAAiB,EAAE;UAAEQ,OAAO,EAAE;QAAK,CAAC,CAAC;QAC3E;QACA;QACA;QACArB,QAAQ,CAACsB,WAAW,CAAC,WAAW,EAAE,WAAW,EAAE;UAAEC,MAAM,EAAE;QAAM,CAAC,CAAC;QACjEvB,QAAQ,CAACsB,WAAW,CAAC,WAAW,EAAE,WAAW,EAAE;UAAEC,MAAM,EAAE;QAAM,CAAC,CAAC;QACjE;QACA;QACA,CAAA,CAAA,EAAAf,eAAAA,CAAAA,cAAc,EAAC,IAAI,CAACU,UAAU,CAAC;MACnC;MACA;AACJ;AACA;AACA;AACA;AACA;MACI,MAAMM,YAAYA,CAACrV,GAAG,EAAEsV,SAAS,EAAE;QAC/BtV,GAAG,GAAG2U,YAAY,CAAC3U,GAAG,CAAC;QACvB,MAAMlC,KAAK,GAAG;UACVkC,GAAG;UACHsV,SAAS;UACT9U,SAAS,EAAE,IAAI,CAACuU,UAAU;UAC1B;UACA;UACA;UACAQ,EAAE,EAAE,IAAI,CAACC,MAAM,CAACxV,GAAG;QACvB,CAAC;QACD,MAAM,IAAI,CAACqR,GAAG,CAACpD,GAAG,CAACyG,iBAAiB,EAAE5W,KAAK,CAAC;MAChD;MACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;MACI,MAAM2X,YAAYA,CAACzV,GAAG,EAAE;QACpB,MAAMlC,KAAK,GAAG,MAAM,IAAI,CAACuT,GAAG,CAAChL,GAAG,CAACqO,iBAAiB,EAAE,IAAI,CAACc,MAAM,CAACxV,GAAG,CAAC,CAAC;QACrE,OAAOlC,KAAK,CAACwX,SAAS;MAC1B;MACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACI,MAAMI,aAAaA,CAACC,YAAY,EAAEC,QAAQ,EAAE;QACxC,MAAMC,eAAe,GAAG,MAAM,IAAI,CAACxE,GAAG,CAACa,WAAW,CAACwC,iBAAiB,EAAE,WAAW,EAAE,CAAC1B,GAAG,EAAEC,IAAI,KAAK;UAC9F,MAAMC,KAAK,GAAGF,GAAG,CAACG,WAAW,CAACuB,iBAAiB,CAAC;UAChD,MAAM/P,OAAO,GAAGuO,KAAK,CAACvP,KAAK,CAAC,WAAW,CAAC,CAAC2P,UAAU,CAAC,IAAI,EAAE,MAAM,CAAC;UACjE,MAAMuC,eAAe,GAAG,EAAE;UAC1B,IAAIC,sBAAsB,GAAG,CAAC;UAC9BnR,OAAO,CAACyN,SAAS,GAAG,MAAM;YACtB,MAAMmB,MAAM,GAAG5O,OAAO,CAACpB,MAAM;YAC7B,IAAIgQ,MAAM,EAAE;cACR,MAAMhQ,MAAM,GAAGgQ,MAAM,CAAC1W,KAAK;cAC3B;cACA;cACA,IAAI0G,MAAM,CAAC/C,SAAS,KAAK,IAAI,CAACuU,UAAU,EAAE;gBACtC;gBACA;gBACA,IAAKY,YAAY,IAAIpS,MAAM,CAAC+R,SAAS,GAAGK,YAAY,IAC/CC,QAAQ,IAAIE,sBAAsB,IAAIF,QAAS,EAAE;kBAClD;kBACA;kBACA;kBACA;kBACA;kBACA;kBACA;kBACA;kBACAC,eAAe,CAAC1P,IAAI,CAACoN,MAAM,CAAC1W,KAAK,CAAC;gBACtC,CAAC,MACI;kBACDiZ,sBAAsB,EAAE;gBAC5B;cACJ;cACAvC,MAAM,CAACC,QAAQ,CAAC,CAAC;YACrB,CAAC,MACI;cACDP,IAAI,CAAC4C,eAAe,CAAC;YACzB;UACJ,CAAC;QACL,CAAC,CAAC;QACF;QACA;QACA;QACA;QACA,MAAME,WAAW,GAAG,EAAE;QACtB,KAAK,MAAMjY,KAAK,IAAI+X,eAAe,EAAE;UACjC,MAAM,IAAI,CAACxE,GAAG,CAACxH,MAAM,CAAC6K,iBAAiB,EAAE5W,KAAK,CAACyX,EAAE,CAAC;UAClDQ,WAAW,CAAC5P,IAAI,CAACrI,KAAK,CAACkC,GAAG,CAAC;QAC/B;QACA,OAAO+V,WAAW;MACtB;MACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;MACIP,MAAMA,CAACxV,GAAG,EAAE;QACR;QACA;QACA;QACA,OAAO,IAAI,CAAC+U,UAAU,GAAG,GAAG,GAAGJ,YAAY,CAAC3U,GAAG,CAAC;MACpD;IACJ;IAACxD,OAAA,CAAAsY,oBAAA,GAAAA,oBAAA;;;;;;;;;;;;;IC5JD,IAAAtS,OAAA,GAAA3H,OAAA,CAAA,iCAAA,CAAA;IACA,IAAAmb,YAAA,GAAAnb,OAAA,CAAA,sCAAA,CAAA;IACA,IAAAqI,OAAA,GAAArI,OAAA,CAAA,iCAAA,CAAA;IACA,IAAA0G,aAAA,GAAA1G,OAAA,CAAA,uCAAA,CAAA;IACA,IAAAob,qBAAA,GAAApb,OAAA,CAAA,kCAAA,CAAA;IACAA,OAAA,CAAA,eAAA,CAAA;IAZA;AACA;AACA;AACA;AACA;AACA;AACA;;IAOA;AACA;AACA;AACA;AACA;AACA;AACA;IACA,MAAMqb,eAAe,CAAC;MAClB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACI7U,WAAWA,CAACb,SAAS,EAAEyP,MAAM,GAAG,CAAC,CAAC,EAAE;QAChC,IAAI,CAACkG,UAAU,GAAG,KAAK;QACvB,IAAI,CAACC,eAAe,GAAG,KAAK;QAC5B,IAAI,YAAA,KAAyB,YAAY,EAAE;UACvC/T,OAAAA,CAAAA,MAAM,CAACR,MAAM,CAACrB,SAAS,EAAE,QAAQ,EAAE;YAC/BtD,UAAU,EAAE,oBAAoB;YAChCC,SAAS,EAAE,iBAAiB;YAC5BC,QAAQ,EAAE,aAAa;YACvBT,SAAS,EAAE;UACf,CAAC,CAAC;UACF,IAAI,EAAEsT,MAAM,CAACoG,UAAU,IAAIpG,MAAM,CAACqG,aAAa,CAAC,EAAE;YAC9C,MAAM,IAAIlV,aAAAA,CAAAA,YAAY,CAAC,6BAA6B,EAAE;cAClDlE,UAAU,EAAE,oBAAoB;cAChCC,SAAS,EAAE,iBAAiB;cAC5BC,QAAQ,EAAE;YACd,CAAC,CAAC;UACN;UACA,IAAI6S,MAAM,CAACoG,UAAU,EAAE;YACnBhU,OAAAA,CAAAA,MAAM,CAACR,MAAM,CAACoO,MAAM,CAACoG,UAAU,EAAE,QAAQ,EAAE;cACvCnZ,UAAU,EAAE,oBAAoB;cAChCC,SAAS,EAAE,iBAAiB;cAC5BC,QAAQ,EAAE,aAAa;cACvBT,SAAS,EAAE;YACf,CAAC,CAAC;UACN;UACA,IAAIsT,MAAM,CAACqG,aAAa,EAAE;YACtBjU,OAAAA,CAAAA,MAAM,CAACR,MAAM,CAACoO,MAAM,CAACqG,aAAa,EAAE,QAAQ,EAAE;cAC1CpZ,UAAU,EAAE,oBAAoB;cAChCC,SAAS,EAAE,iBAAiB;cAC5BC,QAAQ,EAAE,aAAa;cACvBT,SAAS,EAAE;YACf,CAAC,CAAC;UACN;QACJ;QACA,IAAI,CAAC4Z,WAAW,GAAGtG,MAAM,CAACoG,UAAU;QACpC,IAAI,CAACG,cAAc,GAAGvG,MAAM,CAACqG,aAAa;QAC1C,IAAI,CAACG,aAAa,GAAGxG,MAAM,CAACjG,YAAY;QACxC,IAAI,CAAC+K,UAAU,GAAGvU,SAAS;QAC3B,IAAI,CAACkW,eAAe,GAAG,IAAI5B,qBAAAA,CAAAA,oBAAoB,CAACtU,SAAS,CAAC;MAC9D;MACA;AACJ;AACA;MACI,MAAMkV,aAAaA,CAAAA,EAAG;QAClB,IAAI,IAAI,CAACS,UAAU,EAAE;UACjB,IAAI,CAACC,eAAe,GAAG,IAAI;UAC3B;QACJ;QACA,IAAI,CAACD,UAAU,GAAG,IAAI;QACtB,MAAMR,YAAY,GAAG,IAAI,CAACa,cAAc,GACpCG,IAAI,CAACC,GAAG,CAAC,CAAC,GAAI,IAAI,CAACJ,cAAc,GAAG,IAAK,GAAG,CAAC;QACjD,MAAMK,WAAW,GAAG,MAAM,IAAI,CAACH,eAAe,CAAChB,aAAa,CAACC,YAAY,EAAE,IAAI,CAACY,WAAW,CAAC;QAC5F;QACA,MAAMxM,KAAK,GAAG,MAAMhP,IAAI,CAAC4S,MAAM,CAACG,IAAI,CAAC,IAAI,CAACiH,UAAU,CAAC;QACrD,KAAK,MAAM/U,GAAG,IAAI6W,WAAW,EAAE;UAC3B,MAAM9M,KAAK,CAACF,MAAM,CAAC7J,GAAG,EAAE,IAAI,CAACyW,aAAa,CAAC;QAC/C;QACA,IAAI,YAAA,KAAyB,YAAY,EAAE;UACvC,IAAII,WAAW,CAAC9V,MAAM,GAAG,CAAC,EAAE;YACxBjG,OAAAA,CAAAA,MAAM,CAACS,cAAc,CAAE,WAAUsb,WAAW,CAAC9V,MAAO,GAAE,GACjD,GAAE8V,WAAW,CAAC9V,MAAM,KAAK,CAAC,GAAG,OAAO,GAAG,SAAU,eAAc,GAC/D,GAAE8V,WAAW,CAAC9V,MAAM,KAAK,CAAC,GAAG,IAAI,GAAG,MAAO,YAAW,GACtD,IAAG,IAAI,CAACgU,UAAW,UAAS,CAAC;YAClCja,OAAAA,CAAAA,MAAM,CAACM,GAAG,CAAE,yBAAwByb,WAAW,CAAC9V,MAAM,KAAK,CAAC,GACxD,KAAK,GAAG,MAAO,GAAE,CAAC;YACtB8V,WAAW,CAACvQ,OAAO,CAAEtG,GAAG,IAAKlF,OAAAA,CAAAA,MAAM,CAACM,GAAG,CAAE,OAAM4E,GAAI,EAAC,CAAC,CAAC;YACtDlF,OAAAA,CAAAA,MAAM,CAACU,QAAQ,CAAC,CAAC;UACrB,CAAC,MACI;YACDV,OAAAA,CAAAA,MAAM,CAACK,KAAK,CAAE,sDAAqD,CAAC;UACxE;QACJ;QACA,IAAI,CAACgb,UAAU,GAAG,KAAK;QACvB,IAAI,IAAI,CAACC,eAAe,EAAE;UACtB,IAAI,CAACA,eAAe,GAAG,KAAK;UAC5B,CAAA,CAAA,EAAAtF,YAAAA,CAAAA,WAAW,EAAC,IAAI,CAAC4E,aAAa,CAAC,CAAC,CAAC;QACrC;MACJ;MACA;AACJ;AACA;AACA;AACA;AACA;AACA;MACI,MAAMoB,eAAeA,CAAC9W,GAAG,EAAE;QACvB,IAAI,YAAA,KAAyB,YAAY,EAAE;UACvCqC,OAAAA,CAAAA,MAAM,CAACR,MAAM,CAAC7B,GAAG,EAAE,QAAQ,EAAE;YACzB9C,UAAU,EAAE,oBAAoB;YAChCC,SAAS,EAAE,iBAAiB;YAC5BC,QAAQ,EAAE,iBAAiB;YAC3BT,SAAS,EAAE;UACf,CAAC,CAAC;QACN;QACA,MAAM,IAAI,CAAC+Z,eAAe,CAACrB,YAAY,CAACrV,GAAG,EAAE2W,IAAI,CAACC,GAAG,CAAC,CAAC,CAAC;MAC5D;MACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACI,MAAMG,YAAYA,CAAC/W,GAAG,EAAE;QACpB,IAAI,CAAC,IAAI,CAACwW,cAAc,EAAE;UACtB,IAAI,YAAA,KAAyB,YAAY,EAAE;YACvC,MAAM,IAAIpV,aAAAA,CAAAA,YAAY,CAAE,8BAA6B,EAAE;cACnDvC,UAAU,EAAE,cAAc;cAC1BlC,SAAS,EAAE;YACf,CAAC,CAAC;UACN;UACA,OAAO,KAAK;QAChB,CAAC,MACI;UACD,MAAM2Y,SAAS,GAAG,MAAM,IAAI,CAACoB,eAAe,CAACjB,YAAY,CAACzV,GAAG,CAAC;UAC9D,MAAMgX,eAAe,GAAGL,IAAI,CAACC,GAAG,CAAC,CAAC,GAAI,IAAI,CAACJ,cAAc,GAAG,IAAK;UACjE,OAAQlB,SAAS,GAAG0B,eAAe;QACvC;MACJ;MACA;AACJ;AACA;AACA;MACI,MAAMnN,MAAMA,CAAAA,EAAG;QACX;QACA;QACA,IAAI,CAACuM,eAAe,GAAG,KAAK;QAC5B,MAAM,IAAI,CAACM,eAAe,CAAChB,aAAa,CAACuB,QAAQ,CAAC,CAAC,CAAC;MACxD;IACJ;;IAACza,OAAA,CAAA0Z,eAAA,GAAAA,eAAA;;;;;;;;;;;;;;;;IChKD,IAAA1T,OAAA,GAAA3H,OAAA,CAAA,iCAAA,CAAA;IACA,IAAA6T,WAAA,GAAA7T,OAAA,CAAA,qCAAA,CAAA;IACA,IAAAmb,YAAA,GAAAnb,OAAA,CAAA,sCAAA,CAAA;IACA,IAAAqJ,eAAA,GAAArJ,OAAA,CAAA,yCAAA,CAAA;IACA,IAAAqI,OAAA,GAAArI,OAAA,CAAA,iCAAA,CAAA;IACA,IAAAqc,2BAAA,GAAArc,OAAA,CAAA,4CAAA,CAAA;IACA,IAAA0G,aAAA,GAAA1G,OAAA,CAAA,uCAAA,CAAA;IACA,IAAAsc,gBAAA,GAAAtc,OAAA,CAAA,sBAAA,CAAA;IACAA,OAAA,CAAA,eAAA,CAAA;IAfA;AACA;AACA;AACA;AACA;AACA;AACA;;IAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACA,MAAMuc,gBAAgB,CAAC;MACnB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACI/V,WAAWA,CAAC4O,MAAM,GAAG,CAAC,CAAC,EAAE;QACrB;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACQ,IAAI,CAACoH,wBAAwB,GAAG,OAAO;UAAE3S,KAAK;UAAEC,OAAO;UAAEnE,SAAS;UAAE+M;QAAe,CAAC,KAAK;UACrF,IAAI,CAACA,cAAc,EAAE;YACjB,OAAO,IAAI;UACf;UACA,MAAM+J,OAAO,GAAG,IAAI,CAACC,oBAAoB,CAAChK,cAAc,CAAC;UACzD;UACA;UACA,MAAMiK,eAAe,GAAG,IAAI,CAACC,mBAAmB,CAACjX,SAAS,CAAC;UAC3D,CAAA,CAAA,EAAAsQ,YAAAA,CAAAA,WAAW,EAAC0G,eAAe,CAAC9B,aAAa,CAAC,CAAC,CAAC;UAC5C;UACA;UACA,MAAMgC,mBAAmB,GAAGF,eAAe,CAACV,eAAe,CAACnS,OAAO,CAAC3E,GAAG,CAAC;UACxE,IAAI0E,KAAK,EAAE;YACP,IAAI;cACAA,KAAK,CAACc,SAAS,CAACkS,mBAAmB,CAAC;YACxC,CAAC,CACD,OAAOpc,KAAK,EAAE;cACV,IAAI,YAAA,KAAyB,YAAY,EAAE;gBACvC;gBACA,IAAI,SAAS,IAAIoJ,KAAK,EAAE;kBACpB5J,OAAAA,CAAAA,MAAM,CAACO,IAAI,CAAE,mDAAkD,GAC1D,2BAA0B,GAC1B,IAAG,CAAA,CAAA,EAAAwI,eAAAA,CAAAA,cAAc,EAACa,KAAK,CAACC,OAAO,CAAC3E,GAAG,CAAE,IAAG,CAAC;gBAClD;cACJ;YACJ;UACJ;UACA,OAAOsX,OAAO,GAAG/J,cAAc,GAAG,IAAI;QAC1C,CAAC;QACD;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACQ,IAAI,CAACoK,cAAc,GAAG,OAAO;UAAEnX,SAAS;UAAEmE;QAAQ,CAAC,KAAK;UACpD,IAAI,YAAA,KAAyB,YAAY,EAAE;YACvCtC,OAAAA,CAAAA,MAAM,CAACR,MAAM,CAACrB,SAAS,EAAE,QAAQ,EAAE;cAC/BtD,UAAU,EAAE,oBAAoB;cAChCC,SAAS,EAAE,QAAQ;cACnBC,QAAQ,EAAE,gBAAgB;cAC1BT,SAAS,EAAE;YACf,CAAC,CAAC;YACF0F,OAAAA,CAAAA,MAAM,CAACP,UAAU,CAAC6C,OAAO,EAAEY,OAAO,EAAE;cAChCrI,UAAU,EAAE,oBAAoB;cAChCC,SAAS,EAAE,QAAQ;cACnBC,QAAQ,EAAE,gBAAgB;cAC1BT,SAAS,EAAE;YACf,CAAC,CAAC;UACN;UACA,MAAM6a,eAAe,GAAG,IAAI,CAACC,mBAAmB,CAACjX,SAAS,CAAC;UAC3D,MAAMgX,eAAe,CAACV,eAAe,CAACnS,OAAO,CAAC3E,GAAG,CAAC;UAClD,MAAMwX,eAAe,CAAC9B,aAAa,CAAC,CAAC;QACzC,CAAC;QACD,IAAI,YAAA,KAAyB,YAAY,EAAE;UACvC,IAAI,EAAEzF,MAAM,CAACoG,UAAU,IAAIpG,MAAM,CAACqG,aAAa,CAAC,EAAE;YAC9C,MAAM,IAAIlV,aAAAA,CAAAA,YAAY,CAAC,6BAA6B,EAAE;cAClDlE,UAAU,EAAE,oBAAoB;cAChCC,SAAS,EAAE,QAAQ;cACnBC,QAAQ,EAAE;YACd,CAAC,CAAC;UACN;UACA,IAAI6S,MAAM,CAACoG,UAAU,EAAE;YACnBhU,OAAAA,CAAAA,MAAM,CAACR,MAAM,CAACoO,MAAM,CAACoG,UAAU,EAAE,QAAQ,EAAE;cACvCnZ,UAAU,EAAE,oBAAoB;cAChCC,SAAS,EAAE,QAAQ;cACnBC,QAAQ,EAAE,aAAa;cACvBT,SAAS,EAAE;YACf,CAAC,CAAC;UACN;UACA,IAAIsT,MAAM,CAACqG,aAAa,EAAE;YACtBjU,OAAAA,CAAAA,MAAM,CAACR,MAAM,CAACoO,MAAM,CAACqG,aAAa,EAAE,QAAQ,EAAE;cAC1CpZ,UAAU,EAAE,oBAAoB;cAChCC,SAAS,EAAE,QAAQ;cACnBC,QAAQ,EAAE,aAAa;cACvBT,SAAS,EAAE;YACf,CAAC,CAAC;UACN;QACJ;QACA,IAAI,CAACib,OAAO,GAAG3H,MAAM;QACrB,IAAI,CAACuG,cAAc,GAAGvG,MAAM,CAACqG,aAAa;QAC1C,IAAI,CAACuB,iBAAiB,GAAG,IAAIxT,GAAG,CAAC,CAAC;QAClC,IAAI4L,MAAM,CAAC6H,iBAAiB,EAAE;UAC1B,CAAA,CAAA,EAAA/G,2BAAAA,CAAAA,0BAA0B,EAAC,MAAM,IAAI,CAACgH,sBAAsB,CAAC,CAAC,CAAC;QACnE;MACJ;MACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIN,mBAAmBA,CAACjX,SAAS,EAAE;QAC3B,IAAIA,SAAS,KAAKuI,WAAAA,CAAAA,UAAU,CAACM,cAAc,CAAC,CAAC,EAAE;UAC3C,MAAM,IAAIjI,aAAAA,CAAAA,YAAY,CAAC,2BAA2B,CAAC;QACvD;QACA,IAAIoW,eAAe,GAAG,IAAI,CAACK,iBAAiB,CAACxR,GAAG,CAAC7F,SAAS,CAAC;QAC3D,IAAI,CAACgX,eAAe,EAAE;UAClBA,eAAe,GAAG,IAAItB,gBAAAA,CAAAA,eAAe,CAAC1V,SAAS,EAAE,IAAI,CAACoX,OAAO,CAAC;UAC9D,IAAI,CAACC,iBAAiB,CAAC9Q,GAAG,CAACvG,SAAS,EAAEgX,eAAe,CAAC;QAC1D;QACA,OAAOA,eAAe;MAC1B;MACA;AACJ;AACA;AACA;AACA;AACA;MACID,oBAAoBA,CAAChK,cAAc,EAAE;QACjC,IAAI,CAAC,IAAI,CAACiJ,cAAc,EAAE;UACtB;UACA,OAAO,IAAI;QACf;QACA;QACA;QACA;QACA,MAAMwB,mBAAmB,GAAG,IAAI,CAACC,uBAAuB,CAAC1K,cAAc,CAAC;QACxE,IAAIyK,mBAAmB,KAAK,IAAI,EAAE;UAC9B;UACA,OAAO,IAAI;QACf;QACA;QACA;QACA,MAAMpB,GAAG,GAAGD,IAAI,CAACC,GAAG,CAAC,CAAC;QACtB,OAAOoB,mBAAmB,IAAIpB,GAAG,GAAI,IAAI,CAACJ,cAAc,GAAG,IAAK;MACpE;MACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIyB,uBAAuBA,CAAC1K,cAAc,EAAE;QACpC,IAAI,CAACA,cAAc,CAAC4C,OAAO,CAAC/J,GAAG,CAAC,MAAM,CAAC,EAAE;UACrC,OAAO,IAAI;QACf;QACA,MAAM8R,UAAU,GAAG3K,cAAc,CAAC4C,OAAO,CAAC9J,GAAG,CAAC,MAAM,CAAC;QACrD,MAAM8R,UAAU,GAAG,IAAIxB,IAAI,CAACuB,UAAU,CAAC;QACvC,MAAME,UAAU,GAAGD,UAAU,CAACE,OAAO,CAAC,CAAC;QACvC;QACA;QACA,IAAIC,KAAK,CAACF,UAAU,CAAC,EAAE;UACnB,OAAO,IAAI;QACf;QACA,OAAOA,UAAU;MACrB;MACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACI,MAAML,sBAAsBA,CAAAA,EAAG;QAC3B;QACA;QACA,KAAK,MAAM,CAACvX,SAAS,EAAEgX,eAAe,CAAC,IAAI,IAAI,CAACK,iBAAiB,EAAE;UAC/D,MAAM9c,IAAI,CAAC4S,MAAM,CAAC9D,MAAM,CAACrJ,SAAS,CAAC;UACnC,MAAMgX,eAAe,CAAC3N,MAAM,CAAC,CAAC;QAClC;QACA;QACA,IAAI,CAACgO,iBAAiB,GAAG,IAAIxT,GAAG,CAAC,CAAC;MACtC;IACJ;IAAC7H,OAAA,CAAA4a,gBAAA,GAAAA,gBAAA;;;;;;;;;;;;;IC5PD,YAAA;;IACA;IACA,IAAA;MACA,IAAA,CAAA,uBAAA,CAAA,IAAA,CAAA,CAAA,CAAA;IACA,CAAA,CACA,OAAA,CAAA,EAAA,CAAA;;;;;;;;;ICEA,IAAAmB,cAAA,GAAA1d,OAAA,CAAA,kCAAA,CAAA;IACA,IAAA2d,qBAAA,GAAA3d,OAAA,CAAA,4CAAA,CAAA;IACA,IAAA4d,WAAA,GAAA5d,OAAA,CAAA,kCAAA,CAAA;IACA,IAAA6d,wBAAA,GAAA7d,OAAA,CAAA,uDAAA,CAAA;IACA,IAAA8d,iBAAA,GAAA9d,OAAA,CAAA,wCAAA,CAAA;IACAA,OAAA,CAAA,eAAA,CAAA;IAZA;AACA;AACA;AACA;AACA;AACA;AACA;;IAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACA,SAAS+d,gBAAgBA,CAAClN,OAAO,GAAG,CAAC,CAAC,EAAE;MACpC,MAAMmN,cAAc,GAAI,GAAEnN,OAAO,CAACoN,WAAW,IAAI,cAAe,cAAa;MAC7E,MAAMC,aAAa,GAAI,GAAErN,OAAO,CAACoN,WAAW,IAAI,cAAe,WAAU;MACzE,MAAMxC,aAAa,GAAG5K,OAAO,CAAC4K,aAAa,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG;MACjE,MAAMD,UAAU,GAAG3K,OAAO,CAAC2K,UAAU,IAAI,EAAE;MAC3C;MACA,CAAA,CAAA,EAAArP,cAAAA,CAAAA,aAAa,EAAC,CAAC;QAAEhH;MAAI,CAAC,KAAKA,GAAG,CAACU,MAAM,KAAK,8BAA8B,EAAE,IAAI+O,qBAAAA,CAAAA,oBAAoB,CAAC;QAC/FjP,SAAS,EAAEqY;MACf,CAAC,CAAC,CAAC;MACH;MACA,CAAA,CAAA,EAAA7R,cAAAA,CAAAA,aAAa,EAAC,CAAC;QAAEhH;MAAI,CAAC,KAAKA,GAAG,CAACU,MAAM,KAAK,2BAA2B,EAAE,IAAIqP,WAAAA,CAAAA,UAAU,CAAC;QAClFvP,SAAS,EAAEuY,aAAa;QACxB7M,OAAO,EAAE,CACL,IAAI0E,wBAAAA,CAAAA,uBAAuB,CAAC;UACxBV,QAAQ,EAAE,CAAC,CAAC,EAAE,GAAG;QACrB,CAAC,CAAC,EACF,IAAIkH,iBAAAA,CAAAA,gBAAgB,CAAC;UACjBd,aAAa;UACbD;QACJ,CAAC,CAAC;MAEV,CAAC,CAAC,CAAC;IACP;;;;;;;;;;;;;;;;IC7CAxb,OAAA,CAAA,eAAA,CAAA;IACA;AACA;AACA;AACA;AACA;AACA;AACA;IACA,SAASme,iBAAiBA,CAACtN,OAAO,EAAE;MAChC3Q,IAAI,CAAC0J,gBAAgB,CAAC,SAAS,EAAEC,KAAK,IAAI;QACtC,MAAMuO,IAAI,GAAGvH,OAAO,CAACuN,IAAI,CAAC3T,GAAG,CAAC4T,IAAI,IAAIxN,OAAO,CAACD,QAAQ,CAACqD,SAAS,CAAC;UAC7DpK,KAAK;UACLC,OAAO,EAAE,IAAIY,OAAO,CAAC2T,IAAI;QAC7B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACNxU,KAAK,CAACc,SAAS,CAACJ,OAAO,CAACC,GAAG,CAAC4N,IAAI,CAAC,CAAC;MACtC,CAAC,CAAC;IACN;;;;;;;;;;;ICTA,IAAAkG,kBAAA,GAAAte,OAAA,CAAA,qBAAA,CAAA;IACA,IAAA0d,cAAA,GAAA1d,OAAA,CAAA,kCAAA,CAAA;IACA,IAAA4d,WAAA,GAAA5d,OAAA,CAAA,kCAAA,CAAA;IACA,IAAA6d,wBAAA,GAAA7d,OAAA,CAAA,uDAAA,CAAA;IACA,IAAA8d,iBAAA,GAAA9d,OAAA,CAAA,wCAAA,CAAA;IACAA,OAAA,CAAA,eAAA,CAAA;IAZA;AACA;AACA;AACA;AACA;AACA;AACA;;IAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACA,SAASue,UAAUA,CAAC1N,OAAO,GAAG,CAAC,CAAC,EAAE;MAC9B,MAAM2N,oBAAoB,GAAGA,CAAC;QAAE1U;MAAQ,CAAC,KAAKA,OAAO,CAAC2U,WAAW,KAAK,OAAO;MAC7E,MAAM9Y,SAAS,GAAGkL,OAAO,CAAClL,SAAS,IAAI,QAAQ;MAC/C,MAAMuH,aAAa,GAAG2D,OAAO,CAAC3D,aAAa,IAAIsR,oBAAoB;MACnE,MAAM/C,aAAa,GAAG5K,OAAO,CAAC4K,aAAa,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;MAChE,MAAMD,UAAU,GAAG3K,OAAO,CAAC2K,UAAU,IAAI,EAAE;MAC3C,MAAMnK,OAAO,GAAIR,OAAO,CAACQ,OAAO,IAAI,EAAG;MACvCA,OAAO,CAAC/F,IAAI,CAAC,IAAIyK,wBAAAA,CAAAA,uBAAuB,CAAC;QACrCV,QAAQ,EAAE,CAAC,CAAC,EAAE,GAAG;MACrB,CAAC,CAAC,CAAC;MACHhE,OAAO,CAAC/F,IAAI,CAAC,IAAIiR,iBAAAA,CAAAA,gBAAgB,CAAC;QAC9Bf,UAAU;QACVC;MACJ,CAAC,CAAC,CAAC;MACH,MAAM7K,QAAQ,GAAG,IAAIsE,WAAAA,CAAAA,UAAU,CAAC;QAC5BvP,SAAS;QACT0L;MACJ,CAAC,CAAC;MACF,CAAA,CAAA,EAAAlF,cAAAA,CAAAA,aAAa,EAACe,aAAa,EAAE0D,QAAQ,CAAC;MACtC;MACA,IAAIC,OAAO,CAAC6N,SAAS,EAAE;QACnB,CAAA,CAAA,EAAAP,kBAAAA,CAAAA,iBAAiB,EAAC;UAAEC,IAAI,EAAEvN,OAAO,CAAC6N,SAAS;UAAE9N;QAAS,CAAC,CAAC;MAC5D;IACJ;;;;;;;;;;;;;;;;IC1CA,IAAA0N,kBAAA,GAAAte,OAAA,CAAA,qBAAA,CAAA;IACA,IAAA0d,cAAA,GAAA1d,OAAA,CAAA,kCAAA,CAAA;IACA,IAAA2d,qBAAA,GAAA3d,OAAA,CAAA,4CAAA,CAAA;IACA,IAAA6d,wBAAA,GAAA7d,OAAA,CAAA,uDAAA,CAAA;IACAA,OAAA,CAAA,eAAA,CAAA;IAXA;AACA;AACA;AACA;AACA;AACA;AACA;;IAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACA,SAAS2e,mBAAmBA,CAAC9N,OAAO,GAAG,CAAC,CAAC,EAAE;MACvC,MAAM2N,oBAAoB,GAAGA,CAAC;QAAE1U;MAAQ,CAAC,KAAKA,OAAO,CAAC2U,WAAW,KAAK,OAAO,IAAI3U,OAAO,CAAC2U,WAAW,KAAK,QAAQ,IAAI3U,OAAO,CAAC2U,WAAW,KAAK,QAAQ;MACrJ,MAAM9Y,SAAS,GAAGkL,OAAO,CAAClL,SAAS,IAAI,kBAAkB;MACzD,MAAMuH,aAAa,GAAG2D,OAAO,CAAC3D,aAAa,IAAIsR,oBAAoB;MACnE,MAAMnN,OAAO,GAAIR,OAAO,CAACQ,OAAO,IAAI,EAAG;MACvCA,OAAO,CAAC/F,IAAI,CAAC,IAAIyK,wBAAAA,CAAAA,uBAAuB,CAAC;QACrCV,QAAQ,EAAE,CAAC,CAAC,EAAE,GAAG;MACrB,CAAC,CAAC,CAAC;MACH,MAAMzE,QAAQ,GAAG,IAAIgE,qBAAAA,CAAAA,oBAAoB,CAAC;QACtCjP,SAAS;QACT0L;MACJ,CAAC,CAAC;MACF,CAAA,CAAA,EAAAlF,cAAAA,CAAAA,aAAa,EAACe,aAAa,EAAE0D,QAAQ,CAAC;MACtC;MACA,IAAIC,OAAO,CAAC6N,SAAS,EAAE;QACnB,CAAA,CAAA,EAAAP,kBAAAA,CAAAA,iBAAiB,EAAC;UAAEC,IAAI,EAAEvN,OAAO,CAAC6N,SAAS;UAAE9N;QAAS,CAAC,CAAC;MAC5D;IACJ;;;;;;;;;;;;;;;ICjCA,IAAAjJ,OAAA,GAAA3H,OAAA,CAAA,iCAAA,CAAA;IACA,IAAAqI,OAAA,GAAArI,OAAA,CAAA,iCAAA,CAAA;IACA,IAAA0G,aAAA,GAAA1G,OAAA,CAAA,uCAAA,CAAA;IACA,IAAA0U,uBAAA,GAAA1U,OAAA,CAAA,qCAAA,CAAA;IACA,IAAA2U,SAAA,GAAA3U,OAAA,CAAA,eAAA,CAAA;IACA,IAAA8F,SAAA,GAAA9F,OAAA,CAAA,qBAAA,CAAA;IACAA,OAAA,CAAA,eAAA,CAAA;IAbA;AACA;AACA;AACA;AACA;AACA;AACA;;IAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACA,MAAM4e,YAAY,SAAS7K,SAAAA,CAAAA,QAAQ,CAAC;MAChC;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIvN,WAAWA,CAACqK,OAAO,GAAG,CAAC,CAAC,EAAE;QACtB,KAAK,CAACA,OAAO,CAAC;QACd;QACA;QACA,IAAI,CAAC,IAAI,CAACQ,OAAO,CAACwD,IAAI,CAAEC,CAAC,IAAK,iBAAiB,IAAIA,CAAC,CAAC,EAAE;UACnD,IAAI,CAACzD,OAAO,CAAC0D,OAAO,CAAC5H,uBAAAA,CAAAA,sBAAsB,CAAC;QAChD;QACA,IAAI,CAAC0R,sBAAsB,GAAGhO,OAAO,CAACiO,qBAAqB,IAAI,CAAC;QAChE,IAAI,YAAA,KAAyB,YAAY,EAAE;UACvC,IAAI,IAAI,CAACD,sBAAsB,EAAE;YAC7BrX,OAAAA,CAAAA,MAAM,CAACR,MAAM,CAAC,IAAI,CAAC6X,sBAAsB,EAAE,QAAQ,EAAE;cACjDxc,UAAU,EAAE,oBAAoB;cAChCC,SAAS,EAAE,IAAI,CAACkE,WAAW,CAAC3D,IAAI;cAChCN,QAAQ,EAAE,aAAa;cACvBT,SAAS,EAAE;YACf,CAAC,CAAC;UACN;QACJ;MACJ;MACA;AACJ;AACA;AACA;AACA;AACA;AACA;MACI,MAAMuS,OAAOA,CAACvK,OAAO,EAAEjC,OAAO,EAAE;QAC5B,MAAMmN,IAAI,GAAG,EAAE;QACf,IAAI,YAAA,KAAyB,YAAY,EAAE;UACvCxN,OAAAA,CAAAA,MAAM,CAACP,UAAU,CAAC6C,OAAO,EAAEY,OAAO,EAAE;YAChCrI,UAAU,EAAE,oBAAoB;YAChCC,SAAS,EAAE,IAAI,CAACkE,WAAW,CAAC3D,IAAI;YAChCN,QAAQ,EAAE,QAAQ;YAClBT,SAAS,EAAE;UACf,CAAC,CAAC;QACN;QACA,MAAMid,QAAQ,GAAG,EAAE;QACnB,IAAIC,SAAS;QACb,IAAI,IAAI,CAACH,sBAAsB,EAAE;UAC7B,MAAM;YAAEnE,EAAE;YAAE/K;UAAQ,CAAC,GAAG,IAAI,CAACsP,kBAAkB,CAAC;YAAEnV,OAAO;YAAEkL,IAAI;YAAEnN;UAAQ,CAAC,CAAC;UAC3EmX,SAAS,GAAGtE,EAAE;UACdqE,QAAQ,CAACzT,IAAI,CAACqE,OAAO,CAAC;QAC1B;QACA,MAAMuP,cAAc,GAAG,IAAI,CAACC,kBAAkB,CAAC;UAAEH,SAAS;UAAElV,OAAO;UAAEkL,IAAI;UAAEnN;QAAQ,CAAC,CAAC;QACrFkX,QAAQ,CAACzT,IAAI,CAAC4T,cAAc,CAAC;QAC7B,MAAM7R,QAAQ,GAAG,MAAMxF,OAAO,CAAC8C,SAAS,CAAC,CAAC,YAAY;UAClD;UACA,OAAO,CAAA,MAAM9C,OAAO,CAAC8C,SAAS,CAACJ,OAAO,CAAC6U,IAAI,CAACL,QAAQ,CAAC,CAAC;UAClD;UACA;UACA;UACA;UACA;UACA,MAAMG,cAAc,CAAA;QAC5B,CAAC,EAAE,CAAC,CAAC;QACL,IAAI,YAAA,KAAyB,YAAY,EAAE;UACvCjf,OAAAA,CAAAA,MAAM,CAACS,cAAc,CAACkB,SAAAA,CAAAA,QAAQ,CAAC2S,aAAa,CAAC,IAAI,CAAC/N,WAAW,CAAC3D,IAAI,EAAEiH,OAAO,CAAC,CAAC;UAC7E,KAAK,MAAMvJ,GAAG,IAAIyU,IAAI,EAAE;YACpB/U,OAAAA,CAAAA,MAAM,CAACM,GAAG,CAACA,GAAG,CAAC;UACnB;UACAqB,SAAAA,CAAAA,QAAQ,CAAC6S,kBAAkB,CAACpH,QAAQ,CAAC;UACrCpN,OAAAA,CAAAA,MAAM,CAACU,QAAQ,CAAC,CAAC;QACrB;QACA,IAAI,CAAC0M,QAAQ,EAAE;UACX,MAAM,IAAI9G,aAAAA,CAAAA,YAAY,CAAC,aAAa,EAAE;YAAEpB,GAAG,EAAE2E,OAAO,CAAC3E;UAAI,CAAC,CAAC;QAC/D;QACA,OAAOkI,QAAQ;MACnB;MACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACI4R,kBAAkBA,CAAC;QAAEnV,OAAO;QAAEkL,IAAI;QAAEnN;MAAQ,CAAC,EAAE;QAC3C,IAAImX,SAAS;QACb,MAAMK,cAAc,GAAG,IAAI9U,OAAO,CAAEqF,OAAO,IAAK;UAC5C,MAAM0P,gBAAgB,GAAG,MAAA,CAAA,KAAY;YACjC,IAAI,YAAA,KAAyB,YAAY,EAAE;cACvCtK,IAAI,CAAC1J,IAAI,CAAE,qCAAoC,GAC1C,GAAE,IAAI,CAACuT,sBAAuB,WAAU,CAAC;YAClD;YACAjP,OAAO,CAAC,MAAM/H,OAAO,CAAC4K,UAAU,CAAC3I,OAAO,CAAC,CAAC;UAC9C,CAAC;UACDkV,SAAS,GAAG5O,UAAU,CAACkP,gBAAgB,EAAE,IAAI,CAACT,sBAAsB,GAAG,IAAI,CAAC;QAChF,CAAC,CAAC;QACF,OAAO;UACHlP,OAAO,EAAE0P,cAAc;UACvB3E,EAAE,EAAEsE;QACR,CAAC;MACL;MACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACI,MAAMG,kBAAkBA,CAAC;QAAEH,SAAS;QAAElV,OAAO;QAAEkL,IAAI;QAAEnN;MAAQ,CAAC,EAAE;QAC5D,IAAIpH,KAAK;QACT,IAAI4M,QAAQ;QACZ,IAAI;UACAA,QAAQ,GAAG,MAAMxF,OAAO,CAACyK,gBAAgB,CAACxI,OAAO,CAAC;QACtD,CAAC,CACD,OAAOyV,UAAU,EAAE;UACf9e,KAAK,GAAG8e,UAAU;QACtB;QACA,IAAIP,SAAS,EAAE;UACXQ,YAAY,CAACR,SAAS,CAAC;QAC3B;QACA,IAAI,YAAA,KAAyB,YAAY,EAAE;UACvC,IAAI3R,QAAQ,EAAE;YACV2H,IAAI,CAAC1J,IAAI,CAAE,4BAA2B,CAAC;UAC3C,CAAC,MACI;YACD0J,IAAI,CAAC1J,IAAI,CAAE,0DAAyD,GAC/D,yBAAwB,CAAC;UAClC;QACJ;QACA,IAAI7K,KAAK,IAAI,CAAC4M,QAAQ,EAAE;UACpBA,QAAQ,GAAG,MAAMxF,OAAO,CAAC4K,UAAU,CAAC3I,OAAO,CAAC;UAC5C,IAAI,YAAA,KAAyB,YAAY,EAAE;YACvC,IAAIuD,QAAQ,EAAE;cACV2H,IAAI,CAAC1J,IAAI,CAAE,mCAAkC,IAAI,CAAC3F,SAAU,GAAE,GACzD,SAAQ,CAAC;YAClB,CAAC,MACI;cACDqP,IAAI,CAAC1J,IAAI,CAAE,6BAA4B,IAAI,CAAC3F,SAAU,UAAS,CAAC;YACpE;UACJ;QACJ;QACA,OAAO0H,QAAQ;MACnB;IACJ;IAAC1L,OAAA,CAAAid,YAAA,GAAAA,YAAA;;;;;;;;;;;;;;;;;ICtLD,IAAAN,kBAAA,GAAAte,OAAA,CAAA,qBAAA,CAAA;IACA,IAAA0d,cAAA,GAAA1d,OAAA,CAAA,kCAAA,CAAA;IACA,IAAAyf,aAAA,GAAAzf,OAAA,CAAA,oCAAA,CAAA;IACA,IAAA6d,wBAAA,GAAA7d,OAAA,CAAA,uDAAA,CAAA;IACAA,OAAA,CAAA,eAAA,CAAA;IAXA;AACA;AACA;AACA;AACA;AACA;AACA;;IAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACA,SAAS0f,SAASA,CAAC7O,OAAO,GAAG,CAAC,CAAC,EAAE;MAC7B,MAAM2N,oBAAoB,GAAGA,CAAC;QAAE1U;MAAQ,CAAC,KAAKA,OAAO,CAAC2H,IAAI,KAAK,UAAU;MACzE,MAAM9L,SAAS,GAAGkL,OAAO,CAAClL,SAAS,IAAI,OAAO;MAC9C,MAAMuH,aAAa,GAAG2D,OAAO,CAAC3D,aAAa,IAAIsR,oBAAoB;MACnE,MAAMM,qBAAqB,GAAGjO,OAAO,CAACiO,qBAAqB,IAAI,CAAC;MAChE,MAAMzN,OAAO,GAAIR,OAAO,CAACQ,OAAO,IAAI,EAAG;MACvCA,OAAO,CAAC/F,IAAI,CAAC,IAAIyK,wBAAAA,CAAAA,uBAAuB,CAAC;QACrCV,QAAQ,EAAE,CAAC,CAAC,EAAE,GAAG;MACrB,CAAC,CAAC,CAAC;MACH,MAAMzE,QAAQ,GAAG,IAAIgO,aAAAA,CAAAA,YAAY,CAAC;QAC9BE,qBAAqB;QACrBnZ,SAAS;QACT0L;MACJ,CAAC,CAAC;MACF;MACA,CAAA,CAAA,EAAAlF,cAAAA,CAAAA,aAAa,EAACe,aAAa,EAAE0D,QAAQ,CAAC;MACtC;MACA,IAAIC,OAAO,CAAC6N,SAAS,EAAE;QACnB,CAAA,CAAA,EAAAP,kBAAAA,CAAAA,iBAAiB,EAAC;UAAEC,IAAI,EAAEvN,OAAO,CAAC6N,SAAS;UAAE9N;QAAS,CAAC,CAAC;MAC5D;IACJ;;;;;;;;;;;;;;;ICrCA,IAAAhE,yBAAA,GAAA5M,OAAA,CAAA,qCAAA,CAAA;IACAA,OAAA,CAAA,eAAA,CAAA;IARA;AACA;AACA;AACA;AACA;AACA;AACA;;IAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACA,SAASmI,eAAeA,CAACN,OAAO,EAAE;MAC9B,MAAM4E,aAAa,GAAG,CAAA,CAAA,EAAAC,yBAAAA,CAAAA,wBAAwB,EAAC,CAAC;MAChDD,aAAa,CAACtE,eAAe,CAACN,OAAO,CAAC;IAC1C;;;;;;;;;;;;ICfA7H,OAAA,CAAA,gBAAA,CAAA;IANA;AACA;AACA;AACA;AACA;AACA;;IAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACA,SAAS2K,SAASA,CAACd,KAAK,EAAE8V,OAAO,EAAE;MAC/B,MAAMC,aAAa,GAAGD,OAAO,CAAC,CAAC;MAC/B9V,KAAK,CAACc,SAAS,CAACiV,aAAa,CAAC;MAC9B,OAAOA,aAAa;IACxB;;;;;ICpBA,YAAA;;IACA;IACA,IAAA;MACA,IAAA,CAAA,0BAAA,CAAA,IAAA,CAAA,CAAA,CAAA;IACA,CAAA,CACA,OAAA,CAAA,EAAA,CAAA;;;;;;;;;ICEA,IAAAlZ,aAAA,GAAA1G,OAAA,CAAA,uCAAA,CAAA;IACAA,OAAA,CAAA,gBAAA,CAAA;IARA;AACA;AACA;AACA;AACA;AACA;AACA;;IAGA;IACA,MAAM6f,qBAAqB,GAAG,iBAAiB;IAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACO,SAASC,cAAcA,CAAC7c,KAAK,EAAE;MAClC,IAAI,CAACA,KAAK,EAAE;QACR,MAAM,IAAIsD,aAAAA,CAAAA,YAAY,CAAC,mCAAmC,EAAE;UAAEtD;QAAM,CAAC,CAAC;MAC1E;MACA;MACA;MACA,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;QAC3B,MAAM8c,SAAS,GAAG,IAAI7W,GAAG,CAACjG,KAAK,EAAE4F,QAAQ,CAACD,IAAI,CAAC;QAC/C,OAAO;UACH4G,QAAQ,EAAEuQ,SAAS,CAACnX,IAAI;UACxBzD,GAAG,EAAE4a,SAAS,CAACnX;QACnB,CAAC;MACL;MACA,MAAM;QAAEoX,QAAQ;QAAE7a;MAAI,CAAC,GAAGlC,KAAK;MAC/B,IAAI,CAACkC,GAAG,EAAE;QACN,MAAM,IAAIoB,aAAAA,CAAAA,YAAY,CAAC,mCAAmC,EAAE;UAAEtD;QAAM,CAAC,CAAC;MAC1E;MACA;MACA;MACA,IAAI,CAAC+c,QAAQ,EAAE;QACX,MAAMD,SAAS,GAAG,IAAI7W,GAAG,CAAC/D,GAAG,EAAE0D,QAAQ,CAACD,IAAI,CAAC;QAC7C,OAAO;UACH4G,QAAQ,EAAEuQ,SAAS,CAACnX,IAAI;UACxBzD,GAAG,EAAE4a,SAAS,CAACnX;QACnB,CAAC;MACL;MACA;MACA;MACA,MAAMqX,WAAW,GAAG,IAAI/W,GAAG,CAAC/D,GAAG,EAAE0D,QAAQ,CAACD,IAAI,CAAC;MAC/C,MAAMsX,WAAW,GAAG,IAAIhX,GAAG,CAAC/D,GAAG,EAAE0D,QAAQ,CAACD,IAAI,CAAC;MAC/CqX,WAAW,CAAClR,YAAY,CAAC7C,GAAG,CAAC2T,qBAAqB,EAAEG,QAAQ,CAAC;MAC7D,OAAO;QACHxQ,QAAQ,EAAEyQ,WAAW,CAACrX,IAAI;QAC1BzD,GAAG,EAAE+a,WAAW,CAACtX;MACrB,CAAC;IACL;;;;;;;;;;;;IChDA5I,OAAA,CAAA,gBAAA,CAAA;IAPA;AACA;AACA;AACA;AACA;AACA;AACA;;IAEA;AACA;AACA;AACA;AACA;AACA;IACA,MAAMmgB,2BAA2B,CAAC;MAC9B3Z,WAAWA,CAAAA,EAAG;QACV,IAAI,CAAC4Z,WAAW,GAAG,EAAE;QACrB,IAAI,CAACC,cAAc,GAAG,EAAE;QACxB,IAAI,CAACC,gBAAgB,GAAG,OAAO;UAAExW,OAAO;UAAEwJ;QAAO,CAAC,KAAK;UACnD;UACA,IAAIA,KAAK,EAAE;YACPA,KAAK,CAACzB,eAAe,GAAG/H,OAAO;UACnC;QACJ,CAAC;QACD,IAAI,CAAC0S,wBAAwB,GAAG,OAAO;UAAE3S,KAAK;UAAEyJ,KAAK;UAAEZ;QAAgB,CAAC,KAAK;UACzE,IAAI7I,KAAK,CAAC9C,IAAI,KAAK,SAAS,EAAE;YAC1B;YACA,MAAM5B,GAAG,GAAGmO,KAAK,CAACzB,eAAe,CAAC1M,GAAG;YACrC,IAAIuN,cAAc,EAAE;cAChB,IAAI,CAAC2N,cAAc,CAAC/U,IAAI,CAACnG,GAAG,CAAC;YACjC,CAAC,MACI;cACD,IAAI,CAACib,WAAW,CAAC9U,IAAI,CAACnG,GAAG,CAAC;YAC9B;UACJ;UACA,OAAOuN,cAAc;QACzB,CAAC;MACL;IACJ;IAAC/Q,OAAA,CAAAwe,2BAAA,GAAAA,2BAAA;;;;;;;;;;;IC/BDngB,OAAA,CAAA,gBAAA,CAAA;IAPA;AACA;AACA;AACA;AACA;AACA;AACA;;IAEA;AACA;AACA;AACA;AACA;AACA;IACA,MAAMugB,sBAAsB,CAAC;MACzB/Z,WAAWA,CAAC;QAAEga;MAAmB,CAAC,EAAE;QAChC,IAAI,CAACC,kBAAkB,GAAG,OAAO;UAAE3W,OAAO;UAAEoB;QAAQ,CAAC,KAAK;UACtD,MAAMsE,QAAQ,GAAGtE,MAAM,IAAIA,MAAM,CAACsE,QAAQ,IACtC,IAAI,CAACkR,mBAAmB,CAACC,iBAAiB,CAAC7W,OAAO,CAAC3E,GAAG,CAAC;UAC3D,OAAOqK,QAAQ,GAAG,IAAI9E,OAAO,CAAC8E,QAAQ,CAAC,GAAG1F,OAAO;QACrD,CAAC;QACD,IAAI,CAAC4W,mBAAmB,GAAGF,kBAAkB;MACjD;IACJ;IAAC7e,OAAA,CAAA4e,sBAAA,GAAAA,sBAAA;;;;;;;;;;;IChBD,IAAAlY,OAAA,GAAArI,OAAA,CAAA,iCAAA,CAAA;IACAA,OAAA,CAAA,gBAAA,CAAA;IARA;AACA;AACA;AACA;AACA;AACA;AACA;;IAGA;AACA;AACA;AACA;AACA;AACA;IACA,MAAM4gB,QAAQ,GAAGA,CAACC,UAAU,EAAEC,WAAW,KAAK;MAC1C7gB,OAAAA,CAAAA,MAAM,CAACS,cAAc,CAACmgB,UAAU,CAAC;MACjC,KAAK,MAAM1b,GAAG,IAAI2b,WAAW,EAAE;QAC3B7gB,OAAAA,CAAAA,MAAM,CAACM,GAAG,CAAC4E,GAAG,CAAC;MACnB;MACAlF,OAAAA,CAAAA,MAAM,CAACU,QAAQ,CAAC,CAAC;IACrB,CAAC;IACD;AACA;AACA;AACA;AACA;AACA;IACO,SAASogB,mBAAmBA,CAACD,WAAW,EAAE;MAC7C,MAAME,aAAa,GAAGF,WAAW,CAAC5a,MAAM;MACxC,IAAI8a,aAAa,GAAG,CAAC,EAAE;QACnB/gB,OAAAA,CAAAA,MAAM,CAACS,cAAc,CAAE,6BAA4B,GAC9C,GAAEsgB,aAAc,UAAS,GACzB,UAASA,aAAa,KAAK,CAAC,GAAG,MAAM,GAAG,QAAS,WAAU,CAAC;QACjEJ,QAAQ,CAAC,wBAAwB,EAAEE,WAAW,CAAC;QAC/C7gB,OAAAA,CAAAA,MAAM,CAACU,QAAQ,CAAC,CAAC;MACrB;IACJ;;;;;;;;;;;;IC9BA,IAAA0H,OAAA,GAAArI,OAAA,CAAA,iCAAA,CAAA;IACAA,OAAA,CAAA,gBAAA,CAAA;IARA;AACA;AACA;AACA;AACA;AACA;AACA;;IAGA;AACA;AACA;AACA;AACA;AACA;IACA,SAASihB,YAAYA,CAACJ,UAAU,EAAEzC,IAAI,EAAE;MACpC,IAAIA,IAAI,CAAClY,MAAM,KAAK,CAAC,EAAE;QACnB;MACJ;MACAjG,OAAAA,CAAAA,MAAM,CAACS,cAAc,CAACmgB,UAAU,CAAC;MACjC,KAAK,MAAM1b,GAAG,IAAIiZ,IAAI,EAAE;QACpBne,OAAAA,CAAAA,MAAM,CAACM,GAAG,CAAC4E,GAAG,CAAC;MACnB;MACAlF,OAAAA,CAAAA,MAAM,CAACU,QAAQ,CAAC,CAAC;IACrB;IACA;AACA;AACA;AACA;AACA;AACA;AACA;IACO,SAASugB,mBAAmBA,CAACC,cAAc,EAAEC,oBAAoB,EAAE;MACtE,MAAMC,cAAc,GAAGF,cAAc,CAACjb,MAAM;MAC5C,MAAMob,qBAAqB,GAAGF,oBAAoB,CAAClb,MAAM;MACzD,IAAImb,cAAc,IAAIC,qBAAqB,EAAE;QACzC,IAAI9d,OAAO,GAAI,cAAa6d,cAAe,QAAOA,cAAc,KAAK,CAAC,GAAG,EAAE,GAAG,GAAI,GAAE;QACpF,IAAIC,qBAAqB,GAAG,CAAC,EAAE;UAC3B9d,OAAO,IAAK,IAAG8d,qBAAsB,GAAE,GAClC,OAAMA,qBAAqB,KAAK,CAAC,GAAG,KAAK,GAAG,OAAQ,kBAAiB;QAC9E;QACArhB,OAAAA,CAAAA,MAAM,CAACS,cAAc,CAAC8C,OAAO,CAAC;QAC9Byd,YAAY,CAAE,4BAA2B,EAAEE,cAAc,CAAC;QAC1DF,YAAY,CAAE,iCAAgC,EAAEG,oBAAoB,CAAC;QACrEnhB,OAAAA,CAAAA,MAAM,CAACU,QAAQ,CAAC,CAAC;MACrB;IACJ;;;;;;;;;;;;ICvCAX,OAAA,CAAA,gBAAA,CAAA;IAPA;AACA;AACA;AACA;AACA;AACA;AACA;;IAEA,IAAIuhB,aAAa;IACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACA,SAASC,kCAAkCA,CAAAA,EAAG;MAC1C,IAAID,aAAa,KAAKvV,SAAS,EAAE;QAC7B,MAAMyV,YAAY,GAAG,IAAI/L,QAAQ,CAAC,EAAE,CAAC;QACrC,IAAI,MAAM,IAAI+L,YAAY,EAAE;UACxB,IAAI;YACA,IAAI/L,QAAQ,CAAC+L,YAAY,CAACC,IAAI,CAAC;YAC/BH,aAAa,GAAG,IAAI;UACxB,CAAC,CACD,OAAO9gB,KAAK,EAAE;YACV8gB,aAAa,GAAG,KAAK;UACzB;QACJ;QACAA,aAAa,GAAG,KAAK;MACzB;MACA,OAAOA,aAAa;IACxB;;;;;;;;;;;IC1BA,IAAAI,mCAAA,GAAA3hB,OAAA,CAAA,kDAAA,CAAA;IACA,IAAA0G,aAAA,GAAA1G,OAAA,CAAA,4BAAA,CAAA;IACAA,OAAA,CAAA,eAAA,CAAA;IATA;AACA;AACA;AACA;AACA;AACA;AACA;;IAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACA,eAAe4hB,YAAYA,CAACvU,QAAQ,EAAEwU,QAAQ,EAAE;MAC5C,IAAIhc,MAAM,GAAG,IAAI;MACjB;MACA,IAAIwH,QAAQ,CAAClI,GAAG,EAAE;QACd,MAAM2c,WAAW,GAAG,IAAI5Y,GAAG,CAACmE,QAAQ,CAAClI,GAAG,CAAC;QACzCU,MAAM,GAAGic,WAAW,CAACjc,MAAM;MAC/B;MACA,IAAIA,MAAM,KAAK3F,IAAI,CAAC2I,QAAQ,CAAChD,MAAM,EAAE;QACjC,MAAM,IAAIU,aAAAA,CAAAA,YAAY,CAAC,4BAA4B,EAAE;UAAEV;QAAO,CAAC,CAAC;MACpE;MACA,MAAMkc,cAAc,GAAG1U,QAAQ,CAAC0E,KAAK,CAAC,CAAC;MACvC;MACA,MAAMiQ,YAAY,GAAG;QACjB1M,OAAO,EAAE,IAAI2M,OAAO,CAACF,cAAc,CAACzM,OAAO,CAAC;QAC5C/P,MAAM,EAAEwc,cAAc,CAACxc,MAAM;QAC7B2c,UAAU,EAAEH,cAAc,CAACG;MAC/B,CAAC;MACD;MACA,MAAMC,oBAAoB,GAAGN,QAAQ,GAAGA,QAAQ,CAACG,YAAY,CAAC,GAAGA,YAAY;MAC7E;MACA;MACA;MACA,MAAMN,IAAI,GAAG,CAAA,CAAA,EAAAF,mCAAAA,CAAAA,kCAAkC,EAAC,CAAC,GAC7CO,cAAc,CAACL,IAAI,GAAG,MAAMK,cAAc,CAACK,IAAI,CAAC,CAAC;MACrD,OAAO,IAAI1M,QAAQ,CAACgM,IAAI,EAAES,oBAAoB,CAAC;IACnD;;;;;;;;;;;;;IC/CA,IAAAE,aAAA,GAAAriB,OAAA,CAAA,8BAAA,CAAA;IACA,IAAA6T,WAAA,GAAA7T,OAAA,CAAA,qCAAA,CAAA;IACA,IAAAqJ,eAAA,GAAArJ,OAAA,CAAA,yCAAA,CAAA;IACA,IAAAqI,OAAA,GAAArI,OAAA,CAAA,iCAAA,CAAA;IACA,IAAA0G,aAAA,GAAA1G,OAAA,CAAA,uCAAA,CAAA;IACA,IAAA2U,SAAA,GAAA3U,OAAA,CAAA,gCAAA,CAAA;IACAA,OAAA,CAAA,eAAA,CAAA;IAbA;AACA;AACA;AACA;AACA;AACA;AACA;;IAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACA,MAAMsiB,gBAAgB,SAASvO,SAAAA,CAAAA,QAAQ,CAAC;MACpC;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIvN,WAAWA,CAACqK,OAAO,GAAG,CAAC,CAAC,EAAE;QACtBA,OAAO,CAAClL,SAAS,GAAGuI,WAAAA,CAAAA,UAAU,CAACI,eAAe,CAACuC,OAAO,CAAClL,SAAS,CAAC;QACjE,KAAK,CAACkL,OAAO,CAAC;QACd,IAAI,CAAC0R,kBAAkB,GAAG1R,OAAO,CAAC2R,iBAAiB,KAAK,KAAK,GAAG,KAAK,GAAG,IAAI;QAC5E;QACA;QACA;QACA;QACA,IAAI,CAACnR,OAAO,CAAC/F,IAAI,CAACgX,gBAAgB,CAACG,sCAAsC,CAAC;MAC9E;MACA;AACJ;AACA;AACA;AACA;AACA;AACA;MACI,MAAMpO,OAAOA,CAACvK,OAAO,EAAEjC,OAAO,EAAE;QAC5B,MAAMwF,QAAQ,GAAG,MAAMxF,OAAO,CAAC4K,UAAU,CAAC3I,OAAO,CAAC;QAClD,IAAI,CAACuD,QAAQ,EAAE;UACX;UACA;UACA;UACA,IAAIxF,OAAO,CAACgC,KAAK,IAAIhC,OAAO,CAACgC,KAAK,CAAC9C,IAAI,KAAK,SAAS,EAAE;YACnD,OAAO,MAAM,IAAI,CAAC2b,cAAc,CAAC5Y,OAAO,EAAEjC,OAAO,CAAC;UACtD;UACA,OAAO,MAAM,IAAI,CAAC8a,YAAY,CAAC7Y,OAAO,EAAEjC,OAAO,CAAC;QACpD;QACA,OAAOwF,QAAQ;MACnB;MACA,MAAMsV,YAAYA,CAAC7Y,OAAO,EAAEjC,OAAO,EAAE;QACjC,IAAIwF,QAAQ;QACZ;QACA;QACA,IAAI,IAAI,CAACkV,kBAAkB,EAAE;UACzB,IAAI,YAAA,KAAyB,YAAY,EAAE;YACvCtiB,OAAAA,CAAAA,MAAM,CAACO,IAAI,CAAE,6BAA4B,GACpC,GAAE,CAAA,CAAA,EAAAwI,eAAAA,CAAAA,cAAc,EAACc,OAAO,CAAC3E,GAAG,CAAE,OAAM,IAAI,CAACQ,SAAU,WAAU,GAC7D,6CAA4C,CAAC;UACtD;UACA0H,QAAQ,GAAG,MAAMxF,OAAO,CAAC2J,KAAK,CAAC1H,OAAO,CAAC;QAC3C,CAAC,MACI;UACD;UACA;UACA,MAAM,IAAIvD,aAAAA,CAAAA,YAAY,CAAC,wBAAwB,EAAE;YAC7CZ,SAAS,EAAE,IAAI,CAACA,SAAS;YACzBR,GAAG,EAAE2E,OAAO,CAAC3E;UACjB,CAAC,CAAC;QACN;QACA,IAAI,YAAA,KAAyB,YAAY,EAAE;UACvC,MAAMqK,QAAQ,GAAG3H,OAAO,CAACqD,MAAM,IAAIrD,OAAO,CAACqD,MAAM,CAACsE,QAAQ,KACtD,MAAM3H,OAAO,CAAC+K,WAAW,CAAC9I,OAAO,EAAE,MAAM,CAAC,CAAA;UAC9C;UACA;UACA7J,OAAAA,CAAAA,MAAM,CAACS,cAAc,CAAE,+BAA8B,GACjD,CAAA,CAAA,EAAAsI,eAAAA,CAAAA,cAAc,EAACc,OAAO,CAAC3E,GAAG,CAAC,CAAC;UAChClF,OAAAA,CAAAA,MAAM,CAACM,GAAG,CAAE,8BAA6B,CAAA,CAAA,EAAAyI,eAAAA,CAAAA,cAAc,EAACwG,QAAQ,CAACrK,GAAG,CAAE,EAAC,CAAC;UACxElF,OAAAA,CAAAA,MAAM,CAACS,cAAc,CAAE,4BAA2B,CAAC;UACnDT,OAAAA,CAAAA,MAAM,CAACM,GAAG,CAACuJ,OAAO,CAAC;UACnB7J,OAAAA,CAAAA,MAAM,CAACU,QAAQ,CAAC,CAAC;UACjBV,OAAAA,CAAAA,MAAM,CAACS,cAAc,CAAE,6BAA4B,CAAC;UACpDT,OAAAA,CAAAA,MAAM,CAACM,GAAG,CAAC8M,QAAQ,CAAC;UACpBpN,OAAAA,CAAAA,MAAM,CAACU,QAAQ,CAAC,CAAC;UACjBV,OAAAA,CAAAA,MAAM,CAACU,QAAQ,CAAC,CAAC;QACrB;QACA,OAAO0M,QAAQ;MACnB;MACA,MAAMqV,cAAcA,CAAC5Y,OAAO,EAAEjC,OAAO,EAAE;QACnC,IAAI,CAAC+a,qCAAqC,CAAC,CAAC;QAC5C,MAAMvV,QAAQ,GAAG,MAAMxF,OAAO,CAAC2J,KAAK,CAAC1H,OAAO,CAAC;QAC7C;QACA;QACA,MAAM+Y,SAAS,GAAG,MAAMhb,OAAO,CAAC2K,QAAQ,CAAC1I,OAAO,EAAEuD,QAAQ,CAAC0E,KAAK,CAAC,CAAC,CAAC;QACnE,IAAI,CAAC8Q,SAAS,EAAE;UACZ;UACA;UACA,MAAM,IAAItc,aAAAA,CAAAA,YAAY,CAAC,yBAAyB,EAAE;YAC9CpB,GAAG,EAAE2E,OAAO,CAAC3E,GAAG;YAChBI,MAAM,EAAE8H,QAAQ,CAAC9H;UACrB,CAAC,CAAC;QACN;QACA,OAAO8H,QAAQ;MACnB;MACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIuV,qCAAqCA,CAAAA,EAAG;QACpC,IAAIE,kBAAkB,GAAG,IAAI;QAC7B,IAAIC,0BAA0B,GAAG,CAAC;QAClC,KAAK,MAAM,CAACja,KAAK,EAAEyI,MAAM,CAAC,IAAI,IAAI,CAACF,OAAO,CAAC2G,OAAO,CAAC,CAAC,EAAE;UAClD;UACA,IAAIzG,MAAM,KAAK+Q,gBAAgB,CAACG,sCAAsC,EAAE;YACpE;UACJ;UACA;UACA,IAAIlR,MAAM,KAAK+Q,gBAAgB,CAACU,iCAAiC,EAAE;YAC/DF,kBAAkB,GAAGha,KAAK;UAC9B;UACA,IAAIyI,MAAM,CAACnE,eAAe,EAAE;YACxB2V,0BAA0B,EAAE;UAChC;QACJ;QACA,IAAIA,0BAA0B,KAAK,CAAC,EAAE;UAClC,IAAI,CAAC1R,OAAO,CAAC/F,IAAI,CAACgX,gBAAgB,CAACU,iCAAiC,CAAC;QACzE,CAAC,MACI,IAAID,0BAA0B,GAAG,CAAC,IAAID,kBAAkB,KAAK,IAAI,EAAE;UACpE;UACA,IAAI,CAACzR,OAAO,CAAC9E,MAAM,CAACuW,kBAAkB,EAAE,CAAC,CAAC;QAC9C;QACA;MACJ;IACJ;;IAACnhB,OAAA,CAAA2gB,gBAAA,GAAAA,gBAAA;IACDA,gBAAgB,CAACU,iCAAiC,GAAG;MACjD,MAAM5V,eAAeA,CAAC;QAAEC;MAAS,CAAC,EAAE;QAChC,IAAI,CAACA,QAAQ,IAAIA,QAAQ,CAAC9H,MAAM,IAAI,GAAG,EAAE;UACrC,OAAO,IAAI;QACf;QACA,OAAO8H,QAAQ;MACnB;IACJ,CAAC;IACDiV,gBAAgB,CAACG,sCAAsC,GAAG;MACtD,MAAMrV,eAAeA,CAAC;QAAEC;MAAS,CAAC,EAAE;QAChC,OAAOA,QAAQ,CAAC4V,UAAU,GAAG,MAAM,CAAA,CAAA,EAAArB,aAAAA,CAAAA,YAAY,EAACvU,QAAQ,CAAC,GAAGA,QAAQ;MACxE;IACJ,CAAC;;;;;;;;;;;;;;;;;IC1LD,IAAA1F,OAAA,GAAA3H,OAAA,CAAA,iCAAA,CAAA;IACA,IAAA6T,WAAA,GAAA7T,OAAA,CAAA,qCAAA,CAAA;IACA,IAAAqI,OAAA,GAAArI,OAAA,CAAA,iCAAA,CAAA;IACA,IAAA0G,aAAA,GAAA1G,OAAA,CAAA,uCAAA,CAAA;IACA,IAAAkjB,UAAA,GAAAljB,OAAA,CAAA,oCAAA,CAAA;IACA,IAAAmjB,eAAA,GAAAnjB,OAAA,CAAA,2BAAA,CAAA;IACA,IAAAojB,4BAAA,GAAApjB,OAAA,CAAA,wCAAA,CAAA;IACA,IAAAqjB,uBAAA,GAAArjB,OAAA,CAAA,mCAAA,CAAA;IACA,IAAAsjB,oBAAA,GAAAtjB,OAAA,CAAA,gCAAA,CAAA;IACA,IAAAujB,oBAAA,GAAAvjB,OAAA,CAAA,gCAAA,CAAA;IACA,IAAAwjB,iBAAA,GAAAxjB,OAAA,CAAA,uBAAA,CAAA;IACAA,OAAA,CAAA,eAAA,CAAA;IAlBA;AACA;AACA;AACA;AACA;AACA;AACA;;IAaA;AACA;AACA;AACA;AACA;IACA,MAAMyjB,kBAAkB,CAAC;MACrB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIjd,WAAWA,CAAC;QAAEb,SAAS;QAAE0L,OAAO,GAAG,EAAE;QAAEmR,iBAAiB,GAAG;MAAK,CAAC,GAAG,CAAC,CAAC,EAAE;QACpE,IAAI,CAACkB,gBAAgB,GAAG,IAAIla,GAAG,CAAC,CAAC;QACjC,IAAI,CAACma,iBAAiB,GAAG,IAAIna,GAAG,CAAC,CAAC;QAClC,IAAI,CAACoa,uBAAuB,GAAG,IAAIpa,GAAG,CAAC,CAAC;QACxC,IAAI,CAACyH,SAAS,GAAG,IAAIqR,iBAAAA,CAAAA,gBAAgB,CAAC;UAClC3c,SAAS,EAAEuI,WAAAA,CAAAA,UAAU,CAACI,eAAe,CAAC3I,SAAS,CAAC;UAChD0L,OAAO,EAAE,CACL,GAAGA,OAAO,EACV,IAAIkP,uBAAAA,CAAAA,sBAAsB,CAAC;YAAEC,kBAAkB,EAAE;UAAK,CAAC,CAAC,CAC3D;UACDgC;QACJ,CAAC,CAAC;QACF;QACA,IAAI,CAACqB,OAAO,GAAG,IAAI,CAACA,OAAO,CAACrM,IAAI,CAAC,IAAI,CAAC;QACtC,IAAI,CAACsM,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAACtM,IAAI,CAAC,IAAI,CAAC;MAC5C;MACA;AACJ;AACA;AACA;MACI,IAAI5G,QAAQA,CAAAA,EAAG;QACX,OAAO,IAAI,CAACK,SAAS;MACzB;MACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIzD,QAAQA,CAACwK,OAAO,EAAE;QACd,IAAI,CAAC+L,cAAc,CAAC/L,OAAO,CAAC;QAC5B,IAAI,CAAC,IAAI,CAACgM,+BAA+B,EAAE;UACvC9jB,IAAI,CAAC0J,gBAAgB,CAAC,SAAS,EAAE,IAAI,CAACia,OAAO,CAAC;UAC9C3jB,IAAI,CAAC0J,gBAAgB,CAAC,UAAU,EAAE,IAAI,CAACka,QAAQ,CAAC;UAChD,IAAI,CAACE,+BAA+B,GAAG,IAAI;QAC/C;MACJ;MACA;AACJ;AACA;AACA;AACA;AACA;AACA;MACID,cAAcA,CAAC/L,OAAO,EAAE;QACpB,IAAI,YAAA,KAAyB,YAAY,EAAE;UACvCxQ,OAAAA,CAAAA,MAAM,CAACb,OAAO,CAACqR,OAAO,EAAE;YACpB3V,UAAU,EAAE,oBAAoB;YAChCC,SAAS,EAAE,oBAAoB;YAC/BC,QAAQ,EAAE,gBAAgB;YAC1BT,SAAS,EAAE;UACf,CAAC,CAAC;QACN;QACA,MAAMmiB,eAAe,GAAG,EAAE;QAC1B,KAAK,MAAMhhB,KAAK,IAAI+U,OAAO,EAAE;UACzB;UACA,IAAI,OAAO/U,KAAK,KAAK,QAAQ,EAAE;YAC3BghB,eAAe,CAAC3Y,IAAI,CAACrI,KAAK,CAAC;UAC/B,CAAC,MACI,IAAIA,KAAK,IAAIA,KAAK,CAAC+c,QAAQ,KAAKhU,SAAS,EAAE;YAC5CiY,eAAe,CAAC3Y,IAAI,CAACrI,KAAK,CAACkC,GAAG,CAAC;UACnC;UACA,MAAM;YAAEqK,QAAQ;YAAErK;UAAI,CAAC,GAAG,CAAA,CAAA,EAAA2a,eAAAA,CAAAA,cAAc,EAAC7c,KAAK,CAAC;UAC/C,MAAMihB,SAAS,GAAI,OAAOjhB,KAAK,KAAK,QAAQ,IAAIA,KAAK,CAAC+c,QAAQ,GAC1D,QAAQ,GAAG,SAAS;UACxB,IAAI,IAAI,CAAC0D,gBAAgB,CAACnY,GAAG,CAACpG,GAAG,CAAC,IAC9B,IAAI,CAACue,gBAAgB,CAAClY,GAAG,CAACrG,GAAG,CAAC,KAAKqK,QAAQ,EAAE;YAC7C,MAAM,IAAIjJ,aAAAA,CAAAA,YAAY,CAAC,uCAAuC,EAAE;cAC5DpD,UAAU,EAAE,IAAI,CAACugB,gBAAgB,CAAClY,GAAG,CAACrG,GAAG,CAAC;cAC1C/B,WAAW,EAAEoM;YACjB,CAAC,CAAC;UACN;UACA,IAAI,OAAOvM,KAAK,KAAK,QAAQ,IAAIA,KAAK,CAACkhB,SAAS,EAAE;YAC9C,IAAI,IAAI,CAACP,uBAAuB,CAACrY,GAAG,CAACiE,QAAQ,CAAC,IAC1C,IAAI,CAACoU,uBAAuB,CAACpY,GAAG,CAACgE,QAAQ,CAAC,KAAKvM,KAAK,CAACkhB,SAAS,EAAE;cAChE,MAAM,IAAI5d,aAAAA,CAAAA,YAAY,CAAC,2CAA2C,EAAE;gBAChEpB;cACJ,CAAC,CAAC;YACN;YACA,IAAI,CAACye,uBAAuB,CAAC1X,GAAG,CAACsD,QAAQ,EAAEvM,KAAK,CAACkhB,SAAS,CAAC;UAC/D;UACA,IAAI,CAACT,gBAAgB,CAACxX,GAAG,CAAC/G,GAAG,EAAEqK,QAAQ,CAAC;UACxC,IAAI,CAACmU,iBAAiB,CAACzX,GAAG,CAAC/G,GAAG,EAAE+e,SAAS,CAAC;UAC1C,IAAID,eAAe,CAAC/d,MAAM,GAAG,CAAC,EAAE;YAC5B,MAAMke,cAAc,GAAI,8CAA6C,GAChE,SAAQH,eAAe,CAAC5iB,IAAI,CAAC,IAAI,CAAE,gCAA+B,GAClE,0CAAyC;YAC9C,IAAI,YAAA,KAAyB,YAAY,EAAE;cACvC;cACA;cACAH,OAAO,CAACV,IAAI,CAAC4jB,cAAc,CAAC;YAChC,CAAC,MACI;cACDnkB,OAAAA,CAAAA,MAAM,CAACO,IAAI,CAAC4jB,cAAc,CAAC;YAC/B;UACJ;QACJ;MACJ;MACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIP,OAAOA,CAACha,KAAK,EAAE;QACX,OAAO,CAAA,CAAA,EAAAc,UAAAA,CAAAA,SAAS,EAACd,KAAK,EAAE,YAAY;UAChC,MAAMwa,mBAAmB,GAAG,IAAIlE,4BAAAA,CAAAA,2BAA2B,CAAC,CAAC;UAC7D,IAAI,CAACvP,QAAQ,CAACS,OAAO,CAAC/F,IAAI,CAAC+Y,mBAAmB,CAAC;UAC/C;UACA;UACA,KAAK,MAAM,CAAClf,GAAG,EAAEqK,QAAQ,CAAC,IAAI,IAAI,CAACkU,gBAAgB,EAAE;YACjD,MAAMS,SAAS,GAAG,IAAI,CAACP,uBAAuB,CAACpY,GAAG,CAACgE,QAAQ,CAAC;YAC5D,MAAM0U,SAAS,GAAG,IAAI,CAACP,iBAAiB,CAACnY,GAAG,CAACrG,GAAG,CAAC;YACjD,MAAM2E,OAAO,GAAG,IAAIY,OAAO,CAACvF,GAAG,EAAE;cAC7Bgf,SAAS;cACTjV,KAAK,EAAEgV,SAAS;cAChBI,WAAW,EAAE;YACjB,CAAC,CAAC;YACF,MAAM/Z,OAAO,CAACC,GAAG,CAAC,IAAI,CAACoG,QAAQ,CAACqD,SAAS,CAAC;cACtC/I,MAAM,EAAE;gBAAEsE;cAAS,CAAC;cACpB1F,OAAO;cACPD;YACJ,CAAC,CAAC,CAAC;UACP;UACA,MAAM;YAAEuW,WAAW;YAAEC;UAAe,CAAC,GAAGgE,mBAAmB;UAC3D,IAAI,YAAA,KAAyB,YAAY,EAAE;YACvC,CAAA,CAAA,EAAAnD,oBAAAA,CAAAA,mBAAmB,EAACd,WAAW,EAAEC,cAAc,CAAC;UACpD;UACA,OAAO;YAAED,WAAW;YAAEC;UAAe,CAAC;QAC1C,CAAC,CAAC;MACN;MACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIyD,QAAQA,CAACja,KAAK,EAAE;QACZ,OAAO,CAAA,CAAA,EAAAc,UAAAA,CAAAA,SAAS,EAACd,KAAK,EAAE,YAAY;UAChC,MAAMqF,KAAK,GAAG,MAAMhP,IAAI,CAAC4S,MAAM,CAACG,IAAI,CAAC,IAAI,CAACrC,QAAQ,CAACjL,SAAS,CAAC;UAC7D,MAAM4e,uBAAuB,GAAG,MAAMrV,KAAK,CAACzN,IAAI,CAAC,CAAC;UAClD,MAAM+iB,iBAAiB,GAAG,IAAI1U,GAAG,CAAC,IAAI,CAAC4T,gBAAgB,CAACe,MAAM,CAAC,CAAC,CAAC;UACjE,MAAM3D,WAAW,GAAG,EAAE;UACtB,KAAK,MAAMhX,OAAO,IAAIya,uBAAuB,EAAE;YAC3C,IAAI,CAACC,iBAAiB,CAACjZ,GAAG,CAACzB,OAAO,CAAC3E,GAAG,CAAC,EAAE;cACrC,MAAM+J,KAAK,CAACF,MAAM,CAAClF,OAAO,CAAC;cAC3BgX,WAAW,CAACxV,IAAI,CAACxB,OAAO,CAAC3E,GAAG,CAAC;YACjC;UACJ;UACA,IAAI,YAAA,KAAyB,YAAY,EAAE;YACvC,CAAA,CAAA,EAAA4b,oBAAAA,CAAAA,mBAAmB,EAACD,WAAW,CAAC;UACpC;UACA,OAAO;YAAEA;UAAY,CAAC;QAC1B,CAAC,CAAC;MACN;MACA;AACJ;AACA;AACA;AACA;AACA;MACI4D,kBAAkBA,CAAAA,EAAG;QACjB,OAAO,IAAI,CAAChB,gBAAgB;MAChC;MACA;AACJ;AACA;AACA;AACA;AACA;MACIiB,aAAaA,CAAAA,EAAG;QACZ,OAAO,CAAC,GAAG,IAAI,CAACjB,gBAAgB,CAACjiB,IAAI,CAAC,CAAC,CAAC;MAC5C;MACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACIkf,iBAAiBA,CAACxb,GAAG,EAAE;QACnB,MAAM4a,SAAS,GAAG,IAAI7W,GAAG,CAAC/D,GAAG,EAAE0D,QAAQ,CAACD,IAAI,CAAC;QAC7C,OAAO,IAAI,CAAC8a,gBAAgB,CAAClY,GAAG,CAACuU,SAAS,CAACnX,IAAI,CAAC;MACpD;MACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACI,MAAMgc,aAAaA,CAAC9a,OAAO,EAAE;QACzB,MAAM3E,GAAG,GAAG2E,OAAO,YAAYY,OAAO,GAAGZ,OAAO,CAAC3E,GAAG,GAAG2E,OAAO;QAC9D,MAAM0F,QAAQ,GAAG,IAAI,CAACmR,iBAAiB,CAACxb,GAAG,CAAC;QAC5C,IAAIqK,QAAQ,EAAE;UACV,MAAMN,KAAK,GAAG,MAAMhP,IAAI,CAAC4S,MAAM,CAACG,IAAI,CAAC,IAAI,CAACrC,QAAQ,CAACjL,SAAS,CAAC;UAC7D,OAAOuJ,KAAK,CAAChH,KAAK,CAACsH,QAAQ,CAAC;QAChC;QACA,OAAOxD,SAAS;MACpB;MACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;MACI6Y,uBAAuBA,CAAC1f,GAAG,EAAE;QACzB,MAAMqK,QAAQ,GAAG,IAAI,CAACmR,iBAAiB,CAACxb,GAAG,CAAC;QAC5C,IAAI,CAACqK,QAAQ,EAAE;UACX,MAAM,IAAIjJ,aAAAA,CAAAA,YAAY,CAAC,mBAAmB,EAAE;YAAEpB;UAAI,CAAC,CAAC;QACxD;QACA,OAAQ0L,OAAO,IAAK;UAChBA,OAAO,CAAC/G,OAAO,GAAG,IAAIY,OAAO,CAACvF,GAAG,CAAC;UAClC0L,OAAO,CAAC3F,MAAM,GAAG;YAAEsE,QAAQ;YAAE,GAAGqB,OAAO,CAAC3F;UAAO,CAAC;UAChD,OAAO,IAAI,CAAC0F,QAAQ,CAAC9I,MAAM,CAAC+I,OAAO,CAAC;QACxC,CAAC;MACL;IACJ;IAAClP,OAAA,CAAA8hB,kBAAA,GAAAA,kBAAA;;;;;;;;;;;;;;;;;;;;;;IChRD,IAAAqB,mBAAA,GAAA9kB,OAAA,CAAA,0BAAA,CAAA;IACAA,OAAA,CAAA,gBAAA,CAAA;IARA;AACA;AACA;AACA;AACA;AACA;AACA;;IAGA,IAAIwgB,kBAAkB;IACtB;AACA;AACA;AACA;IACO,MAAMuE,6BAA6B,GAAGA,CAAAA,KAAM;MAC/C,IAAI,CAACvE,kBAAkB,EAAE;QACrBA,kBAAkB,GAAG,IAAIiD,mBAAAA,CAAAA,kBAAkB,CAAC,CAAC;MACjD;MACA,OAAOjD,kBAAkB;IAC7B,CAAC;IAAC7e,OAAA,CAAAojB,6BAAA,GAAAA,6BAAA;;;;;;;;;;;;ICZF,IAAAC,8BAAA,GAAAhlB,OAAA,CAAA,0CAAA,CAAA;IACAA,OAAA,CAAA,eAAA,CAAA;IARA;AACA;AACA;AACA;AACA;AACA;AACA;;IAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACA,SAAS4kB,aAAaA,CAAC9a,OAAO,EAAE;MAC5B,MAAM0W,kBAAkB,GAAG,CAAA,CAAA,EAAAuE,8BAAAA,CAAAA,6BAA6B,EAAC,CAAC;MAC1D,OAAOvE,kBAAkB,CAACoE,aAAa,CAAC9a,OAAO,CAAC;IACpD;;;;;;;;;;;;ICpBA,IAAAmb,gBAAA,GAAAjlB,OAAA,CAAA,oCAAA,CAAA;IACA,IAAAklB,cAAA,GAAAllB,OAAA,CAAA,qCAAA,CAAA;IACAA,OAAA,CAAA,eAAA,CAAA;IATA;AACA;AACA;AACA;AACA;AACA;AACA;;IAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACA,SAASmlB,eAAeA,CAACtU,OAAO,GAAG,CAAC,CAAC,EAAE;MACnC,MAAMuU,YAAY,GAAGvU,OAAO,CAACuU,YAAY,IAAI,cAAc;MAC3D,MAAMC,aAAa,GAAGxU,OAAO,CAACwU,aAAa,IAAI,KAAK;MACpD,MAAMC,YAAY,GAAGzU,OAAO,CAACyU,YAAY,IAAI,KAAK;MAClDplB,IAAI,CAAC0J,gBAAgB,CAAC,SAAS,EAAEC,KAAK,IAAI;QACtC,MAAM0b,KAAK,GAAG,CAACH,YAAY,CAAC;QAC5B,IAAIC,aAAa,EAAE;UACfE,KAAK,CAACja,IAAI,CAAC+Z,aAAa,CAAC;QAC7B;QACA,IAAIC,YAAY,EAAE;UACdC,KAAK,CAACja,IAAI,CAACga,YAAY,CAAC;QAC5B;QACAzb,KAAK,CAACc,SAAS,CAACzK,IAAI,CAAC4S,MAAM,CAACG,IAAI,CAAC,2BAA2B,CAAC,CAACpI,IAAI,CAACqE,KAAK,IAAIA,KAAK,CAACsW,MAAM,CAACD,KAAK,CAAC,CAAC,CAAC;MACrG,CAAC,CAAC;MACF,MAAM1d,OAAO,GAAG,MAAOgJ,OAAO,IAAK;QAC/B,MAAM4U,IAAI,GAAG5U,OAAO,CAAC/G,OAAO,CAAC2U,WAAW;QACxC,MAAMvP,KAAK,GAAG,MAAMhP,IAAI,CAAC4S,MAAM,CAACG,IAAI,CAAC,2BAA2B,CAAC;QACjE,IAAIwS,IAAI,KAAK,UAAU,EAAE;UACrB,MAAMvd,KAAK,GAAG,CAAA,MAAM,CAAA,CAAA,EAAA0c,cAAAA,CAAAA,aAAa,EAACQ,YAAY,CAAC,MAAI,MAAMlW,KAAK,CAAChH,KAAK,CAACkd,YAAY,CAAC,CAAA;UAClF,OAAOld,KAAK,IAAIwN,QAAQ,CAACjV,KAAK,CAAC,CAAC;QACpC;QACA,IAAIglB,IAAI,KAAK,OAAO,IAAIJ,aAAa,KAAK,KAAK,EAAE;UAC7C,MAAMnd,KAAK,GAAG,CAAA,MAAM,CAAA,CAAA,EAAA0c,cAAAA,CAAAA,aAAa,EAACS,aAAa,CAAC,MAAI,MAAMnW,KAAK,CAAChH,KAAK,CAACmd,aAAa,CAAC,CAAA;UACpF,OAAOnd,KAAK,IAAIwN,QAAQ,CAACjV,KAAK,CAAC,CAAC;QACpC;QACA,IAAIglB,IAAI,KAAK,MAAM,IAAIH,YAAY,KAAK,KAAK,EAAE;UAC3C,MAAMpd,KAAK,GAAG,CAAA,MAAM,CAAA,CAAA,EAAA0c,cAAAA,CAAAA,aAAa,EAACU,YAAY,CAAC,MAAI,MAAMpW,KAAK,CAAChH,KAAK,CAACod,YAAY,CAAC,CAAA;UAClF,OAAOpd,KAAK,IAAIwN,QAAQ,CAACjV,KAAK,CAAC,CAAC;QACpC;QACA,OAAOiV,QAAQ,CAACjV,KAAK,CAAC,CAAC;MAC3B,CAAC;MACD,CAAA,CAAA,EAAA0H,gBAAAA,CAAAA,eAAe,EAACN,OAAO,CAAC;IAC5B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IC7CA,IAAA6d,iBAAA,GAAA1lB,OAAA,CAAA,oBAAA,CAAA;IACA,IAAA2lB,WAAA,GAAA3lB,OAAA,CAAA,cAAA,CAAA;IACA,IAAA4lB,oBAAA,GAAA5lB,OAAA,CAAA,uBAAA,CAAA;IACA,IAAA6lB,UAAA,GAAA7lB,OAAA,CAAA,aAAA,CAAA;IACA,IAAA8lB,gBAAA,GAAA9lB,OAAA,CAAA,mBAAA,CAAA;IACA,IAAAse,kBAAA,GAAAte,OAAA,CAAA,qBAAA,CAAA;IACAA,OAAA,CAAA,eAAA,CAAA;;;;;;;;;;;;;;;;ICbA,IAAA+lB,MAAA,GAAA/lB,OAAA,CAAA,YAAA,CAAA;IAAAwB,MAAA,CAAAC,IAAA,CAAAskB,MAAA,CAAA,CAAAta,OAAA,CAAA,UAAA/J,GAAA,EAAA;MAAA,IAAAA,GAAA,KAAA,SAAA,IAAAA,GAAA,KAAA,YAAA,EAAA;MAAA,IAAAA,GAAA,IAAAC,OAAA,IAAAA,OAAA,CAAAD,GAAA,CAAA,KAAAqkB,MAAA,CAAArkB,GAAA,CAAA,EAAA;MAAAF,MAAA,CAAAwkB,cAAA,CAAArkB,OAAA,EAAAD,GAAA,EAAA;QAAAukB,UAAA,EAAA,IAAA;QAAAza,GAAA,EAAA,SAAA,CAAA,EAAA;UAAA,OAAAua,MAAA,CAAArkB,GAAA,CAAA;QAAA;MAAA,CAAA,CAAA;IAAA,CAAA,CAAA;;;;;;;ICAA,IAAAwkB,eAAA,GAAAlmB,OAAA,CAAA,iBAAA,CAAA;IAEA;IACA,CAAA,CAAA,EAAA+d,eAAAA,CAAAA,gBAAgB,EAAC,CAAC;;IAElB;IACA7d,IAAI,CAAC0J,gBAAgB,CAAC,SAAS,EAAE,UAAUC,KAAK,EAAE;MAC9C;MACA,IAAIA,KAAK,CAACM,IAAI,CAACgc,MAAM,KAAK,aAAa,EAAE;QACrCjmB,IAAI,CAACkmB,WAAW,CAAC,CAAC;MACtB;IACJ,CAAC,CAAC","file":"sw.js","sourceRoot":"../demo","sourcesContent":["\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:core:6.1.5'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst logger = (process.env.NODE_ENV === 'production' ? null : (() => {\n    // Don't overwrite this value if it's already set.\n    // See https://github.com/GoogleChrome/workbox/pull/2284#issuecomment-560470923\n    if (!('__WB_DISABLE_DEV_LOGS' in self)) {\n        self.__WB_DISABLE_DEV_LOGS = false;\n    }\n    let inGroup = false;\n    const methodToColorMap = {\n        debug: `#7f8c8d`,\n        log: `#2ecc71`,\n        warn: `#f39c12`,\n        error: `#c0392b`,\n        groupCollapsed: `#3498db`,\n        groupEnd: null,\n    };\n    const print = function (method, args) {\n        if (self.__WB_DISABLE_DEV_LOGS) {\n            return;\n        }\n        if (method === 'groupCollapsed') {\n            // Safari doesn't print all console.groupCollapsed() arguments:\n            // https://bugs.webkit.org/show_bug.cgi?id=182754\n            if (/^((?!chrome|android).)*safari/i.test(navigator.userAgent)) {\n                console[method](...args);\n                return;\n            }\n        }\n        const styles = [\n            `background: ${methodToColorMap[method]}`,\n            `border-radius: 0.5em`,\n            `color: white`,\n            `font-weight: bold`,\n            `padding: 2px 0.5em`,\n        ];\n        // When in a group, the workbox prefix is not displayed.\n        const logPrefix = inGroup ? [] : ['%cworkbox', styles.join(';')];\n        console[method](...logPrefix, ...args);\n        if (method === 'groupCollapsed') {\n            inGroup = true;\n        }\n        if (method === 'groupEnd') {\n            inGroup = false;\n        }\n    };\n    const api = {};\n    const loggerMethods = Object.keys(methodToColorMap);\n    for (const key of loggerMethods) {\n        const method = key;\n        api[method] = (...args) => {\n            print(method, args);\n        };\n    }\n    return api;\n})());\nexport { logger };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../../_version.js';\nexport const messages = {\n    'invalid-value': ({ paramName, validValueDescription, value }) => {\n        if (!paramName || !validValueDescription) {\n            throw new Error(`Unexpected input to 'invalid-value' error.`);\n        }\n        return `The '${paramName}' parameter was given a value with an ` +\n            `unexpected value. ${validValueDescription} Received a value of ` +\n            `${JSON.stringify(value)}.`;\n    },\n    'not-an-array': ({ moduleName, className, funcName, paramName }) => {\n        if (!moduleName || !className || !funcName || !paramName) {\n            throw new Error(`Unexpected input to 'not-an-array' error.`);\n        }\n        return `The parameter '${paramName}' passed into ` +\n            `'${moduleName}.${className}.${funcName}()' must be an array.`;\n    },\n    'incorrect-type': ({ expectedType, paramName, moduleName, className, funcName }) => {\n        if (!expectedType || !paramName || !moduleName || !funcName) {\n            throw new Error(`Unexpected input to 'incorrect-type' error.`);\n        }\n        return `The parameter '${paramName}' passed into ` +\n            `'${moduleName}.${className ? (className + '.') : ''}` +\n            `${funcName}()' must be of type ${expectedType}.`;\n    },\n    'incorrect-class': ({ expectedClass, paramName, moduleName, className, funcName, isReturnValueProblem }) => {\n        if (!expectedClass || !moduleName || !funcName) {\n            throw new Error(`Unexpected input to 'incorrect-class' error.`);\n        }\n        if (isReturnValueProblem) {\n            return `The return value from ` +\n                `'${moduleName}.${className ? (className + '.') : ''}${funcName}()' ` +\n                `must be an instance of class ${expectedClass.name}.`;\n        }\n        return `The parameter '${paramName}' passed into ` +\n            `'${moduleName}.${className ? (className + '.') : ''}${funcName}()' ` +\n            `must be an instance of class ${expectedClass.name}.`;\n    },\n    'missing-a-method': ({ expectedMethod, paramName, moduleName, className, funcName }) => {\n        if (!expectedMethod || !paramName || !moduleName || !className\n            || !funcName) {\n            throw new Error(`Unexpected input to 'missing-a-method' error.`);\n        }\n        return `${moduleName}.${className}.${funcName}() expected the ` +\n            `'${paramName}' parameter to expose a '${expectedMethod}' method.`;\n    },\n    'add-to-cache-list-unexpected-type': ({ entry }) => {\n        return `An unexpected entry was passed to ` +\n            `'workbox-precaching.PrecacheController.addToCacheList()' The entry ` +\n            `'${JSON.stringify(entry)}' isn't supported. You must supply an array of ` +\n            `strings with one or more characters, objects with a url property or ` +\n            `Request objects.`;\n    },\n    'add-to-cache-list-conflicting-entries': ({ firstEntry, secondEntry }) => {\n        if (!firstEntry || !secondEntry) {\n            throw new Error(`Unexpected input to ` +\n                `'add-to-cache-list-duplicate-entries' error.`);\n        }\n        return `Two of the entries passed to ` +\n            `'workbox-precaching.PrecacheController.addToCacheList()' had the URL ` +\n            `${firstEntry._entryId} but different revision details. Workbox is ` +\n            `unable to cache and version the asset correctly. Please remove one ` +\n            `of the entries.`;\n    },\n    'plugin-error-request-will-fetch': ({ thrownError }) => {\n        if (!thrownError) {\n            throw new Error(`Unexpected input to ` +\n                `'plugin-error-request-will-fetch', error.`);\n        }\n        return `An error was thrown by a plugins 'requestWillFetch()' method. ` +\n            `The thrown error message was: '${thrownError.message}'.`;\n    },\n    'invalid-cache-name': ({ cacheNameId, value }) => {\n        if (!cacheNameId) {\n            throw new Error(`Expected a 'cacheNameId' for error 'invalid-cache-name'`);\n        }\n        return `You must provide a name containing at least one character for ` +\n            `setCacheDetails({${cacheNameId}: '...'}). Received a value of ` +\n            `'${JSON.stringify(value)}'`;\n    },\n    'unregister-route-but-not-found-with-method': ({ method }) => {\n        if (!method) {\n            throw new Error(`Unexpected input to ` +\n                `'unregister-route-but-not-found-with-method' error.`);\n        }\n        return `The route you're trying to unregister was not  previously ` +\n            `registered for the method type '${method}'.`;\n    },\n    'unregister-route-route-not-registered': () => {\n        return `The route you're trying to unregister was not previously ` +\n            `registered.`;\n    },\n    'queue-replay-failed': ({ name }) => {\n        return `Replaying the background sync queue '${name}' failed.`;\n    },\n    'duplicate-queue-name': ({ name }) => {\n        return `The Queue name '${name}' is already being used. ` +\n            `All instances of backgroundSync.Queue must be given unique names.`;\n    },\n    'expired-test-without-max-age': ({ methodName, paramName }) => {\n        return `The '${methodName}()' method can only be used when the ` +\n            `'${paramName}' is used in the constructor.`;\n    },\n    'unsupported-route-type': ({ moduleName, className, funcName, paramName }) => {\n        return `The supplied '${paramName}' parameter was an unsupported type. ` +\n            `Please check the docs for ${moduleName}.${className}.${funcName} for ` +\n            `valid input types.`;\n    },\n    'not-array-of-class': ({ value, expectedClass, moduleName, className, funcName, paramName }) => {\n        return `The supplied '${paramName}' parameter must be an array of ` +\n            `'${expectedClass}' objects. Received '${JSON.stringify(value)},'. ` +\n            `Please check the call to ${moduleName}.${className}.${funcName}() ` +\n            `to fix the issue.`;\n    },\n    'max-entries-or-age-required': ({ moduleName, className, funcName }) => {\n        return `You must define either config.maxEntries or config.maxAgeSeconds` +\n            `in ${moduleName}.${className}.${funcName}`;\n    },\n    'statuses-or-headers-required': ({ moduleName, className, funcName }) => {\n        return `You must define either config.statuses or config.headers` +\n            `in ${moduleName}.${className}.${funcName}`;\n    },\n    'invalid-string': ({ moduleName, funcName, paramName }) => {\n        if (!paramName || !moduleName || !funcName) {\n            throw new Error(`Unexpected input to 'invalid-string' error.`);\n        }\n        return `When using strings, the '${paramName}' parameter must start with ` +\n            `'http' (for cross-origin matches) or '/' (for same-origin matches). ` +\n            `Please see the docs for ${moduleName}.${funcName}() for ` +\n            `more info.`;\n    },\n    'channel-name-required': () => {\n        return `You must provide a channelName to construct a ` +\n            `BroadcastCacheUpdate instance.`;\n    },\n    'invalid-responses-are-same-args': () => {\n        return `The arguments passed into responsesAreSame() appear to be ` +\n            `invalid. Please ensure valid Responses are used.`;\n    },\n    'expire-custom-caches-only': () => {\n        return `You must provide a 'cacheName' property when using the ` +\n            `expiration plugin with a runtime caching strategy.`;\n    },\n    'unit-must-be-bytes': ({ normalizedRangeHeader }) => {\n        if (!normalizedRangeHeader) {\n            throw new Error(`Unexpected input to 'unit-must-be-bytes' error.`);\n        }\n        return `The 'unit' portion of the Range header must be set to 'bytes'. ` +\n            `The Range header provided was \"${normalizedRangeHeader}\"`;\n    },\n    'single-range-only': ({ normalizedRangeHeader }) => {\n        if (!normalizedRangeHeader) {\n            throw new Error(`Unexpected input to 'single-range-only' error.`);\n        }\n        return `Multiple ranges are not supported. Please use a  single start ` +\n            `value, and optional end value. The Range header provided was ` +\n            `\"${normalizedRangeHeader}\"`;\n    },\n    'invalid-range-values': ({ normalizedRangeHeader }) => {\n        if (!normalizedRangeHeader) {\n            throw new Error(`Unexpected input to 'invalid-range-values' error.`);\n        }\n        return `The Range header is missing both start and end values. At least ` +\n            `one of those values is needed. The Range header provided was ` +\n            `\"${normalizedRangeHeader}\"`;\n    },\n    'no-range-header': () => {\n        return `No Range header was found in the Request provided.`;\n    },\n    'range-not-satisfiable': ({ size, start, end }) => {\n        return `The start (${start}) and end (${end}) values in the Range are ` +\n            `not satisfiable by the cached response, which is ${size} bytes.`;\n    },\n    'attempt-to-cache-non-get-request': ({ url, method }) => {\n        return `Unable to cache '${url}' because it is a '${method}' request and ` +\n            `only 'GET' requests can be cached.`;\n    },\n    'cache-put-with-no-response': ({ url }) => {\n        return `There was an attempt to cache '${url}' but the response was not ` +\n            `defined.`;\n    },\n    'no-response': ({ url, error }) => {\n        let message = `The strategy could not generate a response for '${url}'.`;\n        if (error) {\n            message += ` The underlying error is ${error}.`;\n        }\n        return message;\n    },\n    'bad-precaching-response': ({ url, status }) => {\n        return `The precaching request for '${url}' failed` +\n            (status ? ` with an HTTP status of ${status}.` : `.`);\n    },\n    'non-precached-url': ({ url }) => {\n        return `createHandlerBoundToURL('${url}') was called, but that URL is ` +\n            `not precached. Please pass in a URL that is precached instead.`;\n    },\n    'add-to-cache-list-conflicting-integrities': ({ url }) => {\n        return `Two of the entries passed to ` +\n            `'workbox-precaching.PrecacheController.addToCacheList()' had the URL ` +\n            `${url} with different integrity values. Please remove one of them.`;\n    },\n    'missing-precache-entry': ({ cacheName, url }) => {\n        return `Unable to find a precached response in ${cacheName} for ${url}.`;\n    },\n    'cross-origin-copy-response': ({ origin }) => {\n        return `workbox-core.copyResponse() can only be used with same-origin ` +\n            `responses. It was passed a response with origin ${origin}.`;\n    },\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { messages } from './messages.js';\nimport '../../_version.js';\nconst fallback = (code, ...args) => {\n    let msg = code;\n    if (args.length > 0) {\n        msg += ` :: ${JSON.stringify(args)}`;\n    }\n    return msg;\n};\nconst generatorFunction = (code, details = {}) => {\n    const message = messages[code];\n    if (!message) {\n        throw new Error(`Unable to find message for code '${code}'.`);\n    }\n    return message(details);\n};\nexport const messageGenerator = (process.env.NODE_ENV === 'production') ?\n    fallback : generatorFunction;\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { messageGenerator } from '../models/messages/messageGenerator.js';\nimport '../_version.js';\n/**\n * Workbox errors should be thrown with this class.\n * This allows use to ensure the type easily in tests,\n * helps developers identify errors from workbox\n * easily and allows use to optimise error\n * messages correctly.\n *\n * @private\n */\nclass WorkboxError extends Error {\n    /**\n     *\n     * @param {string} errorCode The error code that\n     * identifies this particular error.\n     * @param {Object=} details Any relevant arguments\n     * that will help developers identify issues should\n     * be added as a key on the context object.\n     */\n    constructor(errorCode, details) {\n        const message = messageGenerator(errorCode, details);\n        super(message);\n        this.name = errorCode;\n        this.details = details;\n    }\n}\nexport { WorkboxError };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { WorkboxError } from '../_private/WorkboxError.js';\nimport '../_version.js';\n/*\n * This method throws if the supplied value is not an array.\n * The destructed values are required to produce a meaningful error for users.\n * The destructed and restructured object is so it's clear what is\n * needed.\n */\nconst isArray = (value, details) => {\n    if (!Array.isArray(value)) {\n        throw new WorkboxError('not-an-array', details);\n    }\n};\nconst hasMethod = (object, expectedMethod, details) => {\n    const type = typeof object[expectedMethod];\n    if (type !== 'function') {\n        details['expectedMethod'] = expectedMethod;\n        throw new WorkboxError('missing-a-method', details);\n    }\n};\nconst isType = (object, expectedType, details) => {\n    if (typeof object !== expectedType) {\n        details['expectedType'] = expectedType;\n        throw new WorkboxError('incorrect-type', details);\n    }\n};\nconst isInstance = (object, expectedClass, details) => {\n    if (!(object instanceof expectedClass)) {\n        details['expectedClass'] = expectedClass;\n        throw new WorkboxError('incorrect-class', details);\n    }\n};\nconst isOneOf = (value, validValues, details) => {\n    if (!validValues.includes(value)) {\n        details['validValueDescription'] =\n            `Valid values are ${JSON.stringify(validValues)}.`;\n        throw new WorkboxError('invalid-value', details);\n    }\n};\nconst isArrayOfClass = (value, expectedClass, details) => {\n    const error = new WorkboxError('not-array-of-class', details);\n    if (!Array.isArray(value)) {\n        throw error;\n    }\n    for (const item of value) {\n        if (!(item instanceof expectedClass)) {\n            throw error;\n        }\n    }\n};\nconst finalAssertExports = process.env.NODE_ENV === 'production' ? null : {\n    hasMethod,\n    isArray,\n    isInstance,\n    isOneOf,\n    isType,\n    isArrayOfClass,\n};\nexport { finalAssertExports as assert };\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:routing:6.1.5'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * The default HTTP method, 'GET', used when there's no specific method\n * configured for a route.\n *\n * @type {string}\n *\n * @private\n */\nexport const defaultMethod = 'GET';\n/**\n * The list of valid HTTP methods associated with requests that could be routed.\n *\n * @type {Array<string>}\n *\n * @private\n */\nexport const validMethods = [\n    'DELETE',\n    'GET',\n    'HEAD',\n    'PATCH',\n    'POST',\n    'PUT',\n];\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport '../_version.js';\n/**\n * @param {function()|Object} handler Either a function, or an object with a\n * 'handle' method.\n * @return {Object} An object with a handle method.\n *\n * @private\n */\nexport const normalizeHandler = (handler) => {\n    if (handler && typeof handler === 'object') {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.hasMethod(handler, 'handle', {\n                moduleName: 'workbox-routing',\n                className: 'Route',\n                funcName: 'constructor',\n                paramName: 'handler',\n            });\n        }\n        return handler;\n    }\n    else {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(handler, 'function', {\n                moduleName: 'workbox-routing',\n                className: 'Route',\n                funcName: 'constructor',\n                paramName: 'handler',\n            });\n        }\n        return { handle: handler };\n    }\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { defaultMethod, validMethods } from './utils/constants.js';\nimport { normalizeHandler } from './utils/normalizeHandler.js';\nimport './_version.js';\n/**\n * A `Route` consists of a pair of callback functions, \"match\" and \"handler\".\n * The \"match\" callback determine if a route should be used to \"handle\" a\n * request by returning a non-falsy value if it can. The \"handler\" callback\n * is called when there is a match and should return a Promise that resolves\n * to a `Response`.\n *\n * @memberof module:workbox-routing\n */\nclass Route {\n    /**\n     * Constructor for Route class.\n     *\n     * @param {module:workbox-routing~matchCallback} match\n     * A callback function that determines whether the route matches a given\n     * `fetch` event by returning a non-falsy value.\n     * @param {module:workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resolving to a Response.\n     * @param {string} [method='GET'] The HTTP method to match the Route\n     * against.\n     */\n    constructor(match, handler, method = defaultMethod) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(match, 'function', {\n                moduleName: 'workbox-routing',\n                className: 'Route',\n                funcName: 'constructor',\n                paramName: 'match',\n            });\n            if (method) {\n                assert.isOneOf(method, validMethods, { paramName: 'method' });\n            }\n        }\n        // These values are referenced directly by Router so cannot be\n        // altered by minificaton.\n        this.handler = normalizeHandler(handler);\n        this.match = match;\n        this.method = method;\n    }\n    /**\n     *\n     * @param {module:workbox-routing-handlerCallback} handler A callback\n     * function that returns a Promise resolving to a Response\n     */\n    setCatchHandler(handler) {\n        this.catchHandler = normalizeHandler(handler);\n    }\n}\nexport { Route };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { Route } from './Route.js';\nimport './_version.js';\n/**\n * RegExpRoute makes it easy to create a regular expression based\n * [Route]{@link module:workbox-routing.Route}.\n *\n * For same-origin requests the RegExp only needs to match part of the URL. For\n * requests against third-party servers, you must define a RegExp that matches\n * the start of the URL.\n *\n * [See the module docs for info.]{@link https://developers.google.com/web/tools/workbox/modules/workbox-routing}\n *\n * @memberof module:workbox-routing\n * @extends module:workbox-routing.Route\n */\nclass RegExpRoute extends Route {\n    /**\n     * If the regular expression contains\n     * [capture groups]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp#grouping-back-references},\n     * the captured values will be passed to the\n     * [handler's]{@link module:workbox-routing~handlerCallback} `params`\n     * argument.\n     *\n     * @param {RegExp} regExp The regular expression to match against URLs.\n     * @param {module:workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     * @param {string} [method='GET'] The HTTP method to match the Route\n     * against.\n     */\n    constructor(regExp, handler, method) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(regExp, RegExp, {\n                moduleName: 'workbox-routing',\n                className: 'RegExpRoute',\n                funcName: 'constructor',\n                paramName: 'pattern',\n            });\n        }\n        const match = ({ url }) => {\n            const result = regExp.exec(url.href);\n            // Return immediately if there's no match.\n            if (!result) {\n                return;\n            }\n            // Require that the match start at the first character in the URL string\n            // if it's a cross-origin request.\n            // See https://github.com/GoogleChrome/workbox/issues/281 for the context\n            // behind this behavior.\n            if ((url.origin !== location.origin) && (result.index !== 0)) {\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.debug(`The regular expression '${regExp}' only partially matched ` +\n                        `against the cross-origin URL '${url}'. RegExpRoute's will only ` +\n                        `handle cross-origin requests if they match the entire URL.`);\n                }\n                return;\n            }\n            // If the route matches, but there aren't any capture groups defined, then\n            // this will return [], which is truthy and therefore sufficient to\n            // indicate a match.\n            // If there are capture groups, then it will return their values.\n            return result.slice(1);\n        };\n        super(match, handler, method);\n    }\n}\nexport { RegExpRoute };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst getFriendlyURL = (url) => {\n    const urlObj = new URL(String(url), location.href);\n    // See https://github.com/GoogleChrome/workbox/issues/2323\n    // We want to include everything, except for the origin if it's same-origin.\n    return urlObj.href.replace(new RegExp(`^${location.origin}`), '');\n};\nexport { getFriendlyURL };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { defaultMethod } from './utils/constants.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { normalizeHandler } from './utils/normalizeHandler.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport './_version.js';\n/**\n * The Router can be used to process a FetchEvent through one or more\n * [Routes]{@link module:workbox-routing.Route} responding  with a Request if\n * a matching route exists.\n *\n * If no route matches a given a request, the Router will use a \"default\"\n * handler if one is defined.\n *\n * Should the matching Route throw an error, the Router will use a \"catch\"\n * handler if one is defined to gracefully deal with issues and respond with a\n * Request.\n *\n * If a request matches multiple routes, the **earliest** registered route will\n * be used to respond to the request.\n *\n * @memberof module:workbox-routing\n */\nclass Router {\n    /**\n     * Initializes a new Router.\n     */\n    constructor() {\n        this._routes = new Map();\n        this._defaultHandlerMap = new Map();\n    }\n    /**\n     * @return {Map<string, Array<module:workbox-routing.Route>>} routes A `Map` of HTTP\n     * method name ('GET', etc.) to an array of all the corresponding `Route`\n     * instances that are registered.\n     */\n    get routes() {\n        return this._routes;\n    }\n    /**\n     * Adds a fetch event listener to respond to events when a route matches\n     * the event's request.\n     */\n    addFetchListener() {\n        // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\n        self.addEventListener('fetch', ((event) => {\n            const { request } = event;\n            const responsePromise = this.handleRequest({ request, event });\n            if (responsePromise) {\n                event.respondWith(responsePromise);\n            }\n        }));\n    }\n    /**\n     * Adds a message event listener for URLs to cache from the window.\n     * This is useful to cache resources loaded on the page prior to when the\n     * service worker started controlling it.\n     *\n     * The format of the message data sent from the window should be as follows.\n     * Where the `urlsToCache` array may consist of URL strings or an array of\n     * URL string + `requestInit` object (the same as you'd pass to `fetch()`).\n     *\n     * ```\n     * {\n     *   type: 'CACHE_URLS',\n     *   payload: {\n     *     urlsToCache: [\n     *       './script1.js',\n     *       './script2.js',\n     *       ['./script3.js', {mode: 'no-cors'}],\n     *     ],\n     *   },\n     * }\n     * ```\n     */\n    addCacheListener() {\n        // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\n        self.addEventListener('message', ((event) => {\n            if (event.data && event.data.type === 'CACHE_URLS') {\n                const { payload } = event.data;\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.debug(`Caching URLs from the window`, payload.urlsToCache);\n                }\n                const requestPromises = Promise.all(payload.urlsToCache.map((entry) => {\n                    if (typeof entry === 'string') {\n                        entry = [entry];\n                    }\n                    const request = new Request(...entry);\n                    return this.handleRequest({ request, event });\n                    // TODO(philipwalton): TypeScript errors without this typecast for\n                    // some reason (probably a bug). The real type here should work but\n                    // doesn't: `Array<Promise<Response> | undefined>`.\n                })); // TypeScript\n                event.waitUntil(requestPromises);\n                // If a MessageChannel was used, reply to the message on success.\n                if (event.ports && event.ports[0]) {\n                    requestPromises.then(() => event.ports[0].postMessage(true));\n                }\n            }\n        }));\n    }\n    /**\n     * Apply the routing rules to a FetchEvent object to get a Response from an\n     * appropriate Route's handler.\n     *\n     * @param {Object} options\n     * @param {Request} options.request The request to handle.\n     * @param {ExtendableEvent} options.event The event that triggered the\n     *     request.\n     * @return {Promise<Response>|undefined} A promise is returned if a\n     *     registered route can handle the request. If there is no matching\n     *     route and there's no `defaultHandler`, `undefined` is returned.\n     */\n    handleRequest({ request, event }) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'handleRequest',\n                paramName: 'options.request',\n            });\n        }\n        const url = new URL(request.url, location.href);\n        if (!url.protocol.startsWith('http')) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`Workbox Router only supports URLs that start with 'http'.`);\n            }\n            return;\n        }\n        const sameOrigin = url.origin === location.origin;\n        const { params, route } = this.findMatchingRoute({\n            event,\n            request,\n            sameOrigin,\n            url,\n        });\n        let handler = route && route.handler;\n        const debugMessages = [];\n        if (process.env.NODE_ENV !== 'production') {\n            if (handler) {\n                debugMessages.push([\n                    `Found a route to handle this request:`, route,\n                ]);\n                if (params) {\n                    debugMessages.push([\n                        `Passing the following params to the route's handler:`, params,\n                    ]);\n                }\n            }\n        }\n        // If we don't have a handler because there was no matching route, then\n        // fall back to defaultHandler if that's defined.\n        const method = request.method;\n        if (!handler && this._defaultHandlerMap.has(method)) {\n            if (process.env.NODE_ENV !== 'production') {\n                debugMessages.push(`Failed to find a matching route. Falling ` +\n                    `back to the default handler for ${method}.`);\n            }\n            handler = this._defaultHandlerMap.get(method);\n        }\n        if (!handler) {\n            if (process.env.NODE_ENV !== 'production') {\n                // No handler so Workbox will do nothing. If logs is set of debug\n                // i.e. verbose, we should print out this information.\n                logger.debug(`No route found for: ${getFriendlyURL(url)}`);\n            }\n            return;\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            // We have a handler, meaning Workbox is going to handle the route.\n            // print the routing details to the console.\n            logger.groupCollapsed(`Router is responding to: ${getFriendlyURL(url)}`);\n            debugMessages.forEach((msg) => {\n                if (Array.isArray(msg)) {\n                    logger.log(...msg);\n                }\n                else {\n                    logger.log(msg);\n                }\n            });\n            logger.groupEnd();\n        }\n        // Wrap in try and catch in case the handle method throws a synchronous\n        // error. It should still callback to the catch handler.\n        let responsePromise;\n        try {\n            responsePromise = handler.handle({ url, request, event, params });\n        }\n        catch (err) {\n            responsePromise = Promise.reject(err);\n        }\n        // Get route's catch handler, if it exists\n        const catchHandler = route && route.catchHandler;\n        if (responsePromise instanceof Promise && (this._catchHandler || catchHandler)) {\n            responsePromise = responsePromise.catch(async (err) => {\n                // If there's a route catch handler, process that first\n                if (catchHandler) {\n                    if (process.env.NODE_ENV !== 'production') {\n                        // Still include URL here as it will be async from the console group\n                        // and may not make sense without the URL\n                        logger.groupCollapsed(`Error thrown when responding to: ` +\n                            ` ${getFriendlyURL(url)}. Falling back to route's Catch Handler.`);\n                        logger.error(`Error thrown by:`, route);\n                        logger.error(err);\n                        logger.groupEnd();\n                    }\n                    try {\n                        return await catchHandler.handle({ url, request, event, params });\n                    }\n                    catch (catchErr) {\n                        err = catchErr;\n                    }\n                }\n                if (this._catchHandler) {\n                    if (process.env.NODE_ENV !== 'production') {\n                        // Still include URL here as it will be async from the console group\n                        // and may not make sense without the URL\n                        logger.groupCollapsed(`Error thrown when responding to: ` +\n                            ` ${getFriendlyURL(url)}. Falling back to global Catch Handler.`);\n                        logger.error(`Error thrown by:`, route);\n                        logger.error(err);\n                        logger.groupEnd();\n                    }\n                    return this._catchHandler.handle({ url, request, event });\n                }\n                throw err;\n            });\n        }\n        return responsePromise;\n    }\n    /**\n     * Checks a request and URL (and optionally an event) against the list of\n     * registered routes, and if there's a match, returns the corresponding\n     * route along with any params generated by the match.\n     *\n     * @param {Object} options\n     * @param {URL} options.url\n     * @param {boolean} options.sameOrigin The result of comparing `url.origin`\n     *     against the current origin.\n     * @param {Request} options.request The request to match.\n     * @param {Event} options.event The corresponding event.\n     * @return {Object} An object with `route` and `params` properties.\n     *     They are populated if a matching route was found or `undefined`\n     *     otherwise.\n     */\n    findMatchingRoute({ url, sameOrigin, request, event }) {\n        const routes = this._routes.get(request.method) || [];\n        for (const route of routes) {\n            let params;\n            const matchResult = route.match({ url, sameOrigin, request, event });\n            if (matchResult) {\n                if (process.env.NODE_ENV !== 'production') {\n                    // Warn developers that using an async matchCallback is almost always\n                    // not the right thing to do. \n                    if (matchResult instanceof Promise) {\n                        logger.warn(`While routing ${getFriendlyURL(url)}, an async ` +\n                            `matchCallback function was used. Please convert the ` +\n                            `following route to use a synchronous matchCallback function:`, route);\n                    }\n                }\n                // See https://github.com/GoogleChrome/workbox/issues/2079\n                params = matchResult;\n                if (Array.isArray(matchResult) && matchResult.length === 0) {\n                    // Instead of passing an empty array in as params, use undefined.\n                    params = undefined;\n                }\n                else if ((matchResult.constructor === Object &&\n                    Object.keys(matchResult).length === 0)) {\n                    // Instead of passing an empty object in as params, use undefined.\n                    params = undefined;\n                }\n                else if (typeof matchResult === 'boolean') {\n                    // For the boolean value true (rather than just something truth-y),\n                    // don't set params.\n                    // See https://github.com/GoogleChrome/workbox/pull/2134#issuecomment-513924353\n                    params = undefined;\n                }\n                // Return early if have a match.\n                return { route, params };\n            }\n        }\n        // If no match was found above, return and empty object.\n        return {};\n    }\n    /**\n     * Define a default `handler` that's called when no routes explicitly\n     * match the incoming request.\n     *\n     * Each HTTP method ('GET', 'POST', etc.) gets its own default handler.\n     *\n     * Without a default handler, unmatched requests will go against the\n     * network as if there were no service worker present.\n     *\n     * @param {module:workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     * @param {string} [method='GET'] The HTTP method to associate with this\n     * default handler. Each method has its own default.\n     */\n    setDefaultHandler(handler, method = defaultMethod) {\n        this._defaultHandlerMap.set(method, normalizeHandler(handler));\n    }\n    /**\n     * If a Route throws an error while handling a request, this `handler`\n     * will be called and given a chance to provide a response.\n     *\n     * @param {module:workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     */\n    setCatchHandler(handler) {\n        this._catchHandler = normalizeHandler(handler);\n    }\n    /**\n     * Registers a route with the router.\n     *\n     * @param {module:workbox-routing.Route} route The route to register.\n     */\n    registerRoute(route) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(route, 'object', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route',\n            });\n            assert.hasMethod(route, 'match', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route',\n            });\n            assert.isType(route.handler, 'object', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route',\n            });\n            assert.hasMethod(route.handler, 'handle', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route.handler',\n            });\n            assert.isType(route.method, 'string', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route.method',\n            });\n        }\n        if (!this._routes.has(route.method)) {\n            this._routes.set(route.method, []);\n        }\n        // Give precedence to all of the earlier routes by adding this additional\n        // route to the end of the array.\n        this._routes.get(route.method).push(route);\n    }\n    /**\n     * Unregisters a route with the router.\n     *\n     * @param {module:workbox-routing.Route} route The route to unregister.\n     */\n    unregisterRoute(route) {\n        if (!this._routes.has(route.method)) {\n            throw new WorkboxError('unregister-route-but-not-found-with-method', {\n                method: route.method,\n            });\n        }\n        const routeIndex = this._routes.get(route.method).indexOf(route);\n        if (routeIndex > -1) {\n            this._routes.get(route.method).splice(routeIndex, 1);\n        }\n        else {\n            throw new WorkboxError('unregister-route-route-not-registered');\n        }\n    }\n}\nexport { Router };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { Router } from '../Router.js';\nimport '../_version.js';\nlet defaultRouter;\n/**\n * Creates a new, singleton Router instance if one does not exist. If one\n * does already exist, that instance is returned.\n *\n * @private\n * @return {Router}\n */\nexport const getOrCreateDefaultRouter = () => {\n    if (!defaultRouter) {\n        defaultRouter = new Router();\n        // The helpers that use the default Router assume these listeners exist.\n        defaultRouter.addFetchListener();\n        defaultRouter.addCacheListener();\n    }\n    return defaultRouter;\n};\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { Route } from './Route.js';\nimport { RegExpRoute } from './RegExpRoute.js';\nimport { getOrCreateDefaultRouter } from './utils/getOrCreateDefaultRouter.js';\nimport './_version.js';\n/**\n * Easily register a RegExp, string, or function with a caching\n * strategy to a singleton Router instance.\n *\n * This method will generate a Route for you if needed and\n * call [registerRoute()]{@link module:workbox-routing.Router#registerRoute}.\n *\n * @param {RegExp|string|module:workbox-routing.Route~matchCallback|module:workbox-routing.Route} capture\n * If the capture param is a `Route`, all other arguments will be ignored.\n * @param {module:workbox-routing~handlerCallback} [handler] A callback\n * function that returns a Promise resulting in a Response. This parameter\n * is required if `capture` is not a `Route` object.\n * @param {string} [method='GET'] The HTTP method to match the Route\n * against.\n * @return {module:workbox-routing.Route} The generated `Route`(Useful for\n * unregistering).\n *\n * @memberof module:workbox-routing\n */\nfunction registerRoute(capture, handler, method) {\n    let route;\n    if (typeof capture === 'string') {\n        const captureUrl = new URL(capture, location.href);\n        if (process.env.NODE_ENV !== 'production') {\n            if (!(capture.startsWith('/') || capture.startsWith('http'))) {\n                throw new WorkboxError('invalid-string', {\n                    moduleName: 'workbox-routing',\n                    funcName: 'registerRoute',\n                    paramName: 'capture',\n                });\n            }\n            // We want to check if Express-style wildcards are in the pathname only.\n            // TODO: Remove this log message in v4.\n            const valueToCheck = capture.startsWith('http') ?\n                captureUrl.pathname : capture;\n            // See https://github.com/pillarjs/path-to-regexp#parameters\n            const wildcards = '[*:?+]';\n            if ((new RegExp(`${wildcards}`)).exec(valueToCheck)) {\n                logger.debug(`The '$capture' parameter contains an Express-style wildcard ` +\n                    `character (${wildcards}). Strings are now always interpreted as ` +\n                    `exact matches; use a RegExp for partial or wildcard matches.`);\n            }\n        }\n        const matchCallback = ({ url }) => {\n            if (process.env.NODE_ENV !== 'production') {\n                if ((url.pathname === captureUrl.pathname) &&\n                    (url.origin !== captureUrl.origin)) {\n                    logger.debug(`${capture} only partially matches the cross-origin URL ` +\n                        `${url}. This route will only handle cross-origin requests ` +\n                        `if they match the entire URL.`);\n                }\n            }\n            return url.href === captureUrl.href;\n        };\n        // If `capture` is a string then `handler` and `method` must be present.\n        route = new Route(matchCallback, handler, method);\n    }\n    else if (capture instanceof RegExp) {\n        // If `capture` is a `RegExp` then `handler` and `method` must be present.\n        route = new RegExpRoute(capture, handler, method);\n    }\n    else if (typeof capture === 'function') {\n        // If `capture` is a function then `handler` and `method` must be present.\n        route = new Route(capture, handler, method);\n    }\n    else if (capture instanceof Route) {\n        route = capture;\n    }\n    else {\n        throw new WorkboxError('unsupported-route-type', {\n            moduleName: 'workbox-routing',\n            funcName: 'registerRoute',\n            paramName: 'capture',\n        });\n    }\n    const defaultRouter = getOrCreateDefaultRouter();\n    defaultRouter.registerRoute(route);\n    return route;\n}\nexport { registerRoute };\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:strategies:6.1.5'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nexport const cacheOkAndOpaquePlugin = {\n    /**\n     * Returns a valid response (to allow caching) if the status is 200 (OK) or\n     * 0 (opaque).\n     *\n     * @param {Object} options\n     * @param {Response} options.response\n     * @return {Response|null}\n     *\n     * @private\n     */\n    cacheWillUpdate: async ({ response }) => {\n        if (response.status === 200 || response.status === 0) {\n            return response;\n        }\n        return null;\n    },\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst _cacheNameDetails = {\n    googleAnalytics: 'googleAnalytics',\n    precache: 'precache-v2',\n    prefix: 'workbox',\n    runtime: 'runtime',\n    suffix: typeof registration !== 'undefined' ? registration.scope : '',\n};\nconst _createCacheName = (cacheName) => {\n    return [_cacheNameDetails.prefix, cacheName, _cacheNameDetails.suffix]\n        .filter((value) => value && value.length > 0)\n        .join('-');\n};\nconst eachCacheNameDetail = (fn) => {\n    for (const key of Object.keys(_cacheNameDetails)) {\n        fn(key);\n    }\n};\nexport const cacheNames = {\n    updateDetails: (details) => {\n        eachCacheNameDetail((key) => {\n            if (typeof details[key] === 'string') {\n                _cacheNameDetails[key] = details[key];\n            }\n        });\n    },\n    getGoogleAnalyticsName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.googleAnalytics);\n    },\n    getPrecacheName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.precache);\n    },\n    getPrefix: () => {\n        return _cacheNameDetails.prefix;\n    },\n    getRuntimeName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.runtime);\n    },\n    getSuffix: () => {\n        return _cacheNameDetails.suffix;\n    },\n};\n","/*\n  Copyright 2020 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nfunction stripParams(fullURL, ignoreParams) {\n    const strippedURL = new URL(fullURL);\n    for (const param of ignoreParams) {\n        strippedURL.searchParams.delete(param);\n    }\n    return strippedURL.href;\n}\n/**\n * Matches an item in the cache, ignoring specific URL params. This is similar\n * to the `ignoreSearch` option, but it allows you to ignore just specific\n * params (while continuing to match on the others).\n *\n * @private\n * @param {Cache} cache\n * @param {Request} request\n * @param {Object} matchOptions\n * @param {Array<string>} ignoreParams\n * @return {Promise<Response|undefined>}\n */\nasync function cacheMatchIgnoreParams(cache, request, ignoreParams, matchOptions) {\n    const strippedRequestURL = stripParams(request.url, ignoreParams);\n    // If the request doesn't include any ignored params, match as normal.\n    if (request.url === strippedRequestURL) {\n        return cache.match(request, matchOptions);\n    }\n    // Otherwise, match by comparing keys\n    const keysOptions = { ...matchOptions, ignoreSearch: true };\n    const cacheKeys = await cache.keys(request, keysOptions);\n    for (const cacheKey of cacheKeys) {\n        const strippedCacheKeyURL = stripParams(cacheKey.url, ignoreParams);\n        if (strippedRequestURL === strippedCacheKeyURL) {\n            return cache.match(cacheKey, matchOptions);\n        }\n    }\n    return;\n}\nexport { cacheMatchIgnoreParams };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * The Deferred class composes Promises in a way that allows for them to be\n * resolved or rejected from outside the constructor. In most cases promises\n * should be used directly, but Deferreds can be necessary when the logic to\n * resolve a promise must be separate.\n *\n * @private\n */\nclass Deferred {\n    /**\n     * Creates a promise and exposes its resolve and reject functions as methods.\n     */\n    constructor() {\n        this.promise = new Promise((resolve, reject) => {\n            this.resolve = resolve;\n            this.reject = reject;\n        });\n    }\n}\nexport { Deferred };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n// Callbacks to be executed whenever there's a quota error.\nconst quotaErrorCallbacks = new Set();\nexport { quotaErrorCallbacks };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from '../_private/logger.js';\nimport { quotaErrorCallbacks } from '../models/quotaErrorCallbacks.js';\nimport '../_version.js';\n/**\n * Runs all of the callback functions, one at a time sequentially, in the order\n * in which they were registered.\n *\n * @memberof module:workbox-core\n * @private\n */\nasync function executeQuotaErrorCallbacks() {\n    if (process.env.NODE_ENV !== 'production') {\n        logger.log(`About to run ${quotaErrorCallbacks.size} ` +\n            `callbacks to clean up caches.`);\n    }\n    for (const callback of quotaErrorCallbacks) {\n        await callback();\n        if (process.env.NODE_ENV !== 'production') {\n            logger.log(callback, 'is complete.');\n        }\n    }\n    if (process.env.NODE_ENV !== 'production') {\n        logger.log('Finished running callbacks.');\n    }\n}\nexport { executeQuotaErrorCallbacks };\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * Returns a promise that resolves and the passed number of milliseconds.\n * This utility is an async/await-friendly version of `setTimeout`.\n *\n * @param {number} ms\n * @return {Promise}\n * @private\n */\nexport function timeout(ms) {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n}\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { cacheMatchIgnoreParams } from 'workbox-core/_private/cacheMatchIgnoreParams.js';\nimport { Deferred } from 'workbox-core/_private/Deferred.js';\nimport { executeQuotaErrorCallbacks } from 'workbox-core/_private/executeQuotaErrorCallbacks.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { timeout } from 'workbox-core/_private/timeout.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport './_version.js';\nfunction toRequest(input) {\n    return (typeof input === 'string') ? new Request(input) : input;\n}\n/**\n * A class created every time a Strategy instance instance calls\n * [handle()]{@link module:workbox-strategies.Strategy~handle} or\n * [handleAll()]{@link module:workbox-strategies.Strategy~handleAll} that wraps all fetch and\n * cache actions around plugin callbacks and keeps track of when the strategy\n * is \"done\" (i.e. all added `event.waitUntil()` promises have resolved).\n *\n * @memberof module:workbox-strategies\n */\nclass StrategyHandler {\n    /**\n     * Creates a new instance associated with the passed strategy and event\n     * that's handling the request.\n     *\n     * The constructor also initializes the state that will be passed to each of\n     * the plugins handling this request.\n     *\n     * @param {module:workbox-strategies.Strategy} strategy\n     * @param {Object} options\n     * @param {Request|string} options.request A request to run this strategy for.\n     * @param {ExtendableEvent} options.event The event associated with the\n     *     request.\n     * @param {URL} [options.url]\n     * @param {*} [options.params]\n     *     [match callback]{@link module:workbox-routing~matchCallback},\n     *     (if applicable).\n     */\n    constructor(strategy, options) {\n        this._cacheKeys = {};\n        /**\n         * The request the strategy is performing (passed to the strategy's\n         * `handle()` or `handleAll()` method).\n         * @name request\n         * @instance\n         * @type {Request}\n         * @memberof module:workbox-strategies.StrategyHandler\n         */\n        /**\n         * The event associated with this request.\n         * @name event\n         * @instance\n         * @type {ExtendableEvent}\n         * @memberof module:workbox-strategies.StrategyHandler\n         */\n        /**\n         * A `URL` instance of `request.url` (if passed to the strategy's\n         * `handle()` or `handleAll()` method).\n         * Note: the `url` param will be present if the strategy was invoked\n         * from a workbox `Route` object.\n         * @name url\n         * @instance\n         * @type {URL|undefined}\n         * @memberof module:workbox-strategies.StrategyHandler\n         */\n        /**\n         * A `param` value (if passed to the strategy's\n         * `handle()` or `handleAll()` method).\n         * Note: the `param` param will be present if the strategy was invoked\n         * from a workbox `Route` object and the\n         * [match callback]{@link module:workbox-routing~matchCallback} returned\n         * a truthy value (it will be that value).\n         * @name params\n         * @instance\n         * @type {*|undefined}\n         * @memberof module:workbox-strategies.StrategyHandler\n         */\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(options.event, ExtendableEvent, {\n                moduleName: 'workbox-strategies',\n                className: 'StrategyHandler',\n                funcName: 'constructor',\n                paramName: 'options.event',\n            });\n        }\n        Object.assign(this, options);\n        this.event = options.event;\n        this._strategy = strategy;\n        this._handlerDeferred = new Deferred();\n        this._extendLifetimePromises = [];\n        // Copy the plugins list (since it's mutable on the strategy),\n        // so any mutations don't affect this handler instance.\n        this._plugins = [...strategy.plugins];\n        this._pluginStateMap = new Map();\n        for (const plugin of this._plugins) {\n            this._pluginStateMap.set(plugin, {});\n        }\n        this.event.waitUntil(this._handlerDeferred.promise);\n    }\n    /**\n     * Fetches a given request (and invokes any applicable plugin callback\n     * methods) using the `fetchOptions` (for non-navigation requests) and\n     * `plugins` defined on the `Strategy` object.\n     *\n     * The following plugin lifecycle methods are invoked when using this method:\n     * - `requestWillFetch()`\n     * - `fetchDidSucceed()`\n     * - `fetchDidFail()`\n     *\n     * @param {Request|string} input The URL or request to fetch.\n     * @return {Promise<Response>}\n     */\n    async fetch(input) {\n        const { event } = this;\n        let request = toRequest(input);\n        if (request.mode === 'navigate' &&\n            event instanceof FetchEvent &&\n            event.preloadResponse) {\n            const possiblePreloadResponse = await event.preloadResponse;\n            if (possiblePreloadResponse) {\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.log(`Using a preloaded navigation response for ` +\n                        `'${getFriendlyURL(request.url)}'`);\n                }\n                return possiblePreloadResponse;\n            }\n        }\n        // If there is a fetchDidFail plugin, we need to save a clone of the\n        // original request before it's either modified by a requestWillFetch\n        // plugin or before the original request's body is consumed via fetch().\n        const originalRequest = this.hasCallback('fetchDidFail') ?\n            request.clone() : null;\n        try {\n            for (const cb of this.iterateCallbacks('requestWillFetch')) {\n                request = await cb({ request: request.clone(), event });\n            }\n        }\n        catch (err) {\n            throw new WorkboxError('plugin-error-request-will-fetch', {\n                thrownError: err,\n            });\n        }\n        // The request can be altered by plugins with `requestWillFetch` making\n        // the original request (most likely from a `fetch` event) different\n        // from the Request we make. Pass both to `fetchDidFail` to aid debugging.\n        const pluginFilteredRequest = request.clone();\n        try {\n            let fetchResponse;\n            // See https://github.com/GoogleChrome/workbox/issues/1796\n            fetchResponse = await fetch(request, request.mode === 'navigate' ?\n                undefined : this._strategy.fetchOptions);\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`Network request for ` +\n                    `'${getFriendlyURL(request.url)}' returned a response with ` +\n                    `status '${fetchResponse.status}'.`);\n            }\n            for (const callback of this.iterateCallbacks('fetchDidSucceed')) {\n                fetchResponse = await callback({\n                    event,\n                    request: pluginFilteredRequest,\n                    response: fetchResponse,\n                });\n            }\n            return fetchResponse;\n        }\n        catch (error) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.log(`Network request for ` +\n                    `'${getFriendlyURL(request.url)}' threw an error.`, error);\n            }\n            // `originalRequest` will only exist if a `fetchDidFail` callback\n            // is being used (see above).\n            if (originalRequest) {\n                await this.runCallbacks('fetchDidFail', {\n                    error,\n                    event,\n                    originalRequest: originalRequest.clone(),\n                    request: pluginFilteredRequest.clone(),\n                });\n            }\n            throw error;\n        }\n    }\n    /**\n     * Calls `this.fetch()` and (in the background) runs `this.cachePut()` on\n     * the response generated by `this.fetch()`.\n     *\n     * The call to `this.cachePut()` automatically invokes `this.waitUntil()`,\n     * so you do not have to manually call `waitUntil()` on the event.\n     *\n     * @param {Request|string} input The request or URL to fetch and cache.\n     * @return {Promise<Response>}\n     */\n    async fetchAndCachePut(input) {\n        const response = await this.fetch(input);\n        const responseClone = response.clone();\n        this.waitUntil(this.cachePut(input, responseClone));\n        return response;\n    }\n    /**\n     * Matches a request from the cache (and invokes any applicable plugin\n     * callback methods) using the `cacheName`, `matchOptions`, and `plugins`\n     * defined on the strategy object.\n     *\n     * The following plugin lifecycle methods are invoked when using this method:\n     * - cacheKeyWillByUsed()\n     * - cachedResponseWillByUsed()\n     *\n     * @param {Request|string} key The Request or URL to use as the cache key.\n     * @return {Promise<Response|undefined>} A matching response, if found.\n     */\n    async cacheMatch(key) {\n        const request = toRequest(key);\n        let cachedResponse;\n        const { cacheName, matchOptions } = this._strategy;\n        const effectiveRequest = await this.getCacheKey(request, 'read');\n        const multiMatchOptions = { ...matchOptions, ...{ cacheName } };\n        cachedResponse = await caches.match(effectiveRequest, multiMatchOptions);\n        if (process.env.NODE_ENV !== 'production') {\n            if (cachedResponse) {\n                logger.debug(`Found a cached response in '${cacheName}'.`);\n            }\n            else {\n                logger.debug(`No cached response found in '${cacheName}'.`);\n            }\n        }\n        for (const callback of this.iterateCallbacks('cachedResponseWillBeUsed')) {\n            cachedResponse = (await callback({\n                cacheName,\n                matchOptions,\n                cachedResponse,\n                request: effectiveRequest,\n                event: this.event,\n            })) || undefined;\n        }\n        return cachedResponse;\n    }\n    /**\n     * Puts a request/response pair in the cache (and invokes any applicable\n     * plugin callback methods) using the `cacheName` and `plugins` defined on\n     * the strategy object.\n     *\n     * The following plugin lifecycle methods are invoked when using this method:\n     * - cacheKeyWillByUsed()\n     * - cacheWillUpdate()\n     * - cacheDidUpdate()\n     *\n     * @param {Request|string} key The request or URL to use as the cache key.\n     * @param {Response} response The response to cache.\n     * @return {Promise<boolean>} `false` if a cacheWillUpdate caused the response\n     * not be cached, and `true` otherwise.\n     */\n    async cachePut(key, response) {\n        const request = toRequest(key);\n        // Run in the next task to avoid blocking other cache reads.\n        // https://github.com/w3c/ServiceWorker/issues/1397\n        await timeout(0);\n        const effectiveRequest = await this.getCacheKey(request, 'write');\n        if (process.env.NODE_ENV !== 'production') {\n            if (effectiveRequest.method && effectiveRequest.method !== 'GET') {\n                throw new WorkboxError('attempt-to-cache-non-get-request', {\n                    url: getFriendlyURL(effectiveRequest.url),\n                    method: effectiveRequest.method,\n                });\n            }\n        }\n        if (!response) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.error(`Cannot cache non-existent response for ` +\n                    `'${getFriendlyURL(effectiveRequest.url)}'.`);\n            }\n            throw new WorkboxError('cache-put-with-no-response', {\n                url: getFriendlyURL(effectiveRequest.url),\n            });\n        }\n        const responseToCache = await this._ensureResponseSafeToCache(response);\n        if (!responseToCache) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`Response '${getFriendlyURL(effectiveRequest.url)}' ` +\n                    `will not be cached.`, responseToCache);\n            }\n            return false;\n        }\n        const { cacheName, matchOptions } = this._strategy;\n        const cache = await self.caches.open(cacheName);\n        const hasCacheUpdateCallback = this.hasCallback('cacheDidUpdate');\n        const oldResponse = hasCacheUpdateCallback ? await cacheMatchIgnoreParams(\n        // TODO(philipwalton): the `__WB_REVISION__` param is a precaching\n        // feature. Consider into ways to only add this behavior if using\n        // precaching.\n        cache, effectiveRequest.clone(), ['__WB_REVISION__'], matchOptions) :\n            null;\n        if (process.env.NODE_ENV !== 'production') {\n            logger.debug(`Updating the '${cacheName}' cache with a new Response ` +\n                `for ${getFriendlyURL(effectiveRequest.url)}.`);\n        }\n        try {\n            await cache.put(effectiveRequest, hasCacheUpdateCallback ?\n                responseToCache.clone() : responseToCache);\n        }\n        catch (error) {\n            // See https://developer.mozilla.org/en-US/docs/Web/API/DOMException#exception-QuotaExceededError\n            if (error.name === 'QuotaExceededError') {\n                await executeQuotaErrorCallbacks();\n            }\n            throw error;\n        }\n        for (const callback of this.iterateCallbacks('cacheDidUpdate')) {\n            await callback({\n                cacheName,\n                oldResponse,\n                newResponse: responseToCache.clone(),\n                request: effectiveRequest,\n                event: this.event,\n            });\n        }\n        return true;\n    }\n    /**\n     * Checks the list of plugins for the `cacheKeyWillBeUsed` callback, and\n     * executes any of those callbacks found in sequence. The final `Request`\n     * object returned by the last plugin is treated as the cache key for cache\n     * reads and/or writes. If no `cacheKeyWillBeUsed` plugin callbacks have\n     * been registered, the passed request is returned unmodified\n     *\n     * @param {Request} request\n     * @param {string} mode\n     * @return {Promise<Request>}\n     */\n    async getCacheKey(request, mode) {\n        if (!this._cacheKeys[mode]) {\n            let effectiveRequest = request;\n            for (const callback of this.iterateCallbacks('cacheKeyWillBeUsed')) {\n                effectiveRequest = toRequest(await callback({\n                    mode,\n                    request: effectiveRequest,\n                    event: this.event,\n                    params: this.params,\n                }));\n            }\n            this._cacheKeys[mode] = effectiveRequest;\n        }\n        return this._cacheKeys[mode];\n    }\n    /**\n     * Returns true if the strategy has at least one plugin with the given\n     * callback.\n     *\n     * @param {string} name The name of the callback to check for.\n     * @return {boolean}\n     */\n    hasCallback(name) {\n        for (const plugin of this._strategy.plugins) {\n            if (name in plugin) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Runs all plugin callbacks matching the given name, in order, passing the\n     * given param object (merged ith the current plugin state) as the only\n     * argument.\n     *\n     * Note: since this method runs all plugins, it's not suitable for cases\n     * where the return value of a callback needs to be applied prior to calling\n     * the next callback. See\n     * [`iterateCallbacks()`]{@link module:workbox-strategies.StrategyHandler#iterateCallbacks}\n     * below for how to handle that case.\n     *\n     * @param {string} name The name of the callback to run within each plugin.\n     * @param {Object} param The object to pass as the first (and only) param\n     *     when executing each callback. This object will be merged with the\n     *     current plugin state prior to callback execution.\n     */\n    async runCallbacks(name, param) {\n        for (const callback of this.iterateCallbacks(name)) {\n            // TODO(philipwalton): not sure why `any` is needed. It seems like\n            // this should work with `as WorkboxPluginCallbackParam[C]`.\n            await callback(param);\n        }\n    }\n    /**\n     * Accepts a callback and returns an iterable of matching plugin callbacks,\n     * where each callback is wrapped with the current handler state (i.e. when\n     * you call each callback, whatever object parameter you pass it will\n     * be merged with the plugin's current state).\n     *\n     * @param {string} name The name fo the callback to run\n     * @return {Array<Function>}\n     */\n    *iterateCallbacks(name) {\n        for (const plugin of this._strategy.plugins) {\n            if (typeof plugin[name] === 'function') {\n                const state = this._pluginStateMap.get(plugin);\n                const statefulCallback = (param) => {\n                    const statefulParam = { ...param, state };\n                    // TODO(philipwalton): not sure why `any` is needed. It seems like\n                    // this should work with `as WorkboxPluginCallbackParam[C]`.\n                    return plugin[name](statefulParam);\n                };\n                yield statefulCallback;\n            }\n        }\n    }\n    /**\n     * Adds a promise to the\n     * [extend lifetime promises]{@link https://w3c.github.io/ServiceWorker/#extendableevent-extend-lifetime-promises}\n     * of the event event associated with the request being handled (usually a\n     * `FetchEvent`).\n     *\n     * Note: you can await\n     * [`doneWaiting()`]{@link module:workbox-strategies.StrategyHandler~doneWaiting}\n     * to know when all added promises have settled.\n     *\n     * @param {Promise} promise A promise to add to the extend lifetime promises\n     *     of the event that triggered the request.\n     */\n    waitUntil(promise) {\n        this._extendLifetimePromises.push(promise);\n        return promise;\n    }\n    /**\n     * Returns a promise that resolves once all promises passed to\n     * [`waitUntil()`]{@link module:workbox-strategies.StrategyHandler~waitUntil}\n     * have settled.\n     *\n     * Note: any work done after `doneWaiting()` settles should be manually\n     * passed to an event's `waitUntil()` method (not this handler's\n     * `waitUntil()` method), otherwise the service worker thread my be killed\n     * prior to your work completing.\n     */\n    async doneWaiting() {\n        let promise;\n        while (promise = this._extendLifetimePromises.shift()) {\n            await promise;\n        }\n    }\n    /**\n     * Stops running the strategy and immediately resolves any pending\n     * `waitUntil()` promises.\n     */\n    destroy() {\n        this._handlerDeferred.resolve();\n    }\n    /**\n     * This method will call cacheWillUpdate on the available plugins (or use\n     * status === 200) to determine if the Response is safe and valid to cache.\n     *\n     * @param {Request} options.request\n     * @param {Response} options.response\n     * @return {Promise<Response|undefined>}\n     *\n     * @private\n     */\n    async _ensureResponseSafeToCache(response) {\n        let responseToCache = response;\n        let pluginsUsed = false;\n        for (const callback of this.iterateCallbacks('cacheWillUpdate')) {\n            responseToCache = (await callback({\n                request: this.request,\n                response: responseToCache,\n                event: this.event,\n            })) || undefined;\n            pluginsUsed = true;\n            if (!responseToCache) {\n                break;\n            }\n        }\n        if (!pluginsUsed) {\n            if (responseToCache && responseToCache.status !== 200) {\n                responseToCache = undefined;\n            }\n            if (process.env.NODE_ENV !== 'production') {\n                if (responseToCache) {\n                    if (responseToCache.status !== 200) {\n                        if (responseToCache.status === 0) {\n                            logger.warn(`The response for '${this.request.url}' ` +\n                                `is an opaque response. The caching strategy that you're ` +\n                                `using will not cache opaque responses by default.`);\n                        }\n                        else {\n                            logger.debug(`The response for '${this.request.url}' ` +\n                                `returned a status code of '${response.status}' and won't ` +\n                                `be cached as a result.`);\n                        }\n                    }\n                }\n            }\n        }\n        return responseToCache;\n    }\n}\nexport { StrategyHandler };\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { StrategyHandler } from './StrategyHandler.js';\nimport './_version.js';\n/**\n * An abstract base class that all other strategy classes must extend from:\n *\n * @memberof module:workbox-strategies\n */\nclass Strategy {\n    /**\n     * Creates a new instance of the strategy and sets all documented option\n     * properties as public instance properties.\n     *\n     * Note: if a custom strategy class extends the base Strategy class and does\n     * not need more than these properties, it does not need to define its own\n     * constructor.\n     *\n     * @param {Object} [options]\n     * @param {string} [options.cacheName] Cache name to store and retrieve\n     * requests. Defaults to the cache names provided by\n     * [workbox-core]{@link module:workbox-core.cacheNames}.\n     * @param {Array<Object>} [options.plugins] [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n     * to use in conjunction with this caching strategy.\n     * @param {Object} [options.fetchOptions] Values passed along to the\n     * [`init`](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters)\n     * of [non-navigation](https://github.com/GoogleChrome/workbox/issues/1796)\n     * `fetch()` requests made by this strategy.\n     * @param {Object} [options.matchOptions] The\n     * [`CacheQueryOptions`]{@link https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions}\n     * for any `cache.match()` or `cache.put()` calls made by this strategy.\n     */\n    constructor(options = {}) {\n        /**\n         * Cache name to store and retrieve\n         * requests. Defaults to the cache names provided by\n         * [workbox-core]{@link module:workbox-core.cacheNames}.\n         *\n         * @type {string}\n         */\n        this.cacheName = cacheNames.getRuntimeName(options.cacheName);\n        /**\n         * The list\n         * [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n         * used by this strategy.\n         *\n         * @type {Array<Object>}\n         */\n        this.plugins = options.plugins || [];\n        /**\n         * Values passed along to the\n         * [`init`]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters}\n         * of all fetch() requests made by this strategy.\n         *\n         * @type {Object}\n         */\n        this.fetchOptions = options.fetchOptions;\n        /**\n         * The\n         * [`CacheQueryOptions`]{@link https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions}\n         * for any `cache.match()` or `cache.put()` calls made by this strategy.\n         *\n         * @type {Object}\n         */\n        this.matchOptions = options.matchOptions;\n    }\n    /**\n     * Perform a request strategy and returns a `Promise` that will resolve with\n     * a `Response`, invoking all relevant plugin callbacks.\n     *\n     * When a strategy instance is registered with a Workbox\n     * [route]{@link module:workbox-routing.Route}, this method is automatically\n     * called when the route matches.\n     *\n     * Alternatively, this method can be used in a standalone `FetchEvent`\n     * listener by passing it to `event.respondWith()`.\n     *\n     * @param {FetchEvent|Object} options A `FetchEvent` or an object with the\n     *     properties listed below.\n     * @param {Request|string} options.request A request to run this strategy for.\n     * @param {ExtendableEvent} options.event The event associated with the\n     *     request.\n     * @param {URL} [options.url]\n     * @param {*} [options.params]\n     */\n    handle(options) {\n        const [responseDone] = this.handleAll(options);\n        return responseDone;\n    }\n    /**\n     * Similar to [`handle()`]{@link module:workbox-strategies.Strategy~handle}, but\n     * instead of just returning a `Promise` that resolves to a `Response` it\n     * it will return an tuple of [response, done] promises, where the former\n     * (`response`) is equivalent to what `handle()` returns, and the latter is a\n     * Promise that will resolve once any promises that were added to\n     * `event.waitUntil()` as part of performing the strategy have completed.\n     *\n     * You can await the `done` promise to ensure any extra work performed by\n     * the strategy (usually caching responses) completes successfully.\n     *\n     * @param {FetchEvent|Object} options A `FetchEvent` or an object with the\n     *     properties listed below.\n     * @param {Request|string} options.request A request to run this strategy for.\n     * @param {ExtendableEvent} options.event The event associated with the\n     *     request.\n     * @param {URL} [options.url]\n     * @param {*} [options.params]\n     * @return {Array<Promise>} A tuple of [response, done]\n     *     promises that can be used to determine when the response resolves as\n     *     well as when the handler has completed all its work.\n     */\n    handleAll(options) {\n        // Allow for flexible options to be passed.\n        if (options instanceof FetchEvent) {\n            options = {\n                event: options,\n                request: options.request,\n            };\n        }\n        const event = options.event;\n        const request = typeof options.request === 'string' ?\n            new Request(options.request) :\n            options.request;\n        const params = 'params' in options ? options.params : undefined;\n        const handler = new StrategyHandler(this, { event, request, params });\n        const responseDone = this._getResponse(handler, request, event);\n        const handlerDone = this._awaitComplete(responseDone, handler, request, event);\n        // Return an array of promises, suitable for use with Promise.all().\n        return [responseDone, handlerDone];\n    }\n    async _getResponse(handler, request, event) {\n        await handler.runCallbacks('handlerWillStart', { event, request });\n        let response = undefined;\n        try {\n            response = await this._handle(request, handler);\n            // The \"official\" Strategy subclasses all throw this error automatically,\n            // but in case a third-party Strategy doesn't, ensure that we have a\n            // consistent failure when there's no response or an error response.\n            if (!response || response.type === 'error') {\n                throw new WorkboxError('no-response', { url: request.url });\n            }\n        }\n        catch (error) {\n            for (const callback of handler.iterateCallbacks('handlerDidError')) {\n                response = await callback({ error, event, request });\n                if (response) {\n                    break;\n                }\n            }\n            if (!response) {\n                throw error;\n            }\n            else if (process.env.NODE_ENV !== 'production') {\n                logger.log(`While responding to '${getFriendlyURL(request.url)}', ` +\n                    `an ${error} error occurred. Using a fallback response provided by ` +\n                    `a handlerDidError plugin.`);\n            }\n        }\n        for (const callback of handler.iterateCallbacks('handlerWillRespond')) {\n            response = await callback({ event, request, response });\n        }\n        return response;\n    }\n    async _awaitComplete(responseDone, handler, request, event) {\n        let response;\n        let error;\n        try {\n            response = await responseDone;\n        }\n        catch (error) {\n            // Ignore errors, as response errors should be caught via the `response`\n            // promise above. The `done` promise will only throw for errors in\n            // promises passed to `handler.waitUntil()`.\n        }\n        try {\n            await handler.runCallbacks('handlerDidRespond', {\n                event,\n                request,\n                response,\n            });\n            await handler.doneWaiting();\n        }\n        catch (waitUntilError) {\n            error = waitUntilError;\n        }\n        await handler.runCallbacks('handlerDidComplete', {\n            event,\n            request,\n            response,\n            error,\n        });\n        handler.destroy();\n        if (error) {\n            throw error;\n        }\n    }\n}\nexport { Strategy };\n/**\n * Classes extending the `Strategy` based class should implement this method,\n * and leverage the [`handler`]{@link module:workbox-strategies.StrategyHandler}\n * arg to perform all fetching and cache logic, which will ensure all relevant\n * cache, cache options, fetch options and plugins are used (per the current\n * strategy instance).\n *\n * @name _handle\n * @instance\n * @abstract\n * @function\n * @param {Request} request\n * @param {module:workbox-strategies.StrategyHandler} handler\n * @return {Promise<Response>}\n *\n * @memberof module:workbox-strategies.Strategy\n */\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport '../_version.js';\nexport const messages = {\n    strategyStart: (strategyName, request) => `Using ${strategyName} to respond to '${getFriendlyURL(request.url)}'`,\n    printFinalResponse: (response) => {\n        if (response) {\n            logger.groupCollapsed(`View the final response here.`);\n            logger.log(response || '[No response returned]');\n            logger.groupEnd();\n        }\n    },\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { cacheOkAndOpaquePlugin } from './plugins/cacheOkAndOpaquePlugin.js';\nimport { Strategy } from './Strategy.js';\nimport { messages } from './utils/messages.js';\nimport './_version.js';\n/**\n * An implementation of a\n * [stale-while-revalidate]{@link https://developers.google.com/web/fundamentals/instant-and-offline/offline-cookbook/#stale-while-revalidate}\n * request strategy.\n *\n * Resources are requested from both the cache and the network in parallel.\n * The strategy will respond with the cached version if available, otherwise\n * wait for the network response. The cache is updated with the network response\n * with each successful request.\n *\n * By default, this strategy will cache responses with a 200 status code as\n * well as [opaque responses]{@link https://developers.google.com/web/tools/workbox/guides/handle-third-party-requests}.\n * Opaque responses are cross-origin requests where the response doesn't\n * support [CORS]{@link https://enable-cors.org/}.\n *\n * If the network request fails, and there is no cache match, this will throw\n * a `WorkboxError` exception.\n *\n * @extends module:workbox-strategies.Strategy\n * @memberof module:workbox-strategies\n */\nclass StaleWhileRevalidate extends Strategy {\n    /**\n     * @param {Object} [options]\n     * @param {string} [options.cacheName] Cache name to store and retrieve\n     * requests. Defaults to cache names provided by\n     * [workbox-core]{@link module:workbox-core.cacheNames}.\n     * @param {Array<Object>} [options.plugins] [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n     * to use in conjunction with this caching strategy.\n     * @param {Object} [options.fetchOptions] Values passed along to the\n     * [`init`](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters)\n     * of [non-navigation](https://github.com/GoogleChrome/workbox/issues/1796)\n     * `fetch()` requests made by this strategy.\n     * @param {Object} [options.matchOptions] [`CacheQueryOptions`](https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions)\n     */\n    constructor(options) {\n        super(options);\n        // If this instance contains no plugins with a 'cacheWillUpdate' callback,\n        // prepend the `cacheOkAndOpaquePlugin` plugin to the plugins list.\n        if (!this.plugins.some((p) => 'cacheWillUpdate' in p)) {\n            this.plugins.unshift(cacheOkAndOpaquePlugin);\n        }\n    }\n    /**\n     * @private\n     * @param {Request|string} request A request to run this strategy for.\n     * @param {module:workbox-strategies.StrategyHandler} handler The event that\n     *     triggered the request.\n     * @return {Promise<Response>}\n     */\n    async _handle(request, handler) {\n        const logs = [];\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-strategies',\n                className: this.constructor.name,\n                funcName: 'handle',\n                paramName: 'request',\n            });\n        }\n        const fetchAndCachePromise = handler\n            .fetchAndCachePut(request)\n            .catch(() => {\n            // Swallow this error because a 'no-response' error will be thrown in\n            // main handler return flow. This will be in the `waitUntil()` flow.\n        });\n        let response = await handler.cacheMatch(request);\n        let error;\n        if (response) {\n            if (process.env.NODE_ENV !== 'production') {\n                logs.push(`Found a cached response in the '${this.cacheName}'` +\n                    ` cache. Will update with the network response in the background.`);\n            }\n        }\n        else {\n            if (process.env.NODE_ENV !== 'production') {\n                logs.push(`No response found in the '${this.cacheName}' cache. ` +\n                    `Will wait for the network response.`);\n            }\n            try {\n                // NOTE(philipwalton): Really annoying that we have to type cast here.\n                // https://github.com/microsoft/TypeScript/issues/20006\n                response = await fetchAndCachePromise;\n            }\n            catch (err) {\n                error = err;\n            }\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            logger.groupCollapsed(messages.strategyStart(this.constructor.name, request));\n            for (const log of logs) {\n                logger.log(log);\n            }\n            messages.printFinalResponse(response);\n            logger.groupEnd();\n        }\n        if (!response) {\n            throw new WorkboxError('no-response', { url: request.url, error });\n        }\n        return response;\n    }\n}\nexport { StaleWhileRevalidate };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { Strategy } from './Strategy.js';\nimport { messages } from './utils/messages.js';\nimport './_version.js';\n/**\n * An implementation of a [cache-first]{@link https://developers.google.com/web/fundamentals/instant-and-offline/offline-cookbook/#cache-falling-back-to-network}\n * request strategy.\n *\n * A cache first strategy is useful for assets that have been revisioned,\n * such as URLs like `/styles/example.a8f5f1.css`, since they\n * can be cached for long periods of time.\n *\n * If the network request fails, and there is no cache match, this will throw\n * a `WorkboxError` exception.\n *\n * @extends module:workbox-strategies.Strategy\n * @memberof module:workbox-strategies\n */\nclass CacheFirst extends Strategy {\n    /**\n     * @private\n     * @param {Request|string} request A request to run this strategy for.\n     * @param {module:workbox-strategies.StrategyHandler} handler The event that\n     *     triggered the request.\n     * @return {Promise<Response>}\n     */\n    async _handle(request, handler) {\n        const logs = [];\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-strategies',\n                className: this.constructor.name,\n                funcName: 'makeRequest',\n                paramName: 'request',\n            });\n        }\n        let response = await handler.cacheMatch(request);\n        let error;\n        if (!response) {\n            if (process.env.NODE_ENV !== 'production') {\n                logs.push(`No response found in the '${this.cacheName}' cache. ` +\n                    `Will respond with a network request.`);\n            }\n            try {\n                response = await handler.fetchAndCachePut(request);\n            }\n            catch (err) {\n                error = err;\n            }\n            if (process.env.NODE_ENV !== 'production') {\n                if (response) {\n                    logs.push(`Got response from network.`);\n                }\n                else {\n                    logs.push(`Unable to get a response from the network.`);\n                }\n            }\n        }\n        else {\n            if (process.env.NODE_ENV !== 'production') {\n                logs.push(`Found a cached response in the '${this.cacheName}' cache.`);\n            }\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            logger.groupCollapsed(messages.strategyStart(this.constructor.name, request));\n            for (const log of logs) {\n                logger.log(log);\n            }\n            messages.printFinalResponse(response);\n            logger.groupEnd();\n        }\n        if (!response) {\n            throw new WorkboxError('no-response', { url: request.url, error });\n        }\n        return response;\n    }\n}\nexport { CacheFirst };\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:cacheable-response:6.1.5'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport './_version.js';\n/**\n * This class allows you to set up rules determining what\n * status codes and/or headers need to be present in order for a\n * [`Response`](https://developer.mozilla.org/en-US/docs/Web/API/Response)\n * to be considered cacheable.\n *\n * @memberof module:workbox-cacheable-response\n */\nclass CacheableResponse {\n    /**\n     * To construct a new CacheableResponse instance you must provide at least\n     * one of the `config` properties.\n     *\n     * If both `statuses` and `headers` are specified, then both conditions must\n     * be met for the `Response` to be considered cacheable.\n     *\n     * @param {Object} config\n     * @param {Array<number>} [config.statuses] One or more status codes that a\n     * `Response` can have and be considered cacheable.\n     * @param {Object<string,string>} [config.headers] A mapping of header names\n     * and expected values that a `Response` can have and be considered cacheable.\n     * If multiple headers are provided, only one needs to be present.\n     */\n    constructor(config = {}) {\n        if (process.env.NODE_ENV !== 'production') {\n            if (!(config.statuses || config.headers)) {\n                throw new WorkboxError('statuses-or-headers-required', {\n                    moduleName: 'workbox-cacheable-response',\n                    className: 'CacheableResponse',\n                    funcName: 'constructor',\n                });\n            }\n            if (config.statuses) {\n                assert.isArray(config.statuses, {\n                    moduleName: 'workbox-cacheable-response',\n                    className: 'CacheableResponse',\n                    funcName: 'constructor',\n                    paramName: 'config.statuses',\n                });\n            }\n            if (config.headers) {\n                assert.isType(config.headers, 'object', {\n                    moduleName: 'workbox-cacheable-response',\n                    className: 'CacheableResponse',\n                    funcName: 'constructor',\n                    paramName: 'config.headers',\n                });\n            }\n        }\n        this._statuses = config.statuses;\n        this._headers = config.headers;\n    }\n    /**\n     * Checks a response to see whether it's cacheable or not, based on this\n     * object's configuration.\n     *\n     * @param {Response} response The response whose cacheability is being\n     * checked.\n     * @return {boolean} `true` if the `Response` is cacheable, and `false`\n     * otherwise.\n     */\n    isResponseCacheable(response) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(response, Response, {\n                moduleName: 'workbox-cacheable-response',\n                className: 'CacheableResponse',\n                funcName: 'isResponseCacheable',\n                paramName: 'response',\n            });\n        }\n        let cacheable = true;\n        if (this._statuses) {\n            cacheable = this._statuses.includes(response.status);\n        }\n        if (this._headers && cacheable) {\n            cacheable = Object.keys(this._headers).some((headerName) => {\n                return response.headers.get(headerName) === this._headers[headerName];\n            });\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            if (!cacheable) {\n                logger.groupCollapsed(`The request for ` +\n                    `'${getFriendlyURL(response.url)}' returned a response that does ` +\n                    `not meet the criteria for being cached.`);\n                logger.groupCollapsed(`View cacheability criteria here.`);\n                logger.log(`Cacheable statuses: ` +\n                    JSON.stringify(this._statuses));\n                logger.log(`Cacheable headers: ` +\n                    JSON.stringify(this._headers, null, 2));\n                logger.groupEnd();\n                const logFriendlyHeaders = {};\n                response.headers.forEach((value, key) => {\n                    logFriendlyHeaders[key] = value;\n                });\n                logger.groupCollapsed(`View response status and headers here.`);\n                logger.log(`Response status: ` + response.status);\n                logger.log(`Response headers: ` +\n                    JSON.stringify(logFriendlyHeaders, null, 2));\n                logger.groupEnd();\n                logger.groupCollapsed(`View full response details here.`);\n                logger.log(response.headers);\n                logger.log(response);\n                logger.groupEnd();\n                logger.groupEnd();\n            }\n        }\n        return cacheable;\n    }\n}\nexport { CacheableResponse };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { CacheableResponse } from './CacheableResponse.js';\nimport './_version.js';\n/**\n * A class implementing the `cacheWillUpdate` lifecycle callback. This makes it\n * easier to add in cacheability checks to requests made via Workbox's built-in\n * strategies.\n *\n * @memberof module:workbox-cacheable-response\n */\nclass CacheableResponsePlugin {\n    /**\n     * To construct a new CacheableResponsePlugin instance you must provide at\n     * least one of the `config` properties.\n     *\n     * If both `statuses` and `headers` are specified, then both conditions must\n     * be met for the `Response` to be considered cacheable.\n     *\n     * @param {Object} config\n     * @param {Array<number>} [config.statuses] One or more status codes that a\n     * `Response` can have and be considered cacheable.\n     * @param {Object<string,string>} [config.headers] A mapping of header names\n     * and expected values that a `Response` can have and be considered cacheable.\n     * If multiple headers are provided, only one needs to be present.\n     */\n    constructor(config) {\n        /**\n         * @param {Object} options\n         * @param {Response} options.response\n         * @return {Response|null}\n         * @private\n         */\n        this.cacheWillUpdate = async ({ response }) => {\n            if (this._cacheableResponse.isResponseCacheable(response)) {\n                return response;\n            }\n            return null;\n        };\n        this._cacheableResponse = new CacheableResponse(config);\n    }\n}\nexport { CacheableResponsePlugin };\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * A helper function that prevents a promise from being flagged as unused.\n *\n * @private\n **/\nexport function dontWaitFor(promise) {\n    // Effective no-op.\n    promise.then(() => { });\n}\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from './_private/logger.js';\nimport { assert } from './_private/assert.js';\nimport { quotaErrorCallbacks } from './models/quotaErrorCallbacks.js';\nimport './_version.js';\n/**\n * Adds a function to the set of quotaErrorCallbacks that will be executed if\n * there's a quota error.\n *\n * @param {Function} callback\n * @memberof module:workbox-core\n */\nfunction registerQuotaErrorCallback(callback) {\n    if (process.env.NODE_ENV !== 'production') {\n        assert.isType(callback, 'function', {\n            moduleName: 'workbox-core',\n            funcName: 'register',\n            paramName: 'callback',\n        });\n    }\n    quotaErrorCallbacks.add(callback);\n    if (process.env.NODE_ENV !== 'production') {\n        logger.log('Registered a callback to respond to quota errors.', callback);\n    }\n}\nexport { registerQuotaErrorCallback };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * A class that wraps common IndexedDB functionality in a promise-based API.\n * It exposes all the underlying power and functionality of IndexedDB, but\n * wraps the most commonly used features in a way that's much simpler to use.\n *\n * @private\n */\nexport class DBWrapper {\n    /**\n     * @param {string} name\n     * @param {number} version\n     * @param {Object=} [callback]\n     * @param {!Function} [callbacks.onupgradeneeded]\n     * @param {!Function} [callbacks.onversionchange] Defaults to\n     *     DBWrapper.prototype._onversionchange when not specified.\n     * @private\n     */\n    constructor(name, version, { onupgradeneeded, onversionchange, } = {}) {\n        this._db = null;\n        this._name = name;\n        this._version = version;\n        this._onupgradeneeded = onupgradeneeded;\n        this._onversionchange = onversionchange || (() => this.close());\n    }\n    /**\n     * Returns the IDBDatabase instance (not normally needed).\n     * @return {IDBDatabase|undefined}\n     *\n     * @private\n     */\n    get db() {\n        return this._db;\n    }\n    /**\n     * Opens a connected to an IDBDatabase, invokes any onupgradedneeded\n     * callback, and added an onversionchange callback to the database.\n     *\n     * @return {IDBDatabase}\n     * @private\n     */\n    async open() {\n        if (this._db)\n            return;\n        this._db = await new Promise((resolve, reject) => {\n            // This flag is flipped to true if the timeout callback runs prior\n            // to the request failing or succeeding. Note: we use a timeout instead\n            // of an onblocked handler since there are cases where onblocked will\n            // never never run. A timeout better handles all possible scenarios:\n            // https://github.com/w3c/IndexedDB/issues/223\n            let openRequestTimedOut = false;\n            setTimeout(() => {\n                openRequestTimedOut = true;\n                reject(new Error('The open request was blocked and timed out'));\n            }, this.OPEN_TIMEOUT);\n            const openRequest = indexedDB.open(this._name, this._version);\n            openRequest.onerror = () => reject(openRequest.error);\n            openRequest.onupgradeneeded = (evt) => {\n                if (openRequestTimedOut) {\n                    openRequest.transaction.abort();\n                    openRequest.result.close();\n                }\n                else if (typeof this._onupgradeneeded === 'function') {\n                    this._onupgradeneeded(evt);\n                }\n            };\n            openRequest.onsuccess = () => {\n                const db = openRequest.result;\n                if (openRequestTimedOut) {\n                    db.close();\n                }\n                else {\n                    db.onversionchange = this._onversionchange.bind(this);\n                    resolve(db);\n                }\n            };\n        });\n        return this;\n    }\n    /**\n     * Polyfills the native `getKey()` method. Note, this is overridden at\n     * runtime if the browser supports the native method.\n     *\n     * @param {string} storeName\n     * @param {*} query\n     * @return {Array}\n     * @private\n     */\n    async getKey(storeName, query) {\n        return (await this.getAllKeys(storeName, query, 1))[0];\n    }\n    /**\n     * Polyfills the native `getAll()` method. Note, this is overridden at\n     * runtime if the browser supports the native method.\n     *\n     * @param {string} storeName\n     * @param {*} query\n     * @param {number} count\n     * @return {Array}\n     * @private\n     */\n    async getAll(storeName, query, count) {\n        return await this.getAllMatching(storeName, { query, count });\n    }\n    /**\n     * Polyfills the native `getAllKeys()` method. Note, this is overridden at\n     * runtime if the browser supports the native method.\n     *\n     * @param {string} storeName\n     * @param {*} query\n     * @param {number} count\n     * @return {Array}\n     * @private\n     */\n    async getAllKeys(storeName, query, count) {\n        const entries = await this.getAllMatching(storeName, { query, count, includeKeys: true });\n        return entries.map((entry) => entry.key);\n    }\n    /**\n     * Supports flexible lookup in an object store by specifying an index,\n     * query, direction, and count. This method returns an array of objects\n     * with the signature .\n     *\n     * @param {string} storeName\n     * @param {Object} [opts]\n     * @param {string} [opts.index] The index to use (if specified).\n     * @param {*} [opts.query]\n     * @param {IDBCursorDirection} [opts.direction]\n     * @param {number} [opts.count] The max number of results to return.\n     * @param {boolean} [opts.includeKeys] When true, the structure of the\n     *     returned objects is changed from an array of values to an array of\n     *     objects in the form {key, primaryKey, value}.\n     * @return {Array}\n     * @private\n     */\n    async getAllMatching(storeName, { index, query = null, // IE/Edge errors if query === `undefined`.\n    direction = 'next', count, includeKeys = false, } = {}) {\n        return await this.transaction([storeName], 'readonly', (txn, done) => {\n            const store = txn.objectStore(storeName);\n            const target = index ? store.index(index) : store;\n            const results = [];\n            const request = target.openCursor(query, direction);\n            request.onsuccess = () => {\n                const cursor = request.result;\n                if (cursor) {\n                    results.push(includeKeys ? cursor : cursor.value);\n                    if (count && results.length >= count) {\n                        done(results);\n                    }\n                    else {\n                        cursor.continue();\n                    }\n                }\n                else {\n                    done(results);\n                }\n            };\n        });\n    }\n    /**\n     * Accepts a list of stores, a transaction type, and a callback and\n     * performs a transaction. A promise is returned that resolves to whatever\n     * value the callback chooses. The callback holds all the transaction logic\n     * and is invoked with two arguments:\n     *   1. The IDBTransaction object\n     *   2. A `done` function, that's used to resolve the promise when\n     *      when the transaction is done, if passed a value, the promise is\n     *      resolved to that value.\n     *\n     * @param {Array<string>} storeNames An array of object store names\n     *     involved in the transaction.\n     * @param {string} type Can be `readonly` or `readwrite`.\n     * @param {!Function} callback\n     * @return {*} The result of the transaction ran by the callback.\n     * @private\n     */\n    async transaction(storeNames, type, callback) {\n        await this.open();\n        return await new Promise((resolve, reject) => {\n            const txn = this._db.transaction(storeNames, type);\n            txn.onabort = () => reject(txn.error);\n            txn.oncomplete = () => resolve();\n            callback(txn, (value) => resolve(value));\n        });\n    }\n    /**\n     * Delegates async to a native IDBObjectStore method.\n     *\n     * @param {string} method The method name.\n     * @param {string} storeName The object store name.\n     * @param {string} type Can be `readonly` or `readwrite`.\n     * @param {...*} args The list of args to pass to the native method.\n     * @return {*} The result of the transaction.\n     * @private\n     */\n    async _call(method, storeName, type, ...args) {\n        const callback = (txn, done) => {\n            const objStore = txn.objectStore(storeName);\n            // TODO(philipwalton): Fix this underlying TS2684 error.\n            // @ts-ignore\n            const request = objStore[method].apply(objStore, args);\n            request.onsuccess = () => done(request.result);\n        };\n        return await this.transaction([storeName], type, callback);\n    }\n    /**\n     * Closes the connection opened by `DBWrapper.open()`. Generally this method\n     * doesn't need to be called since:\n     *   1. It's usually better to keep a connection open since opening\n     *      a new connection is somewhat slow.\n     *   2. Connections are automatically closed when the reference is\n     *      garbage collected.\n     * The primary use case for needing to close a connection is when another\n     * reference (typically in another tab) needs to upgrade it and would be\n     * blocked by the current, open connection.\n     *\n     * @private\n     */\n    close() {\n        if (this._db) {\n            this._db.close();\n            this._db = null;\n        }\n    }\n}\n// Exposed on the prototype to let users modify the default timeout on a\n// per-instance or global basis.\nDBWrapper.prototype.OPEN_TIMEOUT = 2000;\n// Wrap native IDBObjectStore methods according to their mode.\nconst methodsToWrap = {\n    readonly: ['get', 'count', 'getKey', 'getAll', 'getAllKeys'],\n    readwrite: ['add', 'put', 'clear', 'delete'],\n};\nfor (const [mode, methods] of Object.entries(methodsToWrap)) {\n    for (const method of methods) {\n        if (method in IDBObjectStore.prototype) {\n            // Don't use arrow functions here since we're outside of the class.\n            DBWrapper.prototype[method] =\n                async function (storeName, ...args) {\n                    return await this._call(method, storeName, mode, ...args);\n                };\n        }\n    }\n}\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * Deletes the database.\n * Note: this is exported separately from the DBWrapper module because most\n * usages of IndexedDB in workbox dont need deleting, and this way it can be\n * reused in tests to delete databases without creating DBWrapper instances.\n *\n * @param {string} name The database name.\n * @private\n */\nexport const deleteDatabase = async (name) => {\n    await new Promise((resolve, reject) => {\n        const request = indexedDB.deleteDatabase(name);\n        request.onerror = () => {\n            reject(request.error);\n        };\n        request.onblocked = () => {\n            reject(new Error('Delete blocked'));\n        };\n        request.onsuccess = () => {\n            resolve();\n        };\n    });\n};\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:expiration:6.1.5'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { DBWrapper } from 'workbox-core/_private/DBWrapper.js';\nimport { deleteDatabase } from 'workbox-core/_private/deleteDatabase.js';\nimport '../_version.js';\nconst DB_NAME = 'workbox-expiration';\nconst OBJECT_STORE_NAME = 'cache-entries';\nconst normalizeURL = (unNormalizedUrl) => {\n    const url = new URL(unNormalizedUrl, location.href);\n    url.hash = '';\n    return url.href;\n};\n/**\n * Returns the timestamp model.\n *\n * @private\n */\nclass CacheTimestampsModel {\n    /**\n     *\n     * @param {string} cacheName\n     *\n     * @private\n     */\n    constructor(cacheName) {\n        this._cacheName = cacheName;\n        this._db = new DBWrapper(DB_NAME, 1, {\n            onupgradeneeded: (event) => this._handleUpgrade(event),\n        });\n    }\n    /**\n     * Should perform an upgrade of indexedDB.\n     *\n     * @param {Event} event\n     *\n     * @private\n     */\n    _handleUpgrade(event) {\n        const db = event.target.result;\n        // TODO(philipwalton): EdgeHTML doesn't support arrays as a keyPath, so we\n        // have to use the `id` keyPath here and create our own values (a\n        // concatenation of `url + cacheName`) instead of simply using\n        // `keyPath: ['url', 'cacheName']`, which is supported in other browsers.\n        const objStore = db.createObjectStore(OBJECT_STORE_NAME, { keyPath: 'id' });\n        // TODO(philipwalton): once we don't have to support EdgeHTML, we can\n        // create a single index with the keyPath `['cacheName', 'timestamp']`\n        // instead of doing both these indexes.\n        objStore.createIndex('cacheName', 'cacheName', { unique: false });\n        objStore.createIndex('timestamp', 'timestamp', { unique: false });\n        // Previous versions of `workbox-expiration` used `this._cacheName`\n        // as the IDBDatabase name.\n        deleteDatabase(this._cacheName);\n    }\n    /**\n     * @param {string} url\n     * @param {number} timestamp\n     *\n     * @private\n     */\n    async setTimestamp(url, timestamp) {\n        url = normalizeURL(url);\n        const entry = {\n            url,\n            timestamp,\n            cacheName: this._cacheName,\n            // Creating an ID from the URL and cache name won't be necessary once\n            // Edge switches to Chromium and all browsers we support work with\n            // array keyPaths.\n            id: this._getId(url),\n        };\n        await this._db.put(OBJECT_STORE_NAME, entry);\n    }\n    /**\n     * Returns the timestamp stored for a given URL.\n     *\n     * @param {string} url\n     * @return {number}\n     *\n     * @private\n     */\n    async getTimestamp(url) {\n        const entry = await this._db.get(OBJECT_STORE_NAME, this._getId(url));\n        return entry.timestamp;\n    }\n    /**\n     * Iterates through all the entries in the object store (from newest to\n     * oldest) and removes entries once either `maxCount` is reached or the\n     * entry's timestamp is less than `minTimestamp`.\n     *\n     * @param {number} minTimestamp\n     * @param {number} maxCount\n     * @return {Array<string>}\n     *\n     * @private\n     */\n    async expireEntries(minTimestamp, maxCount) {\n        const entriesToDelete = await this._db.transaction(OBJECT_STORE_NAME, 'readwrite', (txn, done) => {\n            const store = txn.objectStore(OBJECT_STORE_NAME);\n            const request = store.index('timestamp').openCursor(null, 'prev');\n            const entriesToDelete = [];\n            let entriesNotDeletedCount = 0;\n            request.onsuccess = () => {\n                const cursor = request.result;\n                if (cursor) {\n                    const result = cursor.value;\n                    // TODO(philipwalton): once we can use a multi-key index, we\n                    // won't have to check `cacheName` here.\n                    if (result.cacheName === this._cacheName) {\n                        // Delete an entry if it's older than the max age or\n                        // if we already have the max number allowed.\n                        if ((minTimestamp && result.timestamp < minTimestamp) ||\n                            (maxCount && entriesNotDeletedCount >= maxCount)) {\n                            // TODO(philipwalton): we should be able to delete the\n                            // entry right here, but doing so causes an iteration\n                            // bug in Safari stable (fixed in TP). Instead we can\n                            // store the keys of the entries to delete, and then\n                            // delete the separate transactions.\n                            // https://github.com/GoogleChrome/workbox/issues/1978\n                            // cursor.delete();\n                            // We only need to return the URL, not the whole entry.\n                            entriesToDelete.push(cursor.value);\n                        }\n                        else {\n                            entriesNotDeletedCount++;\n                        }\n                    }\n                    cursor.continue();\n                }\n                else {\n                    done(entriesToDelete);\n                }\n            };\n        });\n        // TODO(philipwalton): once the Safari bug in the following issue is fixed,\n        // we should be able to remove this loop and do the entry deletion in the\n        // cursor loop above:\n        // https://github.com/GoogleChrome/workbox/issues/1978\n        const urlsDeleted = [];\n        for (const entry of entriesToDelete) {\n            await this._db.delete(OBJECT_STORE_NAME, entry.id);\n            urlsDeleted.push(entry.url);\n        }\n        return urlsDeleted;\n    }\n    /**\n     * Takes a URL and returns an ID that will be unique in the object store.\n     *\n     * @param {string} url\n     * @return {string}\n     *\n     * @private\n     */\n    _getId(url) {\n        // Creating an ID from the URL and cache name won't be necessary once\n        // Edge switches to Chromium and all browsers we support work with\n        // array keyPaths.\n        return this._cacheName + '|' + normalizeURL(url);\n    }\n}\nexport { CacheTimestampsModel };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { dontWaitFor } from 'workbox-core/_private/dontWaitFor.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { CacheTimestampsModel } from './models/CacheTimestampsModel.js';\nimport './_version.js';\n/**\n * The `CacheExpiration` class allows you define an expiration and / or\n * limit on the number of responses stored in a\n * [`Cache`](https://developer.mozilla.org/en-US/docs/Web/API/Cache).\n *\n * @memberof module:workbox-expiration\n */\nclass CacheExpiration {\n    /**\n     * To construct a new CacheExpiration instance you must provide at least\n     * one of the `config` properties.\n     *\n     * @param {string} cacheName Name of the cache to apply restrictions to.\n     * @param {Object} config\n     * @param {number} [config.maxEntries] The maximum number of entries to cache.\n     * Entries used the least will be removed as the maximum is reached.\n     * @param {number} [config.maxAgeSeconds] The maximum age of an entry before\n     * it's treated as stale and removed.\n     * @param {Object} [config.matchOptions] The [`CacheQueryOptions`](https://developer.mozilla.org/en-US/docs/Web/API/Cache/delete#Parameters)\n     * that will be used when calling `delete()` on the cache.\n     */\n    constructor(cacheName, config = {}) {\n        this._isRunning = false;\n        this._rerunRequested = false;\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(cacheName, 'string', {\n                moduleName: 'workbox-expiration',\n                className: 'CacheExpiration',\n                funcName: 'constructor',\n                paramName: 'cacheName',\n            });\n            if (!(config.maxEntries || config.maxAgeSeconds)) {\n                throw new WorkboxError('max-entries-or-age-required', {\n                    moduleName: 'workbox-expiration',\n                    className: 'CacheExpiration',\n                    funcName: 'constructor',\n                });\n            }\n            if (config.maxEntries) {\n                assert.isType(config.maxEntries, 'number', {\n                    moduleName: 'workbox-expiration',\n                    className: 'CacheExpiration',\n                    funcName: 'constructor',\n                    paramName: 'config.maxEntries',\n                });\n            }\n            if (config.maxAgeSeconds) {\n                assert.isType(config.maxAgeSeconds, 'number', {\n                    moduleName: 'workbox-expiration',\n                    className: 'CacheExpiration',\n                    funcName: 'constructor',\n                    paramName: 'config.maxAgeSeconds',\n                });\n            }\n        }\n        this._maxEntries = config.maxEntries;\n        this._maxAgeSeconds = config.maxAgeSeconds;\n        this._matchOptions = config.matchOptions;\n        this._cacheName = cacheName;\n        this._timestampModel = new CacheTimestampsModel(cacheName);\n    }\n    /**\n     * Expires entries for the given cache and given criteria.\n     */\n    async expireEntries() {\n        if (this._isRunning) {\n            this._rerunRequested = true;\n            return;\n        }\n        this._isRunning = true;\n        const minTimestamp = this._maxAgeSeconds ?\n            Date.now() - (this._maxAgeSeconds * 1000) : 0;\n        const urlsExpired = await this._timestampModel.expireEntries(minTimestamp, this._maxEntries);\n        // Delete URLs from the cache\n        const cache = await self.caches.open(this._cacheName);\n        for (const url of urlsExpired) {\n            await cache.delete(url, this._matchOptions);\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            if (urlsExpired.length > 0) {\n                logger.groupCollapsed(`Expired ${urlsExpired.length} ` +\n                    `${urlsExpired.length === 1 ? 'entry' : 'entries'} and removed ` +\n                    `${urlsExpired.length === 1 ? 'it' : 'them'} from the ` +\n                    `'${this._cacheName}' cache.`);\n                logger.log(`Expired the following ${urlsExpired.length === 1 ?\n                    'URL' : 'URLs'}:`);\n                urlsExpired.forEach((url) => logger.log(`    ${url}`));\n                logger.groupEnd();\n            }\n            else {\n                logger.debug(`Cache expiration ran and found no entries to remove.`);\n            }\n        }\n        this._isRunning = false;\n        if (this._rerunRequested) {\n            this._rerunRequested = false;\n            dontWaitFor(this.expireEntries());\n        }\n    }\n    /**\n     * Update the timestamp for the given URL. This ensures the when\n     * removing entries based on maximum entries, most recently used\n     * is accurate or when expiring, the timestamp is up-to-date.\n     *\n     * @param {string} url\n     */\n    async updateTimestamp(url) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(url, 'string', {\n                moduleName: 'workbox-expiration',\n                className: 'CacheExpiration',\n                funcName: 'updateTimestamp',\n                paramName: 'url',\n            });\n        }\n        await this._timestampModel.setTimestamp(url, Date.now());\n    }\n    /**\n     * Can be used to check if a URL has expired or not before it's used.\n     *\n     * This requires a look up from IndexedDB, so can be slow.\n     *\n     * Note: This method will not remove the cached entry, call\n     * `expireEntries()` to remove indexedDB and Cache entries.\n     *\n     * @param {string} url\n     * @return {boolean}\n     */\n    async isURLExpired(url) {\n        if (!this._maxAgeSeconds) {\n            if (process.env.NODE_ENV !== 'production') {\n                throw new WorkboxError(`expired-test-without-max-age`, {\n                    methodName: 'isURLExpired',\n                    paramName: 'maxAgeSeconds',\n                });\n            }\n            return false;\n        }\n        else {\n            const timestamp = await this._timestampModel.getTimestamp(url);\n            const expireOlderThan = Date.now() - (this._maxAgeSeconds * 1000);\n            return (timestamp < expireOlderThan);\n        }\n    }\n    /**\n     * Removes the IndexedDB object store used to keep track of cache expiration\n     * metadata.\n     */\n    async delete() {\n        // Make sure we don't attempt another rerun if we're called in the middle of\n        // a cache expiration.\n        this._rerunRequested = false;\n        await this._timestampModel.expireEntries(Infinity); // Expires all.\n    }\n}\nexport { CacheExpiration };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { dontWaitFor } from 'workbox-core/_private/dontWaitFor.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { registerQuotaErrorCallback } from 'workbox-core/registerQuotaErrorCallback.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { CacheExpiration } from './CacheExpiration.js';\nimport './_version.js';\n/**\n * This plugin can be used in a `workbox-strategy` to regularly enforce a\n * limit on the age and / or the number of cached requests.\n *\n * It can only be used with `workbox-strategy` instances that have a\n * [custom `cacheName` property set](/web/tools/workbox/guides/configure-workbox#custom_cache_names_in_strategies).\n * In other words, it can't be used to expire entries in strategy that uses the\n * default runtime cache name.\n *\n * Whenever a cached request is used or updated, this plugin will look\n * at the associated cache and remove any old or extra requests.\n *\n * When using `maxAgeSeconds`, requests may be used *once* after expiring\n * because the expiration clean up will not have occurred until *after* the\n * cached request has been used. If the request has a \"Date\" header, then\n * a light weight expiration check is performed and the request will not be\n * used immediately.\n *\n * When using `maxEntries`, the entry least-recently requested will be removed\n * from the cache first.\n *\n * @memberof module:workbox-expiration\n */\nclass ExpirationPlugin {\n    /**\n     * @param {Object} config\n     * @param {number} [config.maxEntries] The maximum number of entries to cache.\n     * Entries used the least will be removed as the maximum is reached.\n     * @param {number} [config.maxAgeSeconds] The maximum age of an entry before\n     * it's treated as stale and removed.\n     * @param {Object} [config.matchOptions] The [`CacheQueryOptions`](https://developer.mozilla.org/en-US/docs/Web/API/Cache/delete#Parameters)\n     * that will be used when calling `delete()` on the cache.\n     * @param {boolean} [config.purgeOnQuotaError] Whether to opt this cache in to\n     * automatic deletion if the available storage quota has been exceeded.\n     */\n    constructor(config = {}) {\n        /**\n         * A \"lifecycle\" callback that will be triggered automatically by the\n         * `workbox-strategies` handlers when a `Response` is about to be returned\n         * from a [Cache](https://developer.mozilla.org/en-US/docs/Web/API/Cache) to\n         * the handler. It allows the `Response` to be inspected for freshness and\n         * prevents it from being used if the `Response`'s `Date` header value is\n         * older than the configured `maxAgeSeconds`.\n         *\n         * @param {Object} options\n         * @param {string} options.cacheName Name of the cache the response is in.\n         * @param {Response} options.cachedResponse The `Response` object that's been\n         *     read from a cache and whose freshness should be checked.\n         * @return {Response} Either the `cachedResponse`, if it's\n         *     fresh, or `null` if the `Response` is older than `maxAgeSeconds`.\n         *\n         * @private\n         */\n        this.cachedResponseWillBeUsed = async ({ event, request, cacheName, cachedResponse }) => {\n            if (!cachedResponse) {\n                return null;\n            }\n            const isFresh = this._isResponseDateFresh(cachedResponse);\n            // Expire entries to ensure that even if the expiration date has\n            // expired, it'll only be used once.\n            const cacheExpiration = this._getCacheExpiration(cacheName);\n            dontWaitFor(cacheExpiration.expireEntries());\n            // Update the metadata for the request URL to the current timestamp,\n            // but don't `await` it as we don't want to block the response.\n            const updateTimestampDone = cacheExpiration.updateTimestamp(request.url);\n            if (event) {\n                try {\n                    event.waitUntil(updateTimestampDone);\n                }\n                catch (error) {\n                    if (process.env.NODE_ENV !== 'production') {\n                        // The event may not be a fetch event; only log the URL if it is.\n                        if ('request' in event) {\n                            logger.warn(`Unable to ensure service worker stays alive when ` +\n                                `updating cache entry for ` +\n                                `'${getFriendlyURL(event.request.url)}'.`);\n                        }\n                    }\n                }\n            }\n            return isFresh ? cachedResponse : null;\n        };\n        /**\n         * A \"lifecycle\" callback that will be triggered automatically by the\n         * `workbox-strategies` handlers when an entry is added to a cache.\n         *\n         * @param {Object} options\n         * @param {string} options.cacheName Name of the cache that was updated.\n         * @param {string} options.request The Request for the cached entry.\n         *\n         * @private\n         */\n        this.cacheDidUpdate = async ({ cacheName, request }) => {\n            if (process.env.NODE_ENV !== 'production') {\n                assert.isType(cacheName, 'string', {\n                    moduleName: 'workbox-expiration',\n                    className: 'Plugin',\n                    funcName: 'cacheDidUpdate',\n                    paramName: 'cacheName',\n                });\n                assert.isInstance(request, Request, {\n                    moduleName: 'workbox-expiration',\n                    className: 'Plugin',\n                    funcName: 'cacheDidUpdate',\n                    paramName: 'request',\n                });\n            }\n            const cacheExpiration = this._getCacheExpiration(cacheName);\n            await cacheExpiration.updateTimestamp(request.url);\n            await cacheExpiration.expireEntries();\n        };\n        if (process.env.NODE_ENV !== 'production') {\n            if (!(config.maxEntries || config.maxAgeSeconds)) {\n                throw new WorkboxError('max-entries-or-age-required', {\n                    moduleName: 'workbox-expiration',\n                    className: 'Plugin',\n                    funcName: 'constructor',\n                });\n            }\n            if (config.maxEntries) {\n                assert.isType(config.maxEntries, 'number', {\n                    moduleName: 'workbox-expiration',\n                    className: 'Plugin',\n                    funcName: 'constructor',\n                    paramName: 'config.maxEntries',\n                });\n            }\n            if (config.maxAgeSeconds) {\n                assert.isType(config.maxAgeSeconds, 'number', {\n                    moduleName: 'workbox-expiration',\n                    className: 'Plugin',\n                    funcName: 'constructor',\n                    paramName: 'config.maxAgeSeconds',\n                });\n            }\n        }\n        this._config = config;\n        this._maxAgeSeconds = config.maxAgeSeconds;\n        this._cacheExpirations = new Map();\n        if (config.purgeOnQuotaError) {\n            registerQuotaErrorCallback(() => this.deleteCacheAndMetadata());\n        }\n    }\n    /**\n     * A simple helper method to return a CacheExpiration instance for a given\n     * cache name.\n     *\n     * @param {string} cacheName\n     * @return {CacheExpiration}\n     *\n     * @private\n     */\n    _getCacheExpiration(cacheName) {\n        if (cacheName === cacheNames.getRuntimeName()) {\n            throw new WorkboxError('expire-custom-caches-only');\n        }\n        let cacheExpiration = this._cacheExpirations.get(cacheName);\n        if (!cacheExpiration) {\n            cacheExpiration = new CacheExpiration(cacheName, this._config);\n            this._cacheExpirations.set(cacheName, cacheExpiration);\n        }\n        return cacheExpiration;\n    }\n    /**\n     * @param {Response} cachedResponse\n     * @return {boolean}\n     *\n     * @private\n     */\n    _isResponseDateFresh(cachedResponse) {\n        if (!this._maxAgeSeconds) {\n            // We aren't expiring by age, so return true, it's fresh\n            return true;\n        }\n        // Check if the 'date' header will suffice a quick expiration check.\n        // See https://github.com/GoogleChromeLabs/sw-toolbox/issues/164 for\n        // discussion.\n        const dateHeaderTimestamp = this._getDateHeaderTimestamp(cachedResponse);\n        if (dateHeaderTimestamp === null) {\n            // Unable to parse date, so assume it's fresh.\n            return true;\n        }\n        // If we have a valid headerTime, then our response is fresh iff the\n        // headerTime plus maxAgeSeconds is greater than the current time.\n        const now = Date.now();\n        return dateHeaderTimestamp >= now - (this._maxAgeSeconds * 1000);\n    }\n    /**\n     * This method will extract the data header and parse it into a useful\n     * value.\n     *\n     * @param {Response} cachedResponse\n     * @return {number|null}\n     *\n     * @private\n     */\n    _getDateHeaderTimestamp(cachedResponse) {\n        if (!cachedResponse.headers.has('date')) {\n            return null;\n        }\n        const dateHeader = cachedResponse.headers.get('date');\n        const parsedDate = new Date(dateHeader);\n        const headerTime = parsedDate.getTime();\n        // If the Date header was invalid for some reason, parsedDate.getTime()\n        // will return NaN.\n        if (isNaN(headerTime)) {\n            return null;\n        }\n        return headerTime;\n    }\n    /**\n     * This is a helper method that performs two operations:\n     *\n     * - Deletes *all* the underlying Cache instances associated with this plugin\n     * instance, by calling caches.delete() on your behalf.\n     * - Deletes the metadata from IndexedDB used to keep track of expiration\n     * details for each Cache instance.\n     *\n     * When using cache expiration, calling this method is preferable to calling\n     * `caches.delete()` directly, since this will ensure that the IndexedDB\n     * metadata is also cleanly removed and open IndexedDB instances are deleted.\n     *\n     * Note that if you're *not* using cache expiration for a given cache, calling\n     * `caches.delete()` and passing in the cache's name should be sufficient.\n     * There is no Workbox-specific method needed for cleanup in that case.\n     */\n    async deleteCacheAndMetadata() {\n        // Do this one at a time instead of all at once via `Promise.all()` to\n        // reduce the chance of inconsistency if a promise rejects.\n        for (const [cacheName, cacheExpiration] of this._cacheExpirations) {\n            await self.caches.delete(cacheName);\n            await cacheExpiration.delete();\n        }\n        // Reset this._cacheExpirations to its initial state.\n        this._cacheExpirations = new Map();\n    }\n}\nexport { ExpirationPlugin };\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:recipes:6.1.5'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { registerRoute } from 'workbox-routing/registerRoute.js';\nimport { StaleWhileRevalidate } from 'workbox-strategies/StaleWhileRevalidate.js';\nimport { CacheFirst } from 'workbox-strategies/CacheFirst.js';\nimport { CacheableResponsePlugin } from 'workbox-cacheable-response/CacheableResponsePlugin.js';\nimport { ExpirationPlugin } from 'workbox-expiration/ExpirationPlugin.js';\nimport './_version.js';\n/**\n * An implementation of the [Google fonts]{@link https://developers.google.com/web/tools/workbox/guides/common-recipes#google_fonts} caching recipe\n *\n * @memberof module:workbox-recipes\n *\n * @param {Object} [options]\n * @param {string} [options.cachePrefix] Cache prefix for caching stylesheets and webfonts. Defaults to google-fonts\n * @param {number} [options.maxAgeSeconds] Maximum age, in seconds, that font entries will be cached for. Defaults to 1 year\n * @param {number} [options.maxEntries] Maximum number of fonts that will be cached. Defaults to 30\n */\nfunction googleFontsCache(options = {}) {\n    const sheetCacheName = `${options.cachePrefix || 'google-fonts'}-stylesheets`;\n    const fontCacheName = `${options.cachePrefix || 'google-fonts'}-webfonts`;\n    const maxAgeSeconds = options.maxAgeSeconds || 60 * 60 * 24 * 365;\n    const maxEntries = options.maxEntries || 30;\n    // Cache the Google Fonts stylesheets with a stale-while-revalidate strategy.\n    registerRoute(({ url }) => url.origin === 'https://fonts.googleapis.com', new StaleWhileRevalidate({\n        cacheName: sheetCacheName,\n    }));\n    // Cache the underlying font files with a cache-first strategy for 1 year.\n    registerRoute(({ url }) => url.origin === 'https://fonts.gstatic.com', new CacheFirst({\n        cacheName: fontCacheName,\n        plugins: [\n            new CacheableResponsePlugin({\n                statuses: [0, 200],\n            }),\n            new ExpirationPlugin({\n                maxAgeSeconds,\n                maxEntries,\n            }),\n        ],\n    }));\n}\nexport { googleFontsCache };\n","import './_version.js';\n/**\n * @memberof module:workbox-recipes\n \n * @param {Object} options\n * @param {string[]} options.urls Paths to warm the strategy's cache with\n * @param {Strategy} options.strategy Strategy to use\n */\nfunction warmStrategyCache(options) {\n    self.addEventListener('install', event => {\n        const done = options.urls.map(path => options.strategy.handleAll({\n            event,\n            request: new Request(path),\n        })[1]);\n        event.waitUntil(Promise.all(done));\n    });\n}\nexport { warmStrategyCache };\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { warmStrategyCache } from './warmStrategyCache';\nimport { registerRoute } from 'workbox-routing/registerRoute.js';\nimport { CacheFirst } from 'workbox-strategies/CacheFirst.js';\nimport { CacheableResponsePlugin } from 'workbox-cacheable-response/CacheableResponsePlugin.js';\nimport { ExpirationPlugin } from 'workbox-expiration/ExpirationPlugin.js';\nimport './_version.js';\n/**\n * An implementation of the [image caching recipe]{@link https://developers.google.com/web/tools/workbox/guides/common-recipes#caching_images}\n *\n * @memberof module:workbox-recipes\n *\n * @param {Object} [options]\n * @param {string} [options.cacheName] Name for cache. Defaults to images\n* @param {RouteMatchCallback} [options.matchCallback] Workbox callback function to call to match to. Defaults to request.destination === 'image';\n * @param {number} [options.maxAgeSeconds] Maximum age, in seconds, that font entries will be cached for. Defaults to 30 days\n * @param {number} [options.maxEntries] Maximum number of images that will be cached. Defaults to 60\n * @param {WorkboxPlugin[]} [options.plugins] Additional plugins to use for this recipe\n * @param {string[]} [options.warmCache] Paths to call to use to warm this cache\n */\nfunction imageCache(options = {}) {\n    const defaultMatchCallback = ({ request }) => request.destination === 'image';\n    const cacheName = options.cacheName || 'images';\n    const matchCallback = options.matchCallback || defaultMatchCallback;\n    const maxAgeSeconds = options.maxAgeSeconds || 30 * 24 * 60 * 60;\n    const maxEntries = options.maxEntries || 60;\n    const plugins = (options.plugins || []);\n    plugins.push(new CacheableResponsePlugin({\n        statuses: [0, 200],\n    }));\n    plugins.push(new ExpirationPlugin({\n        maxEntries,\n        maxAgeSeconds\n    }));\n    const strategy = new CacheFirst({\n        cacheName,\n        plugins,\n    });\n    registerRoute(matchCallback, strategy);\n    // Warms the cache\n    if (options.warmCache) {\n        warmStrategyCache({ urls: options.warmCache, strategy });\n    }\n}\nexport { imageCache };\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { warmStrategyCache } from './warmStrategyCache';\nimport { registerRoute } from 'workbox-routing/registerRoute.js';\nimport { StaleWhileRevalidate } from 'workbox-strategies/StaleWhileRevalidate.js';\nimport { CacheableResponsePlugin } from 'workbox-cacheable-response/CacheableResponsePlugin.js';\nimport './_version.js';\n/**\n * An implementation of the [CSS and JavaScript files recipe]{@link https://developers.google.com/web/tools/workbox/guides/common-recipes#cache_css_and_javascript_files}\n *\n * @memberof module:workbox-recipes\n *\n * @param {Object} [options]\n * @param {string} [options.cacheName] Name for cache. Defaults to static-resources\n * @param {RouteMatchCallback} [options.matchCallback] Workbox callback function to call to match to. Defaults to request.destination === 'style' || request.destination === 'script' || request.destination === 'worker';\n * @param {WorkboxPlugin[]} [options.plugins] Additional plugins to use for this recipe\n * @param {string[]} [options.warmCache] Paths to call to use to warm this cache\n */\nfunction staticResourceCache(options = {}) {\n    const defaultMatchCallback = ({ request }) => request.destination === 'style' || request.destination === 'script' || request.destination === 'worker';\n    const cacheName = options.cacheName || 'static-resources';\n    const matchCallback = options.matchCallback || defaultMatchCallback;\n    const plugins = (options.plugins || []);\n    plugins.push(new CacheableResponsePlugin({\n        statuses: [0, 200],\n    }));\n    const strategy = new StaleWhileRevalidate({\n        cacheName,\n        plugins,\n    });\n    registerRoute(matchCallback, strategy);\n    // Warms the cache\n    if (options.warmCache) {\n        warmStrategyCache({ urls: options.warmCache, strategy });\n    }\n}\nexport { staticResourceCache };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { cacheOkAndOpaquePlugin } from './plugins/cacheOkAndOpaquePlugin.js';\nimport { Strategy } from './Strategy.js';\nimport { messages } from './utils/messages.js';\nimport './_version.js';\n/**\n * An implementation of a\n * [network first]{@link https://developers.google.com/web/fundamentals/instant-and-offline/offline-cookbook/#network-falling-back-to-cache}\n * request strategy.\n *\n * By default, this strategy will cache responses with a 200 status code as\n * well as [opaque responses]{@link https://developers.google.com/web/tools/workbox/guides/handle-third-party-requests}.\n * Opaque responses are are cross-origin requests where the response doesn't\n * support [CORS]{@link https://enable-cors.org/}.\n *\n * If the network request fails, and there is no cache match, this will throw\n * a `WorkboxError` exception.\n *\n * @extends module:workbox-strategies.Strategy\n * @memberof module:workbox-strategies\n */\nclass NetworkFirst extends Strategy {\n    /**\n     * @param {Object} [options]\n     * @param {string} [options.cacheName] Cache name to store and retrieve\n     * requests. Defaults to cache names provided by\n     * [workbox-core]{@link module:workbox-core.cacheNames}.\n     * @param {Array<Object>} [options.plugins] [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n     * to use in conjunction with this caching strategy.\n     * @param {Object} [options.fetchOptions] Values passed along to the\n     * [`init`](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters)\n     * of [non-navigation](https://github.com/GoogleChrome/workbox/issues/1796)\n     * `fetch()` requests made by this strategy.\n     * @param {Object} [options.matchOptions] [`CacheQueryOptions`](https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions)\n     * @param {number} [options.networkTimeoutSeconds] If set, any network requests\n     * that fail to respond within the timeout will fallback to the cache.\n     *\n     * This option can be used to combat\n     * \"[lie-fi]{@link https://developers.google.com/web/fundamentals/performance/poor-connectivity/#lie-fi}\"\n     * scenarios.\n     */\n    constructor(options = {}) {\n        super(options);\n        // If this instance contains no plugins with a 'cacheWillUpdate' callback,\n        // prepend the `cacheOkAndOpaquePlugin` plugin to the plugins list.\n        if (!this.plugins.some((p) => 'cacheWillUpdate' in p)) {\n            this.plugins.unshift(cacheOkAndOpaquePlugin);\n        }\n        this._networkTimeoutSeconds = options.networkTimeoutSeconds || 0;\n        if (process.env.NODE_ENV !== 'production') {\n            if (this._networkTimeoutSeconds) {\n                assert.isType(this._networkTimeoutSeconds, 'number', {\n                    moduleName: 'workbox-strategies',\n                    className: this.constructor.name,\n                    funcName: 'constructor',\n                    paramName: 'networkTimeoutSeconds',\n                });\n            }\n        }\n    }\n    /**\n     * @private\n     * @param {Request|string} request A request to run this strategy for.\n     * @param {module:workbox-strategies.StrategyHandler} handler The event that\n     *     triggered the request.\n     * @return {Promise<Response>}\n     */\n    async _handle(request, handler) {\n        const logs = [];\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-strategies',\n                className: this.constructor.name,\n                funcName: 'handle',\n                paramName: 'makeRequest',\n            });\n        }\n        const promises = [];\n        let timeoutId;\n        if (this._networkTimeoutSeconds) {\n            const { id, promise } = this._getTimeoutPromise({ request, logs, handler });\n            timeoutId = id;\n            promises.push(promise);\n        }\n        const networkPromise = this._getNetworkPromise({ timeoutId, request, logs, handler });\n        promises.push(networkPromise);\n        const response = await handler.waitUntil((async () => {\n            // Promise.race() will resolve as soon as the first promise resolves.\n            return await handler.waitUntil(Promise.race(promises)) ||\n                // If Promise.race() resolved with null, it might be due to a network\n                // timeout + a cache miss. If that were to happen, we'd rather wait until\n                // the networkPromise resolves instead of returning null.\n                // Note that it's fine to await an already-resolved promise, so we don't\n                // have to check to see if it's still \"in flight\".\n                await networkPromise;\n        })());\n        if (process.env.NODE_ENV !== 'production') {\n            logger.groupCollapsed(messages.strategyStart(this.constructor.name, request));\n            for (const log of logs) {\n                logger.log(log);\n            }\n            messages.printFinalResponse(response);\n            logger.groupEnd();\n        }\n        if (!response) {\n            throw new WorkboxError('no-response', { url: request.url });\n        }\n        return response;\n    }\n    /**\n     * @param {Object} options\n     * @param {Request} options.request\n     * @param {Array} options.logs A reference to the logs array\n     * @param {Event} options.event\n     * @return {Promise<Response>}\n     *\n     * @private\n     */\n    _getTimeoutPromise({ request, logs, handler }) {\n        let timeoutId;\n        const timeoutPromise = new Promise((resolve) => {\n            const onNetworkTimeout = async () => {\n                if (process.env.NODE_ENV !== 'production') {\n                    logs.push(`Timing out the network response at ` +\n                        `${this._networkTimeoutSeconds} seconds.`);\n                }\n                resolve(await handler.cacheMatch(request));\n            };\n            timeoutId = setTimeout(onNetworkTimeout, this._networkTimeoutSeconds * 1000);\n        });\n        return {\n            promise: timeoutPromise,\n            id: timeoutId,\n        };\n    }\n    /**\n     * @param {Object} options\n     * @param {number|undefined} options.timeoutId\n     * @param {Request} options.request\n     * @param {Array} options.logs A reference to the logs Array.\n     * @param {Event} options.event\n     * @return {Promise<Response>}\n     *\n     * @private\n     */\n    async _getNetworkPromise({ timeoutId, request, logs, handler }) {\n        let error;\n        let response;\n        try {\n            response = await handler.fetchAndCachePut(request);\n        }\n        catch (fetchError) {\n            error = fetchError;\n        }\n        if (timeoutId) {\n            clearTimeout(timeoutId);\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            if (response) {\n                logs.push(`Got response from network.`);\n            }\n            else {\n                logs.push(`Unable to get a response from the network. Will respond ` +\n                    `with a cached response.`);\n            }\n        }\n        if (error || !response) {\n            response = await handler.cacheMatch(request);\n            if (process.env.NODE_ENV !== 'production') {\n                if (response) {\n                    logs.push(`Found a cached response in the '${this.cacheName}'` +\n                        ` cache.`);\n                }\n                else {\n                    logs.push(`No response found in the '${this.cacheName}' cache.`);\n                }\n            }\n        }\n        return response;\n    }\n}\nexport { NetworkFirst };\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { warmStrategyCache } from './warmStrategyCache';\nimport { registerRoute } from 'workbox-routing/registerRoute.js';\nimport { NetworkFirst } from 'workbox-strategies/NetworkFirst.js';\nimport { CacheableResponsePlugin } from 'workbox-cacheable-response/CacheableResponsePlugin.js';\nimport './_version.js';\n/**\n * An implementation of a page caching recipe with a network timeout\n *\n * @memberof module:workbox-recipes\n *\n * @param {Object} [options]\n * @param {string} [options.cacheName] Name for cache. Defaults to pages\n * @param {RouteMatchCallback} [options.matchCallback] Workbox callback function to call to match to. Defaults to request.mode === 'navigate';\n * @param {number} [options.networkTimoutSeconds] Maximum amount of time, in seconds, to wait on the network before falling back to cache. Defaults to 3\n * @param {WorkboxPlugin[]} [options.plugins] Additional plugins to use for this recipe\n * @param {string[]} [options.warmCache] Paths to call to use to warm this cache\n */\nfunction pageCache(options = {}) {\n    const defaultMatchCallback = ({ request }) => request.mode === 'navigate';\n    const cacheName = options.cacheName || 'pages';\n    const matchCallback = options.matchCallback || defaultMatchCallback;\n    const networkTimeoutSeconds = options.networkTimeoutSeconds || 3;\n    const plugins = (options.plugins || []);\n    plugins.push(new CacheableResponsePlugin({\n        statuses: [0, 200],\n    }));\n    const strategy = new NetworkFirst({\n        networkTimeoutSeconds,\n        cacheName,\n        plugins,\n    });\n    // Registers the route\n    registerRoute(matchCallback, strategy);\n    // Warms the cache\n    if (options.warmCache) {\n        warmStrategyCache({ urls: options.warmCache, strategy });\n    }\n}\nexport { pageCache };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { getOrCreateDefaultRouter } from './utils/getOrCreateDefaultRouter.js';\nimport './_version.js';\n/**\n * If a Route throws an error while handling a request, this `handler`\n * will be called and given a chance to provide a response.\n *\n * @param {module:workbox-routing~handlerCallback} handler A callback\n * function that returns a Promise resulting in a Response.\n *\n * @memberof module:workbox-routing\n */\nfunction setCatchHandler(handler) {\n    const defaultRouter = getOrCreateDefaultRouter();\n    defaultRouter.setCatchHandler(handler);\n}\nexport { setCatchHandler };\n","/*\n  Copyright 2020 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * A utility method that makes it easier to use `event.waitUntil` with\n * async functions and return the result.\n *\n * @param {ExtendableEvent} event\n * @param {Function} asyncFn\n * @return {Function}\n * @private\n */\nfunction waitUntil(event, asyncFn) {\n    const returnPromise = asyncFn();\n    event.waitUntil(returnPromise);\n    return returnPromise;\n}\nexport { waitUntil };\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:precaching:6.1.5'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport '../_version.js';\n// Name of the search parameter used to store revision info.\nconst REVISION_SEARCH_PARAM = '__WB_REVISION__';\n/**\n * Converts a manifest entry into a versioned URL suitable for precaching.\n *\n * @param {Object|string} entry\n * @return {string} A URL with versioning info.\n *\n * @private\n * @memberof module:workbox-precaching\n */\nexport function createCacheKey(entry) {\n    if (!entry) {\n        throw new WorkboxError('add-to-cache-list-unexpected-type', { entry });\n    }\n    // If a precache manifest entry is a string, it's assumed to be a versioned\n    // URL, like '/app.abcd1234.js'. Return as-is.\n    if (typeof entry === 'string') {\n        const urlObject = new URL(entry, location.href);\n        return {\n            cacheKey: urlObject.href,\n            url: urlObject.href,\n        };\n    }\n    const { revision, url } = entry;\n    if (!url) {\n        throw new WorkboxError('add-to-cache-list-unexpected-type', { entry });\n    }\n    // If there's just a URL and no revision, then it's also assumed to be a\n    // versioned URL.\n    if (!revision) {\n        const urlObject = new URL(url, location.href);\n        return {\n            cacheKey: urlObject.href,\n            url: urlObject.href,\n        };\n    }\n    // Otherwise, construct a properly versioned URL using the custom Workbox\n    // search parameter along with the revision info.\n    const cacheKeyURL = new URL(url, location.href);\n    const originalURL = new URL(url, location.href);\n    cacheKeyURL.searchParams.set(REVISION_SEARCH_PARAM, revision);\n    return {\n        cacheKey: cacheKeyURL.href,\n        url: originalURL.href,\n    };\n}\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * A plugin, designed to be used with PrecacheController, to determine the\n * of assets that were updated (or not updated) during the install event.\n *\n * @private\n */\nclass PrecacheInstallReportPlugin {\n    constructor() {\n        this.updatedURLs = [];\n        this.notUpdatedURLs = [];\n        this.handlerWillStart = async ({ request, state, }) => {\n            // TODO: `state` should never be undefined...\n            if (state) {\n                state.originalRequest = request;\n            }\n        };\n        this.cachedResponseWillBeUsed = async ({ event, state, cachedResponse, }) => {\n            if (event.type === 'install') {\n                // TODO: `state` should never be undefined...\n                const url = state.originalRequest.url;\n                if (cachedResponse) {\n                    this.notUpdatedURLs.push(url);\n                }\n                else {\n                    this.updatedURLs.push(url);\n                }\n            }\n            return cachedResponse;\n        };\n    }\n}\nexport { PrecacheInstallReportPlugin };\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * A plugin, designed to be used with PrecacheController, to translate URLs into\n * the corresponding cache key, based on the current revision info.\n *\n * @private\n */\nclass PrecacheCacheKeyPlugin {\n    constructor({ precacheController }) {\n        this.cacheKeyWillBeUsed = async ({ request, params, }) => {\n            const cacheKey = params && params.cacheKey ||\n                this._precacheController.getCacheKeyForURL(request.url);\n            return cacheKey ? new Request(cacheKey) : request;\n        };\n        this._precacheController = precacheController;\n    }\n}\nexport { PrecacheCacheKeyPlugin };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport '../_version.js';\n/**\n * @param {string} groupTitle\n * @param {Array<string>} deletedURLs\n *\n * @private\n */\nconst logGroup = (groupTitle, deletedURLs) => {\n    logger.groupCollapsed(groupTitle);\n    for (const url of deletedURLs) {\n        logger.log(url);\n    }\n    logger.groupEnd();\n};\n/**\n * @param {Array<string>} deletedURLs\n *\n * @private\n * @memberof module:workbox-precaching\n */\nexport function printCleanupDetails(deletedURLs) {\n    const deletionCount = deletedURLs.length;\n    if (deletionCount > 0) {\n        logger.groupCollapsed(`During precaching cleanup, ` +\n            `${deletionCount} cached ` +\n            `request${deletionCount === 1 ? ' was' : 's were'} deleted.`);\n        logGroup('Deleted Cache Requests', deletedURLs);\n        logger.groupEnd();\n    }\n}\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport '../_version.js';\n/**\n * @param {string} groupTitle\n * @param {Array<string>} urls\n *\n * @private\n */\nfunction _nestedGroup(groupTitle, urls) {\n    if (urls.length === 0) {\n        return;\n    }\n    logger.groupCollapsed(groupTitle);\n    for (const url of urls) {\n        logger.log(url);\n    }\n    logger.groupEnd();\n}\n/**\n * @param {Array<string>} urlsToPrecache\n * @param {Array<string>} urlsAlreadyPrecached\n *\n * @private\n * @memberof module:workbox-precaching\n */\nexport function printInstallDetails(urlsToPrecache, urlsAlreadyPrecached) {\n    const precachedCount = urlsToPrecache.length;\n    const alreadyPrecachedCount = urlsAlreadyPrecached.length;\n    if (precachedCount || alreadyPrecachedCount) {\n        let message = `Precaching ${precachedCount} file${precachedCount === 1 ? '' : 's'}.`;\n        if (alreadyPrecachedCount > 0) {\n            message += ` ${alreadyPrecachedCount} ` +\n                `file${alreadyPrecachedCount === 1 ? ' is' : 's are'} already cached.`;\n        }\n        logger.groupCollapsed(message);\n        _nestedGroup(`View newly precached URLs.`, urlsToPrecache);\n        _nestedGroup(`View previously precached URLs.`, urlsAlreadyPrecached);\n        logger.groupEnd();\n    }\n}\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nlet supportStatus;\n/**\n * A utility function that determines whether the current browser supports\n * constructing a new `Response` from a `response.body` stream.\n *\n * @return {boolean} `true`, if the current browser can successfully\n *     construct a `Response` from a `response.body` stream, `false` otherwise.\n *\n * @private\n */\nfunction canConstructResponseFromBodyStream() {\n    if (supportStatus === undefined) {\n        const testResponse = new Response('');\n        if ('body' in testResponse) {\n            try {\n                new Response(testResponse.body);\n                supportStatus = true;\n            }\n            catch (error) {\n                supportStatus = false;\n            }\n        }\n        supportStatus = false;\n    }\n    return supportStatus;\n}\nexport { canConstructResponseFromBodyStream };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { canConstructResponseFromBodyStream } from './_private/canConstructResponseFromBodyStream.js';\nimport { WorkboxError } from './_private/WorkboxError.js';\nimport './_version.js';\n/**\n * Allows developers to copy a response and modify its `headers`, `status`,\n * or `statusText` values (the values settable via a\n * [`ResponseInit`]{@link https://developer.mozilla.org/en-US/docs/Web/API/Response/Response#Syntax}\n * object in the constructor).\n * To modify these values, pass a function as the second argument. That\n * function will be invoked with a single object with the response properties\n * `{headers, status, statusText}`. The return value of this function will\n * be used as the `ResponseInit` for the new `Response`. To change the values\n * either modify the passed parameter(s) and return it, or return a totally\n * new object.\n *\n * This method is intentionally limited to same-origin responses, regardless of\n * whether CORS was used or not.\n *\n * @param {Response} response\n * @param {Function} modifier\n * @memberof module:workbox-core\n */\nasync function copyResponse(response, modifier) {\n    let origin = null;\n    // If response.url isn't set, assume it's cross-origin and keep origin null.\n    if (response.url) {\n        const responseURL = new URL(response.url);\n        origin = responseURL.origin;\n    }\n    if (origin !== self.location.origin) {\n        throw new WorkboxError('cross-origin-copy-response', { origin });\n    }\n    const clonedResponse = response.clone();\n    // Create a fresh `ResponseInit` object by cloning the headers.\n    const responseInit = {\n        headers: new Headers(clonedResponse.headers),\n        status: clonedResponse.status,\n        statusText: clonedResponse.statusText,\n    };\n    // Apply any user modifications.\n    const modifiedResponseInit = modifier ? modifier(responseInit) : responseInit;\n    // Create the new response from the body stream and `ResponseInit`\n    // modifications. Note: not all browsers support the Response.body stream,\n    // so fall back to reading the entire body into memory as a blob.\n    const body = canConstructResponseFromBodyStream() ?\n        clonedResponse.body : await clonedResponse.blob();\n    return new Response(body, modifiedResponseInit);\n}\nexport { copyResponse };\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { copyResponse } from 'workbox-core/copyResponse.js';\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { Strategy } from 'workbox-strategies/Strategy.js';\nimport './_version.js';\n/**\n * A [Strategy]{@link module:workbox-strategies.Strategy} implementation\n * specifically designed to work with\n * [PrecacheController]{@link module:workbox-precaching.PrecacheController}\n * to both cache and fetch precached assets.\n *\n * Note: an instance of this class is created automatically when creating a\n * `PrecacheController`; it's generally not necessary to create this yourself.\n *\n * @extends module:workbox-strategies.Strategy\n * @memberof module:workbox-precaching\n */\nclass PrecacheStrategy extends Strategy {\n    /**\n     *\n     * @param {Object} [options]\n     * @param {string} [options.cacheName] Cache name to store and retrieve\n     * requests. Defaults to the cache names provided by\n     * [workbox-core]{@link module:workbox-core.cacheNames}.\n     * @param {Array<Object>} [options.plugins] [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n     * to use in conjunction with this caching strategy.\n     * @param {Object} [options.fetchOptions] Values passed along to the\n     * [`init`]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters}\n     * of all fetch() requests made by this strategy.\n     * @param {Object} [options.matchOptions] The\n     * [`CacheQueryOptions`]{@link https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions}\n     * for any `cache.match()` or `cache.put()` calls made by this strategy.\n     * @param {boolean} [options.fallbackToNetwork=true] Whether to attempt to\n     * get the response from the network if there's a precache miss.\n     */\n    constructor(options = {}) {\n        options.cacheName = cacheNames.getPrecacheName(options.cacheName);\n        super(options);\n        this._fallbackToNetwork = options.fallbackToNetwork === false ? false : true;\n        // Redirected responses cannot be used to satisfy a navigation request, so\n        // any redirected response must be \"copied\" rather than cloned, so the new\n        // response doesn't contain the `redirected` flag. See:\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=669363&desc=2#c1\n        this.plugins.push(PrecacheStrategy.copyRedirectedCacheableResponsesPlugin);\n    }\n    /**\n     * @private\n     * @param {Request|string} request A request to run this strategy for.\n     * @param {module:workbox-strategies.StrategyHandler} handler The event that\n     *     triggered the request.\n     * @return {Promise<Response>}\n     */\n    async _handle(request, handler) {\n        const response = await handler.cacheMatch(request);\n        if (!response) {\n            // If this is an `install` event then populate the cache. If this is a\n            // `fetch` event (or any other event) then respond with the cached\n            // response.\n            if (handler.event && handler.event.type === 'install') {\n                return await this._handleInstall(request, handler);\n            }\n            return await this._handleFetch(request, handler);\n        }\n        return response;\n    }\n    async _handleFetch(request, handler) {\n        let response;\n        // Fall back to the network if we don't have a cached response\n        // (perhaps due to manual cache cleanup).\n        if (this._fallbackToNetwork) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.warn(`The precached response for ` +\n                    `${getFriendlyURL(request.url)} in ${this.cacheName} was not ` +\n                    `found. Falling back to the network instead.`);\n            }\n            response = await handler.fetch(request);\n        }\n        else {\n            // This shouldn't normally happen, but there are edge cases:\n            // https://github.com/GoogleChrome/workbox/issues/1441\n            throw new WorkboxError('missing-precache-entry', {\n                cacheName: this.cacheName,\n                url: request.url,\n            });\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            const cacheKey = handler.params && handler.params.cacheKey ||\n                await handler.getCacheKey(request, 'read');\n            // Workbox is going to handle the route.\n            // print the routing details to the console.\n            logger.groupCollapsed(`Precaching is responding to: ` +\n                getFriendlyURL(request.url));\n            logger.log(`Serving the precached url: ${getFriendlyURL(cacheKey.url)}`);\n            logger.groupCollapsed(`View request details here.`);\n            logger.log(request);\n            logger.groupEnd();\n            logger.groupCollapsed(`View response details here.`);\n            logger.log(response);\n            logger.groupEnd();\n            logger.groupEnd();\n        }\n        return response;\n    }\n    async _handleInstall(request, handler) {\n        this._useDefaultCacheabilityPluginIfNeeded();\n        const response = await handler.fetch(request);\n        // Make sure we defer cachePut() until after we know the response\n        // should be cached; see https://github.com/GoogleChrome/workbox/issues/2737\n        const wasCached = await handler.cachePut(request, response.clone());\n        if (!wasCached) {\n            // Throwing here will lead to the `install` handler failing, which\n            // we want to do if *any* of the responses aren't safe to cache.\n            throw new WorkboxError('bad-precaching-response', {\n                url: request.url,\n                status: response.status,\n            });\n        }\n        return response;\n    }\n    /**\n     * This method is complex, as there a number of things to account for:\n     *\n     * The `plugins` array can be set at construction, and/or it might be added to\n     * to at any time before the strategy is used.\n     *\n     * At the time the strategy is used (i.e. during an `install` event), there\n     * needs to be at least one plugin that implements `cacheWillUpdate` in the\n     * array, other than `copyRedirectedCacheableResponsesPlugin`.\n     *\n     * - If this method is called and there are no suitable `cacheWillUpdate`\n     * plugins, we need to add `defaultPrecacheCacheabilityPlugin`.\n     *\n     * - If this method is called and there is exactly one `cacheWillUpdate`, then\n     * we don't have to do anything (this might be a previously added\n     * `defaultPrecacheCacheabilityPlugin`, or it might be a custom plugin).\n     *\n     * - If this method is called and there is more than one `cacheWillUpdate`,\n     * then we need to check if one is `defaultPrecacheCacheabilityPlugin`. If so,\n     * we need to remove it. (This situation is unlikely, but it could happen if\n     * the strategy is used multiple times, the first without a `cacheWillUpdate`,\n     * and then later on after manually adding a custom `cacheWillUpdate`.)\n     *\n     * See https://github.com/GoogleChrome/workbox/issues/2737 for more context.\n     *\n     * @private\n     */\n    _useDefaultCacheabilityPluginIfNeeded() {\n        let defaultPluginIndex = null;\n        let cacheWillUpdatePluginCount = 0;\n        for (const [index, plugin] of this.plugins.entries()) {\n            // Ignore the copy redirected plugin when determining what to do.\n            if (plugin === PrecacheStrategy.copyRedirectedCacheableResponsesPlugin) {\n                continue;\n            }\n            // Save the default plugin's index, in case it needs to be removed.\n            if (plugin === PrecacheStrategy.defaultPrecacheCacheabilityPlugin) {\n                defaultPluginIndex = index;\n            }\n            if (plugin.cacheWillUpdate) {\n                cacheWillUpdatePluginCount++;\n            }\n        }\n        if (cacheWillUpdatePluginCount === 0) {\n            this.plugins.push(PrecacheStrategy.defaultPrecacheCacheabilityPlugin);\n        }\n        else if (cacheWillUpdatePluginCount > 1 && defaultPluginIndex !== null) {\n            // Only remove the default plugin; multiple custom plugins are allowed.\n            this.plugins.splice(defaultPluginIndex, 1);\n        }\n        // Nothing needs to be done if cacheWillUpdatePluginCount is 1\n    }\n}\nPrecacheStrategy.defaultPrecacheCacheabilityPlugin = {\n    async cacheWillUpdate({ response }) {\n        if (!response || response.status >= 400) {\n            return null;\n        }\n        return response;\n    }\n};\nPrecacheStrategy.copyRedirectedCacheableResponsesPlugin = {\n    async cacheWillUpdate({ response }) {\n        return response.redirected ? await copyResponse(response) : response;\n    }\n};\nexport { PrecacheStrategy };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { waitUntil } from 'workbox-core/_private/waitUntil.js';\nimport { createCacheKey } from './utils/createCacheKey.js';\nimport { PrecacheInstallReportPlugin } from './utils/PrecacheInstallReportPlugin.js';\nimport { PrecacheCacheKeyPlugin } from './utils/PrecacheCacheKeyPlugin.js';\nimport { printCleanupDetails } from './utils/printCleanupDetails.js';\nimport { printInstallDetails } from './utils/printInstallDetails.js';\nimport { PrecacheStrategy } from './PrecacheStrategy.js';\nimport './_version.js';\n/**\n * Performs efficient precaching of assets.\n *\n * @memberof module:workbox-precaching\n */\nclass PrecacheController {\n    /**\n     * Create a new PrecacheController.\n     *\n     * @param {Object} [options]\n     * @param {string} [options.cacheName] The cache to use for precaching.\n     * @param {string} [options.plugins] Plugins to use when precaching as well\n     * as responding to fetch events for precached assets.\n     * @param {boolean} [options.fallbackToNetwork=true] Whether to attempt to\n     * get the response from the network if there's a precache miss.\n     */\n    constructor({ cacheName, plugins = [], fallbackToNetwork = true } = {}) {\n        this._urlsToCacheKeys = new Map();\n        this._urlsToCacheModes = new Map();\n        this._cacheKeysToIntegrities = new Map();\n        this._strategy = new PrecacheStrategy({\n            cacheName: cacheNames.getPrecacheName(cacheName),\n            plugins: [\n                ...plugins,\n                new PrecacheCacheKeyPlugin({ precacheController: this }),\n            ],\n            fallbackToNetwork,\n        });\n        // Bind the install and activate methods to the instance.\n        this.install = this.install.bind(this);\n        this.activate = this.activate.bind(this);\n    }\n    /**\n     * @type {module:workbox-precaching.PrecacheStrategy} The strategy created by this controller and\n     * used to cache assets and respond to fetch events.\n     */\n    get strategy() {\n        return this._strategy;\n    }\n    /**\n     * Adds items to the precache list, removing any duplicates and\n     * stores the files in the\n     * [\"precache cache\"]{@link module:workbox-core.cacheNames} when the service\n     * worker installs.\n     *\n     * This method can be called multiple times.\n     *\n     * @param {Array<Object|string>} [entries=[]] Array of entries to precache.\n     */\n    precache(entries) {\n        this.addToCacheList(entries);\n        if (!this._installAndActiveListenersAdded) {\n            self.addEventListener('install', this.install);\n            self.addEventListener('activate', this.activate);\n            this._installAndActiveListenersAdded = true;\n        }\n    }\n    /**\n     * This method will add items to the precache list, removing duplicates\n     * and ensuring the information is valid.\n     *\n     * @param {Array<module:workbox-precaching.PrecacheController.PrecacheEntry|string>} entries\n     *     Array of entries to precache.\n     */\n    addToCacheList(entries) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isArray(entries, {\n                moduleName: 'workbox-precaching',\n                className: 'PrecacheController',\n                funcName: 'addToCacheList',\n                paramName: 'entries',\n            });\n        }\n        const urlsToWarnAbout = [];\n        for (const entry of entries) {\n            // See https://github.com/GoogleChrome/workbox/issues/2259\n            if (typeof entry === 'string') {\n                urlsToWarnAbout.push(entry);\n            }\n            else if (entry && entry.revision === undefined) {\n                urlsToWarnAbout.push(entry.url);\n            }\n            const { cacheKey, url } = createCacheKey(entry);\n            const cacheMode = (typeof entry !== 'string' && entry.revision) ?\n                'reload' : 'default';\n            if (this._urlsToCacheKeys.has(url) &&\n                this._urlsToCacheKeys.get(url) !== cacheKey) {\n                throw new WorkboxError('add-to-cache-list-conflicting-entries', {\n                    firstEntry: this._urlsToCacheKeys.get(url),\n                    secondEntry: cacheKey,\n                });\n            }\n            if (typeof entry !== 'string' && entry.integrity) {\n                if (this._cacheKeysToIntegrities.has(cacheKey) &&\n                    this._cacheKeysToIntegrities.get(cacheKey) !== entry.integrity) {\n                    throw new WorkboxError('add-to-cache-list-conflicting-integrities', {\n                        url,\n                    });\n                }\n                this._cacheKeysToIntegrities.set(cacheKey, entry.integrity);\n            }\n            this._urlsToCacheKeys.set(url, cacheKey);\n            this._urlsToCacheModes.set(url, cacheMode);\n            if (urlsToWarnAbout.length > 0) {\n                const warningMessage = `Workbox is precaching URLs without revision ` +\n                    `info: ${urlsToWarnAbout.join(', ')}\\nThis is generally NOT safe. ` +\n                    `Learn more at https://bit.ly/wb-precache`;\n                if (process.env.NODE_ENV === 'production') {\n                    // Use console directly to display this warning without bloating\n                    // bundle sizes by pulling in all of the logger codebase in prod.\n                    console.warn(warningMessage);\n                }\n                else {\n                    logger.warn(warningMessage);\n                }\n            }\n        }\n    }\n    /**\n     * Precaches new and updated assets. Call this method from the service worker\n     * install event.\n     *\n     * Note: this method calls `event.waitUntil()` for you, so you do not need\n     * to call it yourself in your event handlers.\n     *\n     * @param {ExtendableEvent} event\n     * @return {Promise<module:workbox-precaching.InstallResult>}\n     */\n    install(event) {\n        return waitUntil(event, async () => {\n            const installReportPlugin = new PrecacheInstallReportPlugin();\n            this.strategy.plugins.push(installReportPlugin);\n            // Cache entries one at a time.\n            // See https://github.com/GoogleChrome/workbox/issues/2528\n            for (const [url, cacheKey] of this._urlsToCacheKeys) {\n                const integrity = this._cacheKeysToIntegrities.get(cacheKey);\n                const cacheMode = this._urlsToCacheModes.get(url);\n                const request = new Request(url, {\n                    integrity,\n                    cache: cacheMode,\n                    credentials: 'same-origin',\n                });\n                await Promise.all(this.strategy.handleAll({\n                    params: { cacheKey },\n                    request,\n                    event,\n                }));\n            }\n            const { updatedURLs, notUpdatedURLs } = installReportPlugin;\n            if (process.env.NODE_ENV !== 'production') {\n                printInstallDetails(updatedURLs, notUpdatedURLs);\n            }\n            return { updatedURLs, notUpdatedURLs };\n        });\n    }\n    /**\n     * Deletes assets that are no longer present in the current precache manifest.\n     * Call this method from the service worker activate event.\n     *\n     * Note: this method calls `event.waitUntil()` for you, so you do not need\n     * to call it yourself in your event handlers.\n     *\n     * @param {ExtendableEvent} event\n     * @return {Promise<module:workbox-precaching.CleanupResult>}\n     */\n    activate(event) {\n        return waitUntil(event, async () => {\n            const cache = await self.caches.open(this.strategy.cacheName);\n            const currentlyCachedRequests = await cache.keys();\n            const expectedCacheKeys = new Set(this._urlsToCacheKeys.values());\n            const deletedURLs = [];\n            for (const request of currentlyCachedRequests) {\n                if (!expectedCacheKeys.has(request.url)) {\n                    await cache.delete(request);\n                    deletedURLs.push(request.url);\n                }\n            }\n            if (process.env.NODE_ENV !== 'production') {\n                printCleanupDetails(deletedURLs);\n            }\n            return { deletedURLs };\n        });\n    }\n    /**\n     * Returns a mapping of a precached URL to the corresponding cache key, taking\n     * into account the revision information for the URL.\n     *\n     * @return {Map<string, string>} A URL to cache key mapping.\n     */\n    getURLsToCacheKeys() {\n        return this._urlsToCacheKeys;\n    }\n    /**\n     * Returns a list of all the URLs that have been precached by the current\n     * service worker.\n     *\n     * @return {Array<string>} The precached URLs.\n     */\n    getCachedURLs() {\n        return [...this._urlsToCacheKeys.keys()];\n    }\n    /**\n     * Returns the cache key used for storing a given URL. If that URL is\n     * unversioned, like `/index.html', then the cache key will be the original\n     * URL with a search parameter appended to it.\n     *\n     * @param {string} url A URL whose cache key you want to look up.\n     * @return {string} The versioned URL that corresponds to a cache key\n     * for the original URL, or undefined if that URL isn't precached.\n     */\n    getCacheKeyForURL(url) {\n        const urlObject = new URL(url, location.href);\n        return this._urlsToCacheKeys.get(urlObject.href);\n    }\n    /**\n     * This acts as a drop-in replacement for\n     * [`cache.match()`](https://developer.mozilla.org/en-US/docs/Web/API/Cache/match)\n     * with the following differences:\n     *\n     * - It knows what the name of the precache is, and only checks in that cache.\n     * - It allows you to pass in an \"original\" URL without versioning parameters,\n     * and it will automatically look up the correct cache key for the currently\n     * active revision of that URL.\n     *\n     * E.g., `matchPrecache('index.html')` will find the correct precached\n     * response for the currently active service worker, even if the actual cache\n     * key is `'/index.html?__WB_REVISION__=1234abcd'`.\n     *\n     * @param {string|Request} request The key (without revisioning parameters)\n     * to look up in the precache.\n     * @return {Promise<Response|undefined>}\n     */\n    async matchPrecache(request) {\n        const url = request instanceof Request ? request.url : request;\n        const cacheKey = this.getCacheKeyForURL(url);\n        if (cacheKey) {\n            const cache = await self.caches.open(this.strategy.cacheName);\n            return cache.match(cacheKey);\n        }\n        return undefined;\n    }\n    /**\n     * Returns a function that looks up `url` in the precache (taking into\n     * account revision information), and returns the corresponding `Response`.\n     *\n     * @param {string} url The precached URL which will be used to lookup the\n     * `Response`.\n     * @return {module:workbox-routing~handlerCallback}\n     */\n    createHandlerBoundToURL(url) {\n        const cacheKey = this.getCacheKeyForURL(url);\n        if (!cacheKey) {\n            throw new WorkboxError('non-precached-url', { url });\n        }\n        return (options) => {\n            options.request = new Request(url);\n            options.params = { cacheKey, ...options.params };\n            return this.strategy.handle(options);\n        };\n    }\n}\nexport { PrecacheController };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { PrecacheController } from '../PrecacheController.js';\nimport '../_version.js';\nlet precacheController;\n/**\n * @return {PrecacheController}\n * @private\n */\nexport const getOrCreatePrecacheController = () => {\n    if (!precacheController) {\n        precacheController = new PrecacheController();\n    }\n    return precacheController;\n};\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { getOrCreatePrecacheController } from './utils/getOrCreatePrecacheController.js';\nimport './_version.js';\n/**\n * Helper function that calls\n * {@link PrecacheController#matchPrecache} on the default\n * {@link PrecacheController} instance.\n *\n * If you are creating your own {@link PrecacheController}, then call\n * {@link PrecacheController#matchPrecache} on that instance,\n * instead of using this function.\n *\n * @param {string|Request} request The key (without revisioning parameters)\n * to look up in the precache.\n * @return {Promise<Response|undefined>}\n *\n * @memberof module:workbox-precaching\n */\nfunction matchPrecache(request) {\n    const precacheController = getOrCreatePrecacheController();\n    return precacheController.matchPrecache(request);\n}\nexport { matchPrecache };\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { setCatchHandler } from 'workbox-routing/setCatchHandler.js';\nimport { matchPrecache } from 'workbox-precaching/matchPrecache.js';\nimport './_version.js';\n/**\n * An implementation of the [comprehensive fallbacks recipe]{@link https://developers.google.com/web/tools/workbox/guides/advanced-recipes#comprehensive_fallbacks}. Be sure to include the fallbacks in your precache injection\n *\n * @memberof module:workbox-recipes\n *\n * @param {Object} [options]\n * @param {string} [options.pageFallback] Precache name to match for pag fallbacks. Defaults to offline.html\n * @param {string} [options.imageFallback] Precache name to match for image fallbacks.\n * @param {string} [options.fontFallback] Precache name to match for font fallbacks.\n */\nfunction offlineFallback(options = {}) {\n    const pageFallback = options.pageFallback || 'offline.html';\n    const imageFallback = options.imageFallback || false;\n    const fontFallback = options.fontFallback || false;\n    self.addEventListener('install', event => {\n        const files = [pageFallback];\n        if (imageFallback) {\n            files.push(imageFallback);\n        }\n        if (fontFallback) {\n            files.push(fontFallback);\n        }\n        event.waitUntil(self.caches.open('workbox-offline-fallbacks').then(cache => cache.addAll(files)));\n    });\n    const handler = async (options) => {\n        const dest = options.request.destination;\n        const cache = await self.caches.open('workbox-offline-fallbacks');\n        if (dest === \"document\") {\n            const match = await matchPrecache(pageFallback) || await cache.match(pageFallback);\n            return match || Response.error();\n        }\n        if (dest === \"image\" && imageFallback !== false) {\n            const match = await matchPrecache(imageFallback) || await cache.match(imageFallback);\n            return match || Response.error();\n        }\n        if (dest === \"font\" && fontFallback !== false) {\n            const match = await matchPrecache(fontFallback) || await cache.match(fontFallback);\n            return match || Response.error();\n        }\n        return Response.error();\n    };\n    setCatchHandler(handler);\n}\nexport { offlineFallback };\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { googleFontsCache } from './googleFontsCache';\nimport { imageCache } from './imageCache';\nimport { staticResourceCache } from './staticResourceCache';\nimport { pageCache } from './pageCache';\nimport { offlineFallback } from './offlineFallback';\nimport { warmStrategyCache } from './warmStrategyCache';\nimport './_version.js';\n/**\n * @module workbox-recipes\n */\nexport { googleFontsCache, imageCache, staticResourceCache, pageCache, offlineFallback, warmStrategyCache };\n","export * from './index.js';","import {googleFontsCache} from 'workbox-recipes'\n\n// cache any loaded google fonts\ngoogleFontsCache();\n\n// listen for a client giving us messages\nself.addEventListener('message', function (event) {\n    // client asked to begin using this new worker (see onAppUpdated)\n    if (event.data.action === 'skipWaiting') {\n        self.skipWaiting();\n    }\n});"]}